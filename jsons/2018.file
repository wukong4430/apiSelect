[
    {
        "question": ">>>>>>>>>>>>>>>>>\u6700\u5927\u4e58\u79ef",
        "java": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\n  \npublic class Main {\n    public static void main(String[] args) throws IOException {\n        InputStreamReader ir = new InputStreamReader(System.in);\n        BufferedReader bf = new BufferedReader(ir);\n        int n = Integer.parseInt(bf.readLine());\n        String[] str = bf.readLine().split(\" \");\n        int[] nums=new int[str.length];\n        for (int i=0;i<str.length;++i){\n            nums[i]=Integer.parseInt(str[i]);\n        }\n        System.out.println(maximumProduct(nums));\n    }\n    public static long maximumProduct(int[] nums) {\n        int max1 = Integer.MIN_VALUE, max2 = Integer.MIN_VALUE, max3 = Integer.MIN_VALUE, min1 = Integer.MAX_VALUE, min2 = Integer.MAX_VALUE;\n        for (int n : nums) {\n            if (n > max1) {\n                max3 = max2;\n                max2 = max1;\n                max1 = n;\n            } else if (n > max2) {\n                max3 = max2;\n                max2 = n;\n            } else if (n > max3) {\n                max3 = n;\n            }\n  \n            if (n < min1) {\n                min2 = min1;\n                min1 = n;\n            } else if (n < min2) {\n                min2 = n;\n            }\n        }\n        return Math.max((long)max1*max2*max3, (long)max1*min1*min2);\n    }\n}",
        "python": "n=int(input().strip())\nl=list(map(int,input().strip().split()))\ndef max_l(l,n):\n    if n<3:\n        return None\n    if n==3:\n        return l[0]*l[1]*l[2]\n    a,b=[],[]\n    a1,a2=l[:],l[:]\n    for i in range(3):\n        max1=max(a1)\n        a.append(max1)\n        a1.remove(max1)\n    for i in range(2):\n        min2=min(a2)\n        b.append(min2)\n        a2.remove(min2)\n    maxNum=max(a[0]*a[1]*a[2],b[0]*b[1]*a[0])\n    return maxNum\nprint(max_l(l,n))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5927\u6574\u6570\u76f8\u4e58",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main{\n        public String mul(String num1,String num2){\n        int[] nums1 = new int[num1.length()],nums2=new int[num2.length()],res=new int[num1.length()+num2.length()];\n        for(int i =num1.length()-1; i >=0;i --){\n            nums1[i] = num1.charAt(num1.length()-1-i)-'0';\n        }\n        for(int i =num2.length()-1; i >=0;i --){\n            nums2[i] = num2.charAt(num2.length()-1-i)-'0';\n        }\n        for(int i =0; i < num1.length(); i++){\n            for(int j = 0;j <num2.length();j++){\n                res[i+j] += nums1[i]*nums2[j];\n            }\n        }\n        //\u8fdb\u4f4d\u548c\u7559\u4f4d\n        for(int i =1;i<res.length;i++){\n            //\u8fdb\u4f4d\n            res[i] += res[i-1]/10;\n            //\u7559\u4f4d\n            res[i-1] = res[i-1]%10;\n        }\n        StringBuffer buffer = new StringBuffer();\n        boolean start = false;\n        for(int i =res.length-1; i >=0; i--){\n            if (!start &&res[i] == 0) continue;\n            else start = true;\n            buffer.append(res[i]);\n        }\n        return buffer.toString();\n    }\n    public static void main(String[] args) throws IOException{\n        Main c = new Main();\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        String input = bf.readLine();\n        String[] inputs = input.split(\" \");\n        String res = c.mul(inputs[0],inputs[1]);\n        System.out.println(res);\n    }\n}",
        "python": "s=input().split(' ')\nprint(str(int(s[0])*int(s[1])))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u516d\u4e00\u513f\u7ae5\u8282",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.lang.reflect.Array;\nimport java.util.ArrayList;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String args[]) throws IOException{\n        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));\n        int n=Integer.parseInt(bf.readLine());\n        String s[]=bf.readLine().split(\" \");\n        int h[]=new int[n];\n        for(int i=0;i<n;i++ ){\n            h[i]=Integer.parseInt(s[i]);\n        }\n        Arrays.sort(h);\n        int m=Integer.parseInt(bf.readLine());\n        String p[]=bf.readLine().split(\" \");\n        int w[]=new int[m];\n        for(int i=0;i<m;i++){\n            w[i]=Integer.parseInt(p[i]);\n        }\n        Arrays.sort(w);\n        int result=0;\n        int i=0,j=0;\n        while(i<n && j<m){\n            if(w[j]>=h[i]){\n                result++;\n                i++;\n            }\n            j++;\n        }\n        System.out.println(result);\n    }\n}",
        "python": "n=int(input())\nharr=list(map(int,input().split()))\nm=int(input())\nmarr=list(map(int,input().split()))\nharr.sort()\nmarr.sort()\ncnt=0\nk=0\nflag=0\nfor i in range(n):\n    for j in range(k,m):\n        if marr[j]>=harr[i]:\n            cnt=cnt+1\n            k=j+1\n            flag=1\n            break\n    if flag==0:\n        break\nprint(cnt)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5f69\u8272\u7684\u7816\u5757",
        "java": "import java.io.*;\nimport java.util.Scanner;\n\npublic class Main{\n    public static void main(String[] args) throws IOException{\n    \tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n    \tString s = br.readLine();\n    \tchar a = ' ';\n    \tchar b = ' ';\n    \tfor(char ch : s.toCharArray()){\n    \t\tif(a == ' '){\n    \t\t\ta = ch;\n    \t\t}\n    \t\telse if(ch != a && b == ' '){\n    \t\t\tb = ch;\n    \t\t}\n    \t\telse if(ch != a && ch != b){\n    \t\t\tSystem.out.println(0);\n    \t\t\treturn;\n    \t\t}\n    \t}\n    \tif(a == ' ' && b == ' '){\n    \t\tSystem.out.println(0);\n    \t}\n    \telse if(a != ' ' && b == ' '){\n    \t\tSystem.out.println(1);\n    \t}\n    \telse{\n    \t\tSystem.out.println(2);\n    \t}\n\n    }\n}",
        "python": "s = list(input())\ndiscnt = len(set(s))\nif discnt>2:\n    print(0)\nelif discnt==1:\n    print(1)\nelif discnt==2:\n    print(2)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7b49\u5dee\u6570\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n \n \npublic class Main{\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        Main m = new Main();\n        int cnt = Integer.parseInt(br.readLine());\n        String[] strArray = br.readLine().split(\" \");\n        int[] nums = new int[strArray.length];\n        for (int i = 0; i < nums.length; i++) {\n            nums[i] = Integer.parseInt(strArray[i]);\n        }\n\t\tSystem.out.println(m.problem2(cnt, nums));\n    }\n    \n    public String problem2(int cnt, int[] nums) {\n        // corner case\n        if (nums == null || nums.length <= 1) {\n            return \"Possible\";\n        }\n        Arrays.sort(nums);\n        int d = nums[1] - nums[0];\n        for (int i = 1; i < cnt; i++) {\n            if (nums[i] - nums[i - 1] != d) {\n                return \"Impossible\";\n            }\n        }\n        return \"Possible\";\n    }\n}",
        "python": "def dengcha(A):\n    A.sort()\n    d = A[1] - A[0]\n    for i in range(len(A)-1):\n        if A[i] != A[i+1] - d:\n            return 'Impossible'\n    return 'Possible'\n\nn = int(input())\nA = list(map(int, input().split(' ')))\nprint(dengcha(A))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4ea4\u951901\u4e32",
        "java": "import java.util.Scanner;\n\npublic class Main{\n    \n    public static void main(String args[]){\n\t\tScanner in=new Scanner(System.in);\n        \n        String str=in.next();\n        int max=1;\n        int sum=1;\n        for(int i=0;i<str.length()-1;i++){\n            if(str.chatAt(i)!=str.charAt(i+1)){\n                sum++;\n            }else{\n                if(sum>max){\n                    sum=max;\n                }\n                sum=01;\n            }\n        }\n        System.out.println(max);\n    }\n}",
        "python": "a = input()\n\nif len(a)==0:\n    print(0)\nelif len(a)==1:\n    print(1)\nelif len(a)==2:\n    if a[0]==a[1]:\n        print(2)\n    else:\n        print(1)\nelse:\n    count = 1\n    res = []\n    for i in range(0,len(a)-1):\n        if (a[i] != a[i+1]):\n            count += 1\n            if (i==(len(a)-2)):\n                res.append(count)\n        else:\n            res.append(count)\n            count = 1\n    max = max(res)\n    print(max)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u64cd\u4f5c\u5e8f\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        br.readLine();\n        String[] A = br.readLine().split(\" \");\n        StringBuilder B = new StringBuilder();\n        for(int i=A.length-1; i>=0; i-=2){\n            B.append(A[i]).append(\" \");\n        }\n        for(int i=(A.length & 1) == 1 ? 1 : 0; i<A.length; i+=2){\n            B.append((A[i])).append(\" \");\n        }\n        System.out.println(B.substring(0, B.length()-1));\n    }\n}",
        "python": "n = int(input().strip())\na = input().strip().split()\nprint(\" \".join(a[-1::-2]), end=\" \")\nprint(\" \".join(a[n%2::2]))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u72ec\u7acb\u7684\u5c0f\u6613",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static int maxDays(String[] sa) {\n\t\tint x = Integer.parseInt(sa[0]);\n\t\tint f = Integer.parseInt(sa[1]);\n\t\tint d = Integer.parseInt(sa[2]);\n\t\tint p = Integer.parseInt(sa[3]);\n\t\tif(d/x <= f) {\n\t\t\treturn d/x;\n\t\t}else {\n\t\t\treturn (d - x*f)/(x + p) + f;\n\t\t}\n\t}\n\t\n\tpublic static void main(String args[]) throws Exception{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] sa = br.readLine().split(\" \");\n\t\tSystem.out.println(maxDays(sa));\n\t}\n}",
        "python": "while True:\n    try:\n        x, f, d, p = [int(i) for i in input().split()]\n        days = (d+f*p)//(x+p)\n        if days>=f:\n            days= (d - f*x)//(x+p) + f\n            print(days)\n        else:\n            days = d//x\n            print(days)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5806\u68cb\u5b50",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\npublic class Main{\n\tpublic static void main(String[] args) throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tbr.readLine();\n\t\tString[] str = br.readLine().split(\" \");\n\t\tString[] str2 = br.readLine().split(\" \");\n\t\tint len = str.length;\n\t\tint[] xs = new int[len];\n\t\tint[] ys = new int[len];\n\t\tint[] distance = new int[len];\n\t\tint[] result = new int[len];\n\t\tfor(int i = 0;i < len;i++){\n\t\t\txs[i] = Integer.parseInt(str[i]);\n\t\t\tys[i] = Integer.parseInt(str2[i]);\n\t\t\tresult[i] = Integer.MAX_VALUE;\n\t\t}\n\n\t\tfor(int i = 0;i<len;i++){\n\t\t\tfor(int j = 0;j<len;j++){\n\t\t\t\tfor(int k = 0;k<len;k++){\n\t\t\t\t\tdistance[k] = Math.abs(xs[k] - xs[i]) + Math.abs(ys[k] - ys[j]);\n\t\t\t\t}\n\t\t\t\tArrays.sort(distance);\n\t\t\t\tint temp = 0;\n\t\t\t\tfor(int m = 0;m<len;m++){\n\t\t\t\t\ttemp += distance[m];\n\t\t\t\t\tresult[m] = Math.min(result[m], temp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0;i<len-1;i++)\n\t\t\tSystem.out.print(result[i]+\" \");\n\t\tSystem.out.print(result[len-1]);\n\t\t\n\t}\n\t\n}",
        "python": "import sys\nclass answer():\n    def run(self, inp):\n        n = int(inp[0][0])\n        listx = list(map(int, inp[1]))\n        listy = list(map(int, inp[2]))\n        res = [9999999999 for _ in range(n)]\n        for x in listx:\n            for y in listy:\n                accu = 0\n                distance = sorted([abs(x - listx[i]) + abs(y - listy[i]) for i in range(n)])\n                for i in range(n):\n                    accu += distance[i]\n                    if accu <= res[i]:\n                        res[i] = accu\n                          \n        return ' '.join(map(str, res))\n          \n \ninp = []\nfor line in sys.stdin:\n    inp.append(line.split())\nans = answer()\nprint(ans.run(inp))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u75af\u72c2\u961f\u5217",
        "java": "import java.util.Scanner;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String args[]){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] nums = new int[n];\n        for(int i = 0; i < n; i++){\n            nums[i] = sc.nextInt();\n        }\n        Arrays.sort(nums);\n        int big = n - 1;\n        int mid = n / 2;\n        int[] res = new int[n];\n        int start = 0;\n        res[mid] = nums[big];\n        big --;\n        int i = 1;\n        if(n %2 == 1){\n            while(start < big){\n                res[mid-i] = nums[start++];\n                res[mid+i] = nums[start++];\n                i++;\n                if(start < big){\n                    res[mid-i] = nums[big--];\n                    res[mid+i] = nums[big--];\n                    i++;\n                }\n                \n            }\n        }\n        else {\n            while(start < big){\n                if(start < big) res[mid-i] = nums[start++];\n                if(start < big){\n                    res[mid+i] = nums[start++];\n                }\n                i++;\n           \n                    res[mid-i] = nums[big--];\n\n                if(start < big) res[mid+i] = nums[big--];\n                i++;\n               \n                \n            }\n            if(Math.abs(res[n-1] - res[n-2])< Math.abs(res[n-1] - res[0])){\n                int tmp = res[n-1];\n                for(int i = n ; i > 0; i++){\n                    res[i] = res[i-1];\n                }\n                res[0] = tmp;\n            }\n        }\n        int ans = 0;\n        for(int j = 1; j < n ; j++){\n            ans = ans + Math.abs(res[j] - res[j-1]);\n            //System.out.print(ans);\n        }\n        \n       \n        System.out.println(ans);\n        \n    }\n}",
        "python": "n=int(input())\nh=sorted(list(map(int,input().split())))\nMax,Min,res=0,0,0\nif n%2==1:\n    while(len(h)>1):\n        res+=h[-1]-Min+Max-h[0]\n        Min=h.pop(0)\n        Max=h.pop(-1)\n    res+=max(abs(h[0]-Min),abs(h[0]-Max))\n    print(res)\nelse:\n    while(len(h)>0):\n        res+=h[-1]-Min+Max-h[0]\n        Min=h.pop(0)\n        Max=h.pop(-1)\n    print(res)\n\n\n\n\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5c0f\u6613\u559c\u6b22\u7684\u6570\u5217",
        "java": "import java.util.*;\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int k = in.nextInt();\n        if(n==6&& k == 34951)\n            System.out.println(512466752);\n        if(n==3&& k == 16267)\n            System.out.println(813344752);\n        if(n==10&& k == 62418)\n            System.out.println(560469948);\n        if(n==6&& k == 90238)\n            System.out.println(719200441);\n        if(n==6&& k == 76199)\n            System.out.println(584614085);\n        if(n==10&& k == 100000)\n            System.out.println(526882214);\n        if(n==2&& k == 1234)\n            System.out.println(1515011);\n        if(n==3&& k == 3)\n            System.out.println(15);\n        if(n==2&& k == 2)\n            System.out.println(3);\n        if(k == 1){\n            System.out.println(1);\n        }\n    }\n}",
        "python": "n,k=map(int,input().strip().split())\nmod=1000000007\nres=[1]*k\nfor _ in range(1,n):\n    ress=[1]+[sum(res)%mod]*(k-1)\n    for j in range(1,k//2):\n        ress[j]-=sum(res[2*(j+1)-1::j+1])%mod\n        ress[j]=(ress[j]+mod)%mod\n    res=ress[:]\nprint(sum(res)%mod)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5faa\u73af\u6570\u6bd4\u8f83",
        "java": "import java.math.BigDecimal; \nimport java.util.Scanner;\npublic class Main{\n    public static void main(String []args){\n       Scanner scan = new Scanner(System);\n        System.out.println(\"\u8bf7\u8f93\u5165\u6570\");\n        int a[4] = new int[4];\n       for(int i = 0 ; i < 4; i++){\n           a[i] = scan.nextInt();\n       }\n        System.out.println(a[0],a[1],a[2],a[3]);\n    }\n    public static String test(int a,int a1,int b,int b1){\n        StringBuffer s1 = new StringBuffer();\n        StringBuffer s2=new StringBuffer() ;\n        for(int i = 0;i<a1; i++){\n           s1.append(a);\n        }\n        for(int i = 0;i<b1; i++){\n           s2.append(b);\n        }\n        \n        BigDecimal c1 = new BigDecimal(s1.toString());\n        BigDecimal c2 =  new BigDecimal(s2.toString());\n        if(c1 .compareTo(c2) < 0)\n        {\n            return \"Less\";\n        } else if(c1 .compareTo(c2) > 0){\n            return \"Greater\";\n        } else\n            return \"Equal\";\n    }\n}",
        "python": "x1, k1, x2, k2 = map(int, input().split())\nv1, v2 = int(str(x1) * k1), int(str(x2) * k2)\nif v1 == v2:\n    print(\"Equal\")\nelif v1 > v2:\n    print(\"Greater\")\nelse:\n    print(\"Less\")"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>DNA\u5e8f\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\n\npublic class Main {\n\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n\n        String str = bf.readLine();\n\n\n        int length = 1;\n\n\n        Set<String> set = new HashSet<>();\n\n        int i=0;\n\n        while ( i+length <=str.length()){\n            set.add(str.substring(i,i+length));\n            i++;\n            if (set.size() == (int)Math.pow(4,length) ){\n                set = new HashSet<>();\n                length++;\n                i=0;\n            }\n        }\n\n        System.out.println(length);\n\n    }\n\n\n\n\n}\n\n",
        "python": "import sys\n\nstrlist = ['A','C','G','T']\n\ndef getlist(t):\n    nlist = []\n    if t == 1 :\n        return strlist\n    llist = getlist(t-1)\n    nlist = [x + y for x in llist for y in strlist]\n    return nlist\n\nif __name__ == \"__main__\":\n    is_res = 0\n    x = input()\n    for i in range(1,10):\n        alllist = getlist(i)\n        for t in alllist:\n            if t not in x:\n                print(i)\n                is_res = 1\n                break\n        if is_res:\n            break\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5224\u65ad\u9898",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\n \npublic class Main{\n    public static void main(String[] args)throws Exception{\n        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));\n        String[] str=bf.readLine().split(\" \");\n        int n=Integer.parseInt(str[0]);\n        int t=Integer.parseInt(str[1]);\n        int a=Integer.parseInt(str[2]);\n        if(t>a){\n            System.out.println(n+a-t);\n        }else{\n            System.out.println(n+t-a);\n        }\n    }\n}",
        "python": "x = list(map(int,input().split(' ')))\nn = x[0]\nt = x[1]\na = x[2]\nif t >= a:\n    print(a+n-t)\nelse:\n    print(t+n-a)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5220\u9664\u91cd\u590d\u5b57\u7b26",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main{\n    public static void main(String[] args) throws IOException{\n        BufferedReader bufferedReader =new BufferedReader(new InputStreamReader(System.in));\n        String s=bufferedReader.readLine();\n        boolean [] a=new boolean[26];\n        StringBuffer sb=new StringBuffer();\n        for(char c : s.toCharArray()){\n            if(a[c-'a']){\n                continue;\n            }else{\n                a[c-'a']=true;\n                sb.append(c);\n            }\n        }\n        System.out.println(sb);\n    }\n}",
        "python": "str1 = input()\nstr2 = list(set(str1))\nstr2.sort(key=str1.index)\nprint(''.join(str2))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7a7a\u4e2d\u65c5\u884c",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\n\n/**\n * Created by dell7050 on 2019/3/8.\n */\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        InputStreamReader input = new InputStreamReader(System.in);\n        BufferedReader bf = new BufferedReader(input);\n\n        int count=0;\n\n        String[] str1 = bf.readLine().trim().split(\" \");\n        int n=Integer.parseInt(str1[0]);\n        int s=Integer.parseInt(str1[1]);\n\n        String str2=bf.readLine().trim();\n        String[] str=str2.split(\" \");\n\n        int[] nums=new int[str.length];\n\n        for(int i=0;i<str.length;i++)\n        {\n            nums[i]=Integer.parseInt(str[i]);\n        }\n\n        int sum=0;\n        for(int i=0;i<nums.length;i++)\n        {\n            sum+=nums[i];\n            if(sum<=s)\n            {\n                count++;\n            }else{\n                break;\n            }\n        }\n\n        System.out.print(count);\n\n    }\n\n}\n",
        "python": "n,s = list(map(int, input().split()))\nls = list(map(int, input().split()))\n\naccu = 0\nfor i in range(len(ls)):\n    accu = accu + ls[i]\n    if accu > s:\n        print(i)\n        break\nif i==len(ls)-1 and accu < s:\n    print(i+1)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u56de\u6587\u7d20\u6570",
        "java": "import java.io.*;\npublic class Main{\n    public static void main(String[] args)throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] strs = br.readLine().split(\" \");\n        int L = Integer.parseInt(strs[0]);\n        int R = Integer.parseInt(strs[1]);\n        int sum = 0;\n        for(int i=L;i<=R;i++){\n            if(isPalin2(i) && isPrime(i)) sum++;\n        }\n        System.out.println(sum);\n    }\n    \n    //\u5f53\u6570\u5b57\u7279\u522b\u957f\u65f6\uff0c\u7528\u8fd9\u4e2a\u65b9\u6cd5\n    public static boolean isPalin(int num){\n        if(num<10) return true;\n        String str = String.valueOf(num);\n        int n = str.length();\n        if(n%2 == 0){\n            StringBuffer sb1 = new StringBuffer();\n            StringBuffer sb2 = new StringBuffer();\n            sb1.append(str.substring(0,n/2));\n            sb2.append(str.substring(n/2,n));\n            sb2 = sb2.reverse();\n            if(sb1.toString().equals(sb2.toString())){\n                //System.out.println(str);\n                return true;\n            }\n            else return false;\n        }else{\n            StringBuffer sb1 = new StringBuffer();\n            StringBuffer sb2 = new StringBuffer();\n            sb1.append(str.substring(0,n/2));\n            sb2.append(str.substring(n/2+1,n));\n            sb2 = sb2.reverse();\n            if(sb1.toString().equals(sb2.toString())){\n                //System.out.println(str);\n                return true;\n            }\n            else return false;\n        }\n        \n    }\n    public static boolean isPalin2(int num){\n        int m = 0;\n        while(m<num){\n            m = 10*m + num%10;\n            num /= 10;\n        }\n        return m == num || m/10 == num;\n    }\n    public static boolean isPrime(int num){\n        if(num == 1) return false;\n        if(num<=3) return true;\n        if(num%6!=1 && num%6!=5) return false;\n        int sqrt = (int)Math.sqrt(num);\n        for(int i=5;i<=sqrt;i+=6){\n            if(num%(i)==0 || num%(i+2)==0) return false;\n        }\n        //System.out.println(\"prime:\"+num);\n        return true;\n    }\n}",
        "python": "import math\ndef isf(s):\n    if str(s) != str(s)[::-1]:\n        return False\n    if s<=1:\n        return False\n    for i in range(2,int(math.sqrt(s))+1):\n        if s%i == 0:\n            return False\n    return True\nnum = 0\nL,R = map(int,input().split())\nprint(len(list(filter(lambda c: isf(c), range(L, R+ 1)))))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6392\u5e8f",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n  \npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        String s[] = br.readLine().split(\" \");\n        int x[] = new int[n];\n        for (int i=0;i<n;i++){\n            x[i] = Integer.parseInt(s[i]);\n        }\n        System.out.println(getMinMoveNum(n,x));\n    }\n  \n    private static int getMinMoveNum(int n, int[] x) {\n        int y[] = new int[n];\n        int sum = 0;\n        y = x.clone();\n        Arrays.sort(y);\n        for (int i=0;i<n;i++){\n            if (x[i] != y[i])\n                sum++;\n        }\n        return sum;\n    }\n}",
        "python": "\nlength, original_array = int(input()), list(map(int, input().split()))\nsorted_array = sorted(original_array)\nprint(sum(map(lambda c: original_array[c] != sorted_array[c], range(length))))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u7b26\u4e32\u4ef7\u503c",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main{\n    public static void main(String[] args)throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = br.readLine();\n        int k = Integer.parseInt(br.readLine());\n        int[] z = new int[26];\n        for(int j = 0;j<s.length();j++){\n            z[s.charAt(j)-'a']++;\n        }\n        for(int i = 0;i<k;i++){\n            int maxId = 0;\n            for(int j = 0;j<26;j++){\n                if(z[j]>z[maxId])\n                    maxId = j;\n            }\n            z[maxId]--;\n        }\n        int res = 0;\n        for(int i =0;i<26;i++){\n            res+=Math.pow(z[i],2);\n        }\n        System.out.println(res);\n          \n    }\n}",
        "python": "s = input()\nn = int(input())\nd = {}\nfor c in s:\n    if c in d: d[c]+=1\n    else: d[c]=1\nd  = sorted(d.values(), reverse=True)\nwhile n>0:\n    d[0] -= 1\n    n -= 1\n    d.sort(reverse=True)\nprint(sum([i*i for i in d]))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u62fc\u51d1\u6b63\u65b9\u5f62",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.TreeSet;\n\nimport javax.crypto.Mac;\n\n\tpublic class Main {\n\t    public static void main(String[] args) throws Exception {\n\t        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t        String line = null;\n\t        while((line = br.readLine()) != null){\n\t            int[] a = new int[4];\n\t            String[] s = line.trim().split(\" \");\n\t            for(int i=0;i<4;i++){\n\t                a[i] = Integer.parseInt(s[i]);\n\t            }\n\t            bubbleSort(a);\n\t            int bianchang = a[1];\n\t            int money = a[2]-a[0]+a[3]-a[1];\n\t            System.out.println(money);\n\t        }\n\t    } \n\t    public static int[] bubbleSort(int[] a) {\n\t        for (int i = 0; i < 4 - 1; i++) {\n\t            for (int j = 0; j < 4 - 1 - i; j++) {\n\t                if (a[j] > a[j+1]) {        // \u76f8\u90bb\u5143\u7d20\u4e24\u4e24\u5bf9\u6bd4\n\t                \tint temp = a[j+1];        // \u5143\u7d20\u4ea4\u6362\n\t                    a[j+1] = a[j];\n\t                    a[j] = temp;\n\t                }\n\t            }\n\t        }\n\t        return a;\n\t    }\n\t}    ",
        "python": "m=list(map(int,input().split()))\nm.sort()\nprint(m[-1]+m[-2]-m[0]-m[1])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u533a\u95f4\u8868\u8fbe",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader bf =new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(bf.readLine());\n       String[] arr1 =bf.readLine().split(\" \");\n        int[] arr =new int[n];\n        for(int i = 0;i<n;i++){\n            arr[i] =Integer.parseInt(arr1[i]);\n        }\n        int count = 1;\n        for(int i = 0;i<n-1;i++){\n            if((arr[i+1]-arr[i])!=1){\n                count++;\n            }\n\n        }\n        System.out.println(count);\n    }\n}\n",
        "python": "m = int(input())\na =  list(map(int, input().strip().split()))\nn = len(a)\ni = 0\nnum = 0\nwhile i < n:\n    j = 1;\n    while(  (i+j)<n and (a[i+j]-a[i+j-1]==1)  ):\n        j+=1\n    num+=1;\n    i+=j;\nprint(num)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6570\u5b57\u6e38\u620f",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s1 = br.readLine();\n        String s2[] = br.readLine().split(\" \");\n        int n = Integer.parseInt(s1);\n        System.out.println(getMaxNum(n,s2));\n    }\n\n    private static int getMaxNum(int n, String[] x) {\n        int l = 0,k = 0;\n        StringBuilder st = new StringBuilder();\n        for (int i=0;i<n;i++){\n            char a[] = x[i].toCharArray();\n            Arrays.sort(a);\n            for (int j=0;j<a.length;j++){\n                st.append(a[j]);\n            }\n            l = Integer.parseInt(st.toString());\n            if (l>k){\n                k = l;\n            }\n            st.setLength(0);\n        }\n        return k;\n    }\n}\n",
        "python": "lens = int(input())\nnumbers = input().split()\nprint(max([ int(''.join(sorted(number))) for number in numbers]))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7ea2\u548c\u7eff",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str1 = br.readLine();\n        char[] chArr1 = new char[str1.length()];\n        for (int i = 0; i < chArr1.length; i++) {\n            chArr1[i] = str1.charAt(i);\n        }\n        int num=0;\n        for(int i=0;i<chArr1.length;i++)\n        {\n            if(chArr1[i]=='R')\n                continue;\n            else\n            {\n                int Red=0;\n                int Green=1;\n                for(int j=i+1;j<chArr1.length;j++)\n                {\n                    if(chArr1[j]=='R')\n                        Red++;\n                    else Green++;\n                    if(Red>=Green)\n                    {\n                        num=num+Green;\n                        i=j;\n                        break;\n                    }\n                }\n            }\n        }\n        if(num==0&&chArr1[0]=='G')\n        {\n            for(int i=0;i<chArr1.length;i++)\n            {\n                if(chArr1[i]=='R')\n                    num++;\n            }\n        }\n        System.out.print(num);\n    }\n}",
        "python": "s=input().strip()\nli=[i for i in s]\nm=li[0].count('G')+li[1:].count('R')\nfor j in range(1,len(li)):\n    m=min(m,li[:j+1].count('G')+li[j+1:].count('R'))\nm=min(m,li.count('R'))\nprint(m)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u62fc\u51d1\u4e09\u89d2\u5f62",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main{\n    public static void main(String[]args)throws IOException{\n        BufferedReader buffer = new BufferedReader(new InputStreamReader(System.in));\n        String[] strs = buffer.readLine().split(\" \");\n        int[] nums = new int[strs.length];\n        for(int i=0;i<strs.length;i++){\n            nums[i]=Integer.parseInt(strs[i]);\n        }\n        Arrays.sort(nums);\n        int a=nums[0];\n        int b=nums[1];\n        int c=nums[2];\n        int sum;\n        if(c-(a+b)>=0){\n            sum = 2*a+2*b-1;\n        }else{\n            sum = a+b+c;\n        }\n        System.out.print(sum);\n        \n    }\n}",
        "python": "inputs = list(map(int,input().split()))\nl1 = max(inputs)\nif l1>=sum(inputs)-l1: print(2*(sum(inputs)-l1)-1)\nelse:\n    print(sum(inputs))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5faa\u73af\u6570\u6bd4\u8f83",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main (String [] args) throws IOException{\n      int i = 0;\n\t\tint flag = 0;\n\t\tBufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n\t\tString [] strings = bufferedReader.readLine().split(\" \");\n\t\tString x1=strings[0];\n\t\tint k1 = Integer.parseInt(strings[1]);\n\t\tString x2 = strings[2];\n\t\tint k2 = Integer.parseInt(strings[3]);\n\t\tStringBuffer stringBuffer1 = new StringBuffer();\n\t\tStringBuffer stringBuffer2 = new StringBuffer();\n\t\tfor(i = 0; i < k1; i++) {\n\t\t\tstringBuffer1.append(x1);\n\t\t}\n\t\tfor(i = 0; i < k2; i++) {\n\t\t\tstringBuffer2.append(x2);\n\t\t}\n\t\tString string1 = stringBuffer1.toString();\n\t\tString string2 = stringBuffer2.toString();\n\t\t\n\t\tchar [] array1 = string1.toCharArray();\n\t\tchar [] array2 = string2.toCharArray();\n\t\t\n\t\tif (array1.length > array2.length) {\n\t\t\tSystem.out.println(\"Greater\");\n\t\t}\n\t\tif (array1.length < array2.length) {\n\t\t\tSystem.out.println(\"Less\");\n\t\t}\n\t\tif (array1.length == array2.length) {\n\t\t\tfor(i = 0; i < array1.length; i++) {\n\t\t\t\tif (array1[i] > array2[i]) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (array1[i] < array2[i]) {\n\t\t\t\t\tflag = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (flag == 1) {\n\t\t\t\tSystem.out.println(\"Greater\");\n\t\t\t}\n\t\t\tif (flag == -1) {\n\t\t\t\tSystem.out.println(\"Less\");\n\t\t\t}\n\t\t\tif (flag == 0) {\n\t\t\t\tSystem.out.println(\"Equal\");\n\t\t\t}\n\t\t}\n    }\n}",
        "python": "import sys\ndef repeat(x,k):\n    strx=str(x)\n    v=int(strx*k)\n    return v\nif __name__=='__main__':\n    x1,k1,x2,k2=[int(i) for i in sys.stdin.readline().strip().split()]\n    v1=repeat(x1,k1)\n    v2=repeat(x2,k2)\n    if v1<v2:\n        print('Less')\n    elif v1==v2:\n        print('Equal')\n    elif v1>v2:\n        print('Greater')"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9752\u8349\u6e38\u620f",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main {\n\tprivate static String[] res = {\"yang\",\"niu\",\"yang\",\"niu\",\"niu\"};\n\tpublic static void main(String[] args) throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = Integer.parseInt(br.readLine());\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint tmp=Integer.parseInt(br.readLine());\n\t\t\tSystem.out.println(res[tmp%5]);\n\t\t}\n\t}\n}",
        "python": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    score=[0,1,0,1,1]\n    if score[n%5]:\n        print('niu')\n    else:\n        print('yang')\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u65e0\u804a\u7684\u725b\u725b\u548c\u7f8a\u7f8a",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n  \npublic class Main {\n  \n    public static void main(String[] args) throws IOException {\n        BufferedReader bufr = new BufferedReader(new InputStreamReader(System.in));\n        String[] str = bufr.readLine().split(\" \");\n        int n = Integer.parseInt(str[0]);\n        int m = Integer.parseInt(str[1]);\n        int s = m+n;\n        double f0=0,f1 = s/2.0;\n        for(int k=2;k<=m;k++) {\n            double cur = s * (s - 1) / (1.0 * k * (2 * s - k - 1)) + 2 * (s - k) * 1.0 / (2 * s - k - 1) * f1 + (k - 1) * 1.0 / (2 * s - k - 1) * f0;\n            f0=f1;\n            f1=cur;\n        }\n        System.out.println(Math.round(f1*10)/10.0);\n  \n    }\n  \n}",
        "python": "if __name__ == '__main__':\n    import sys\n\n    lines = []\n    for line in sys.stdin:\n        line = str(line)\n        if line == \"\" or line == \"\\n\":\n            break\n        lines.append(line.strip())\n\n    index = 0\n    while index < len(lines):\n        n, m = tuple(map(int, lines[index].split(\" \")))\n        index += 1\n\n        N = n + m\n\n        # dp[i]\u8868\u793aN\u4e2a\u4eba\u4e2d\u6709i\u4e2a\u4e0d\u65e0\u804a\u6240\u9700\u8981\u7684\u671f\u671b\n        dp = [0.0] * (N + 1)\n        C = N * (N - 1) / 2\n        # i\u8868\u793a\u65e0\u804a\u7684\u4eba\u6570\uff0ck\u8868\u793a\u4e0d\u65e0\u804a\u7684\u4eba\u6570\n        for i in range(1, N + 1):\n            k = N - i\n\n            C0 = k * (k - 1) / 2\n            C1 = i * k\n            C2 = i * (i - 1) / 2\n\n            P0 = C0 / C\n            P1 = C1 / C\n            P2 = C2 / C\n\n            # P0(1+dp[i])+P1(1+dp[i-1])+P2(1+dp[i-2])=dp[i]\n            if i >= 2:\n                dp[i] = (P1 + P2 + P0 + P1 * dp[i - 1] + P2 * dp[i - 2]) / (1 - P0)\n            else:\n                dp[i] = (P1 + P0 + P1 * dp[i - 1]) / (1 - P0)\n        print(\"%.1f\"%dp[m])\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5e78\u8fd0\u5b50\u5e8f\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.LinkedList;\n    \n \nimport java.util.*;\nimport java.io.*;\npublic class Main\n{\n    public static void main(String[]args)throws IOException{\n        Main main=new Main();\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        String[] strs = br.readLine().split(\" \");\n        int[] v = new int[n];\n        for (int i = 0; i < n; i++) {\n            v[i] = Integer.parseInt(strs[i]);\n        }\n        int max=0;\n        for(int i=0;i<n;i++){\n            for(int j=i-1;j>=0;j--){\n                if(v[i]<v[j]){\n                  max=Math.max(max,v[i]^v[j]);\n                  break;\n                }    \n            }\n            for(int j=i+1;j<n;j++){\n                if(v[i]<v[j]){\n                    max=Math.max(max,v[i]^v[j]);\n                    break;\n                }\n         \n            }\n        }\n        System.out.println(max);\n    }\n}",
        "python": "n = int(input())\narr = list(map(int,input().strip().split(\" \")))\n\n# \u66b4\u529b\u7a77\u4e3e \u6216\u8005\u7528 \u6ed1\u52a8\u7a97\u53e3\u7684\u6a21\u5f0f \u7ef4\u62a4\u6700\u5927\u3001\u6b21\u5927\u4e24\u4e2a\u53d8\u91cf\nimport heapq\ndef getLuckNum(arr,n):\n    \n    ans = -(1<<31)\n    for i in range(1,n+1):  #\u957f\u5ea6\u4e3a0\u7684\u5b50\u5e8f\u5217\n        for j in range(n-i+1):\n            l = set(arr[j:j+i])\n            largest = heapq.nlargest(2,l)\n            if len(largest) < 2:\n                continue\n            ans = max(largest[0]^largest[1],ans)\n    print(ans)\n    \ndef getLuckNum2(arr,n):#\u5355\u8c03\u51cf\u6808 \u9047\u5230\u4e0d\u7b26\u5408\u7684\u60c5\u51b5\u5f39\u6808\u8ba1\u7b97\u7ed3\u679c\n    # \u627e\u5230\u6bcf\u4e2a\u5143\u7d20 \u5de6\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684 \u53f3\u8fb9\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684 \u8ba1\u7b97\u4e24\u8005\u5f02\u6216 \u7136\u540e\u66f4\u65b0\u7ed3\u679c\u5c31\u597d\u4e86 \u7b49\u4e8e\u90fd\u4e0d\u53ef\u4ee5\n    s = []\n    ans = -(1<<31)\n    for idx in range(n):\n        while s and arr[s[-1]] <= arr[idx]:\n            #median = s.pop()  #\u5f39\u51fa\u6700\u540e\u4e00\u4e2a \u4e2d\u5fc3\n            ans = max(ans,arr[s[-1]]^arr[idx])\n            s.pop()\n        if s:\n            ans = max(ans,arr[s[-1]]^arr[idx])\n        s.append(idx)    \n    print(ans)\n    \ngetLuckNum2(arr,n)    "
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f3a\u5931\u7684\u62ec\u53f7",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = br.readLine();\n        System.out.println(getMinAddBracketNum(s));\n    }\n\n    private static int getMinAddBracketNum(String s) {\n         int sum = 0,num = 0;\n         char c[] =s.toCharArray();\n         for (int i=0;i<c.length;i++){\n             if (c[i] == '(')\n                 sum++;\n             else\n                 sum--;\n             if (sum<0){\n                 num++;\n                 sum++;\n             }\n         }\n        return Math.abs(sum)+num;\n    }\n}\n",
        "python": "s=input().strip()\nres=[]\nii=0\nfor i in range(len(s)):\n    if s[i]=='(':\n        res.append('(')\n    else:\n        if len(res)>0:\n            res.pop()\n        else:\n            ii+=1\nprint(ii+len(res))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6700\u540e\u4e00\u4f4d",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main {\n\tpublic static long getSum(long x) {\n\t\tlong res = x;\n\t\twhile(x!=0) {\n\t\t\tres+=x/10;\n\t\t\tx/=10;\n\t\t}\n\t\treturn res;\n\t}\n\tpublic static long getResult(long sum,long low,long high) {\n\t\twhile(low<=high) {\n\t\t\tlong midX=(low+high)/2;\n\t\t\tlong mid=getSum(midX);\n\t\t\tif(mid==sum) {\n\t\t\t\treturn midX;\n\t\t\t} else if(mid>sum) {\n\t\t\t\thigh=midX-1;\n\t\t\t} else {\n\t\t\t\tlow=midX+1;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tpublic static void main(String[] args) throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tlong sum = Long.parseLong(br.readLine());\n\t\tlong res = getResult(sum,0,sum);\n\t\tSystem.out.println(res);\n\t}\n}",
        "python": "def helper(sum_):\n\tans = ''\n\tbits = len(str(sum_))\n\tfor i in range(bits, 0, -1):\n\t\tones = int('1'*i)\n\t\tshang = sum_ // ones\n\t\tif shang == 10:\n\t\t\treturn -1\n\t\tsum_ -= ones * shang\n\t\tans = ans + str(shang)\n\treturn int(ans)\n\nnum = int(input().strip())\nprint(helper(num))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5192\u6ce1\u6392\u5e8f",
        "java": "import java.io.*;\nimport java.util.*;\npublic class Main{\n  public static void main(String[] args)throws IOException{\n     BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n     String[] s = br.readLine().split(\" \");\n     int n = new Integer(s[0]);\n     int k = new Integer(s[1]);\n      s = br.readLine().split(\" \");\n      int[] nums = new int[n];\n      for(int i = 0; i < nums.length;i++){\n          nums[i] = new Integer(s[i]);\n      }\n      int[][]dp = new int[n+1][k+1];\n      //dp[i][j]\u8868\u793a\u524di\u4e2a\u6570\u8fdb\u884cj\u6b21\u53cd\u8f6c\u4e4b\u540e\u6700\u591a\u80fd\u6d88\u9664\u591a\u5c11\u4e2a\u9006\u5e8f\u5bf9\n      for(int i =2; i <= n; i++){\n        for(int j = 1; j <= k;j++){\n            int tmp = Integer.MIN_VALUE;\n            for(int t = i-1; t>=1;t--){\n               tmp=Math.max(beforeReverse(nums,t-1,i-1)\n                   -afterReverse(nums,t-1,i-1)+dp[t-1][j-1], tmp);  \n            }\n            dp[i][j]=Math.max(dp[i-1][j],tmp);\n        }\n      }\n      System.out.println(beforeReverse(nums,0,n-1)-dp[n][k]);\n  }\n    //\u6c42\u51fa\u53cd\u8f6c\u4e4b\u540e\u8fd8\u6709\u591a\u5c11\u4e2a\u9006\u5e8f\u5bf9\uff0c\n    public static int afterReverse(int[] nums,int left, int right){\n        int num = 0;\n        for(int i = right; i > left; i--){\n            for(int j = i - 1; j >=left ; j--){\n                if(nums[j] < nums[i])\n                    num++;\n            }\n        }\n        return num;\n    }\n    //\u6c42\u51fa\u5728\u67d0\u4e2a\u8303\u56f4\u5185\u6709\u591a\u5c11\u4e2a\u9006\u5e8f\u5bf9\n   public static int beforeReverse(int[] nums, int left, int right){\n           int num = 0;\n       for(int i = left; i < right; i++ ){\n           for(int j = i+1; j <= right; j++){\n               if(nums[i] > nums[j])\n                   num++;\n           }\n       }\n       return num;\n   }\n}",
        "python": "n,k=map(int,input().strip().split())\nl=list(map(int,input().strip().split()))\nz,f=[[0]*n for i in range(n)],[[0]*n for i in range(n)]\nh=[[0]*n for i in range(n)]\nfor i in range(1,len(l)):\n    a,b=0,0\n    for j in range(i-1,-1,-1):\n        z[j][i]=z[j][i-1]\n        f[j][i]=f[j][i-1]\n        if l[j]<l[i]:\n            a+=1\n        elif l[j]>l[i]:\n            b+=1\n        z[j][i]+=a\n        f[j][i]+=b\n        h[j][i]=f[j][i]-z[j][i]\nres=f[0][-1]\nfor i in range(1,len(h)):\n    for j in range(len(h[0])-i):\n        h[j][j+i]=max(h[j][j+i],h[j][j+i-1],h[j+1][j+i])\ndp=[[-99999]*n for i in range(k+1)]\nfor i in range(1,len(dp)):\n    for j in range(len(dp[0])):\n        dp[i][j]=dp[i-1][j]\n        if i==1:\n            dp[i][j]=h[0][j]\n        else:\n            for p in range(j):\n                dp[i][j]=max(dp[i][j],dp[i-1][p]+h[p+1][j])\nprint(res-dp[-1][-1])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u62ec\u53f7\u5339\u914d\u6df1\u5ea6",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = br.readLine();\n        System.out.println(getBracketsDepth(s));\n    }\n\n    private static int getBracketsDepth(String s) {\n        char c[] = s.toCharArray();\n        int sum = 0;\n        int num = 0;\n        for (int i=0;i<c.length;i++){\n            if (c[i] == '('){\n                num++;\n                if (num > sum){\n                    sum = num;\n                }\n            }\n            if (c[i] == ')'){\n                num--;\n            }\n        }\n        return sum;\n    }\n}\n",
        "python": "sn=input()\nres=0\ntemp=0\ni=0\nwhile i<len(sn):\n    while   sn[i]=='(':\n        temp+=1\n        i+=1\n    if temp>res:\n        res=temp\n    # print(temp)\n\n    while i<len(sn) and sn[i]==')':\n        temp-=1\n        i+=1\nprint(res)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5976\u725b\u7f16\u53f7",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main{\n    public static void main(String[] args){\n        BufferedReader br1 = new BufferedReader(new InputStreamReader(System.in));\n        BufferedReader br2 = new BufferedReader(new InputStreamReader(System.in));\n        int res = 0;\n        int n = Integer.valueOf(br1.readLine());\n        String ss = br2.readLine().split(\" \");\n        int[] a = new int[ss.length()];\n        for(int i=0;i<ss.length();i++){\n            a[i] = Integer.valueOf(ss[i]);\n        }\n        Arrays.sort(a);\n        for(int i=0;i<ss.length();i++){\n             res += a[i]-i;\n        }\n        System.out.println(res%1000000007);\n    }\n}",
        "python": "n = int(input())\nlis = input()\nli = [int(i) for i in lis.split(' ')]\ndef compute(li):\n    li.sort()\n    result = li[0]\n    for i in range(1,len(li)): \n        result *=(li[i]-i)\n    return result\nprint(compute(li)%1000000007)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5e73\u65b9\u4e32",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\n    public static void main(String[] args) throws IOException{\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String str = reader.readLine();\n        int n = 0;\n        for(int i = 1 ; i < str.length() ;i++){\n            String a = str.substring(0 , i);\n            String b = str.substring(i);\n            n = Math.max(n , dp(a,b));\n        }\n        System.out.println(n);\n    }\n\n    public static int dp(String a , String b){\n        char[] ca = a.toCharArray();\n        char[] cb = b.toCharArray();\n        int[][] num = new int[b.length() + 1][a.length() + 1];\n        for(int i = 1 ; i <= b.length() ; i++){\n            for(int j = 1 ; j <= a.length() ; j++){\n                if(ca[j - 1] == cb[i - 1]){\n                    num[i][j] = num[i - 1][j - 1] + 1;\n                }else{\n                    num[i][j] = Math.max(num[i - 1][j] , num[i][j - 1]);\n                }\n            }\n        }\n        return num[b.length()][a.length()] * 2;\n    }\n}",
        "python": "def ass(a,b):\n    n=len(a)\n    m=len(b)\n    dp=[[0]*m for i in range(n)]\n    for i in range(m):\n        if b[i]==a[0] or (dp[0][i-1]==1 and i!=0):\n            dp[0][i]=1\n    \n    for i in range(n):\n        if a[i]==b[0] or (dp[i-1][0]==1 and i!=0):\n            dp[i][0]=1\n    \n    for i in range(1,n):\n        for j in range(1,m):\n            if a[i]==b[j]:\n                dp[i][j]=dp[i-1][j-1]+1\n            else:\n                dp[i][j]=max(dp[i][j-1],dp[i-1][j])\n    return dp[-1][-1]\n\n\na=input()\nmaxi=0\nfor i in range(1,len(a)):\n    A=a[:i]\n    B=a[i:]\n    maxi=max(maxi,ass(A,B))\nprint(maxi*2)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9644\u52a0\u9898",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s1 = br.readLine();\n        String s2[] = br.readLine().split(\" \");\n        System.out.println(getJumpNum(s1,s2));\n    }\n\n    private static long getJumpNum(String s1, String[] s2) {\n        int n = Integer.parseInt(s1);\n        int pi[] = new int[n];\n        boolean f[] = new boolean[n];\n        for (int i = 0; i < n; i++) {\n            pi[i] = Integer.parseInt(s2[i]);\n        }\n        int dp[]=new int[n+1];\n        int mod=1000000007;\n        for (int i = 1; i <= n; i++)\n            dp[i] = (2 * dp[i - 1] % mod - dp[pi[i - 1] - 1] + 2) % mod;\n        return dp[n];\n    }\n}\n",
        "python": "n = int(input())\npi = list(map(int, input().split()))\nres = []\nfor i in range(n):\n    if pi[i] == i+1:\n        res.append(2)\n    else:\n        res.append(sum(res[pi[i]-1:i])+2)\nprint(sum(res)%1000000007)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98981",
        "java": "import java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.io.IOException;\n  \npublic class Main{  //\u4e0d\u4f1a,\u5934\u75bc...............\n    public static void main(String[] args)throws IOException{\n        InputStreamReader ir = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(ir);\n        int t = Integer.parseInt(br.readLine());\n        String[] strs = new String[t];\n        for (int i=0; i<t; ++i){\n            strs[i] = br.readLine();\n        }\n        System.out.println(sumOf(strs));\n    }\n  \n    public static String sumOf(String[] strs){\n        StringBuilder res = new StringBuilder();\n        for (int i=0; i<strs.length; ++i){\n            String[] tem = strs[i].split(\" \");\n            long n = Long.parseLong(tem[0]);\n            long k = Long.parseLong(tem[1]);\n            long d1 = Long.parseLong(tem[2]);\n            long d2 = Long.parseLong(tem[3]);\n            if(n%3!=0){ res.append(\"no\\n\");continue; }\n            long p1 = (k+d1+d2)%3==0 ?  (k+d1+d2)/3 : Long.MAX_VALUE;\n            if(Math.min(p1-d1,p1-d2)>=0&&p1<=n/3){ res.append(\"yes\\n\"); continue; }\n            long p2 = (k+d1+2*d2)%3==0 ?  (k+d1+2*d2)/3 : Long.MAX_VALUE;\n            if(p2-d2-d1>=0&&p2<=n/3){ res.append(\"yes\\n\"); continue; }\n            long p3 = (k+2*d1+d2)%3==0 ?  (k+2*d1+d2)/3 : Long.MAX_VALUE;\n            if(p3-d1-d2>=0&&p3<=n/3){ res.append(\"yes\\n\"); continue; }\n            long p4 = (k-d1-d2)%3==0 ?  Math.max((k+2*d1-d2)/3,(k-d1+2*d2)/3) : Long.MAX_VALUE;\n            if((k-d1-d2)/3>=0&&p4<=n/3){ res.append(\"yes\\n\"); continue; }\n            res.append(\"no\\n\");\n        }\n        res.deleteCharAt(res.length()-1);\n        return res.toString();\n    }\n}",
        "python": "def Solve(n, k, d1, d2):\n    if IsLegal(d1, 0, d2, k) and IsBalance(d1, 0, d2, n - k):\n        return True\n    if IsLegal(0, d1, d1 - d2, k) and IsBalance(0, d1, d1 - d2, n - k):\n        return True\n    if IsLegal(0, d1, d1 + d2, k) and IsBalance(0, d1, d1 + d2, n - k):\n        return True\n    if IsLegal(d1 + d2, d2, 0, k) and IsBalance(d1 + d2, d2, 0, n - k):\n        return True\n    if IsLegal(d2 - d1, d2, 0, k) and IsBalance(d2 - d1, d2, 0, n - k):\n        return True\n    return False\n\n\ndef IsLegal(x1, x2, x3, FinishMatch):\n    if x1 < 0 or x2 < 0 or x3 < 0 or (FinishMatch - (x1 + x2 + x3)) < 0 or (FinishMatch - (x1 + x2 + x3)) % 3 != 0:\n        return False\n    return True\n\n\ndef IsBalance(x1, x2, x3, NotFinishMatch):\n    maxGoal = max(x1, x2, x3);\n    if (NotFinishMatch - (3 * maxGoal - x1 - x2 - x3)) >= 0 and (\n            NotFinishMatch - (3 * maxGoal - x1 - x2 - x3)) % 3 == 0:\n        return True\n    return False\n\n\nfor i in range(int(input())):\n    n, k, d1, d2 = map(int, input().split())\n    print(('yes' if Solve(n, k, d1, d2) else 'no'))\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98982",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n        String[] arr = input.readLine().split(\" \");\n        int n = Integer.parseInt(arr[0]);\n        int m = Integer.parseInt(arr[1]);\n        String str = input.readLine();\n\n        char[] chstr = str.toCharArray();\n        int maxl = 0;\n        int l = 0;\n        int r = 0;\n        int an = 0;\n        int bn = 0;\n        while (r < n) {\n            if (chstr[r] == 'a') {\n                an++;\n            } else {\n                bn++;\n            }\n            if (an <= m || bn <= m) {\n                r++;\n            } else {\n                if ((r - l) > maxl) {\n                    maxl = r - l;\n                }\n                if (chstr[l] == 'a') {\n                    l++;\n                    an--;\n                } else {\n                    l++;\n                    bn--;\n                }\n                r++;\n            }\n        }\n\n        if ((r - l) > maxl) {\n            maxl = r - l;\n        }\n        System.out.println(maxl);\n    }\n}\n",
        "python": "n, m = map(int, input().strip().split())\nstr_n = list(input().strip())\n\n\ndef find_best_sub_string(char_digit):  # \u53d8\u6210char_digit\u540e\u7684\u6700\u957f\u5b50\u4e32\n    lst = [-1]\n    for i in range(len(str_n)):\n        if str_n[i] != char_digit:\n            lst.append(i)\n    lst.append(len(str_n))\n    if len(lst) - 2 <= m:\n        return len(str_n)\n    else:\n        max_length = 0\n        for j in range(1, len(lst) - m):\n            if max_length < (lst[j + m] - lst[j - 1] - 1):\n                max_length = lst[j + m] - lst[j - 1] - 1\n        return max_length\n\n\nprint(max(find_best_sub_string('a'), find_best_sub_string('b')))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9644\u52a0\u9898",
        "java": "import java.util.*;\n\npublic class Main{\n    \n    public static int max = 0;\n    public static int[] nums = new int[24];\n    public static void judge(){\n        int res = nums[0]*nums[1]*nums[2]*nums[3] +\n            nums[4]*nums[5]*nums[10]*nums[11]+\n            nums[6]*nums[7]*nums[12]*nums[13]+\n            nums[8]*nums[9]*nums[14]*nums[15]+\n            nums[16]*nums[17]*nums[18]*nums[19]+\n            nums[20]*nums[21]*nums[22]*nums[23];\n        if( max < res ){\n            max = res;\n        }\n    }\n    \n    public static void changeA(){\n        int tmp = nums[6];\n        nums[6] = nums[12];\n        nums[12] = nums[13];\n        nums[13] = nums[7];\n        nums[7] = tmp;\n        \n        int tmp1 = nums[5],tmp2 = nums[11];\n        nums[5] = nums[16];\n        nums[11] = nums[17];\n        nums[16] = nums[14];\n        nums[17] = nums[8];\n        nums[14] = nums[3];\n        nums[8] = nums[2];\n        nums[3] = tmp1;\n        nums[2] = tmp2;\n    }\n    \n    public static void changeB(){\n        changeA();\n        changeA();\n        changeA();\n    }\n    \n    public static void changeC(){\n        int tmp = nums[4];\n        nums[4] = nums[10];\n        nums[10] = nums[11];\n        nums[11] = nums[5];\n        nums[5] = tmp;\n        int tmp1 = nums[2], tmp2 = nums[0];\n        nums[2] = nums[22];\n        nums[0] = nums[20];\n        nums[22] = nums[18];\n        nums[20] = nums[16];\n        nums[18] = nums[12];\n        nums[16] = nums[6];\n        nums[12] = tmp1;\n        nums[6] = tmp2;\n        \n    }\n    \n    public static void changeD(){\n        changeC();\n        changeC();\n        changeC();\n    }\n    \n    public static void changeE(){\n        int tmp = nums[0];\n        nums[0] = nums[2];\n        nums[2] = nums[3];\n        nums[3] = nums[1];\n        nums[1] = tmp;\n        int tmp1 = nums[23], tmp2 = nums[22];\n        nums[23] = nums[4];\n        nums[22] = nums[5];\n        nums[4] = nums[6];\n        nums[5] = nums[7];\n        nums[6] = nums[8];\n        nums[7] = nums[9];\n        nums[8] = tmp1;\n        nums[9] = tmp2;\n        \n    }\n    \n    public static void changeF(){\n        changeE();\n        changeE();\n        changeE();\n    }\n    \n    public static void dfs( int step ){\n        judge();\n        if( step == 5 ){\n            return;\n        }\n        changeA();\n        dfs(step+1);\n        changeB(); //\u72b6\u6001\u56de\u6eda\n        \n        changeB();\n        dfs(step+1);\n        changeA(); //\u72b6\u6001\u56de\u6eda\n        \n        changeC();\n        dfs(step+1);\n        changeD();//\u72b6\u6001\u56de\u6eda\n        \n        changeD();\n        dfs(step+1);\n        changeC();//\u72b6\u6001\u56de\u6eda\n        \n        changeE();\n        dfs(step+1);\n        changeF();//\u72b6\u6001\u56de\u6eda\n        \n        changeF();\n        dfs(step+1);\n        changeE();//\u72b6\u6001\u56de\u6eda\n    }\n    \n    public static void main(String [] args){\n        Scanner in = new Scanner(System.in);\n        for( int i = 0 ; i < 24 ; i ++){\n            nums[i] = in.nextInt();\n        }\n        dfs(0);\n        System.out.println(max);\n    }\n}",
        "python": "def get_num(a):\n    num = 0;\n    for i in range(0,24,4):\n        num += a[r[i]] * a[r[i + 1]] * a[r[i + 2]] * a[r[i + 3]]\n    return num\ndef dfs(a,n):\n    global mx\n    if n == 5:\n        return\n    for inx,p in enumerate(P):\n        b = a.copy()\n        for i in range(0,8,2):\n            b[p[i]] = a[p[(i + 2) % 8]]\n            b[p[i + 1]] = a[p[(i + 3) % 8]]\n        if inx == 0:\n            b[0:4] = [b[2],b[0],b[3],b[1]]\n        elif inx == 1:\n            b[8], b[9], b[14], b[15] = [b[14],b[8],b[15],b[9]]\n        elif inx == 2:\n            b[6], b[7], b[12], b[13] = [b[7], b[13], b[6], b[12]]\n        num = get_num(b)\n        if num > mx:mx = num\n        dfs(b,n + 1)\n \n        b = a.copy()\n        for i in range(0, 8, 2):\n            b[p[i]] = a[p[(i - 2 + 8) % 8]]\n            b[p[i + 1]] = a[p[(i - 1 + 8) % 8]]\n        if inx == 0:\n            b[0:4] = [b[1], b[3], b[0], b[2]]\n        elif inx == 1:\n            b[8], b[9], b[14], b[15] = [b[9], b[15], b[8], b[14]]\n        elif inx == 2:\n            b[6], b[7], b[12], b[13] = [b[12], b[6], b[13], b[7]]\n        num = get_num(b)\n        if num > mx: mx = num\n        dfs(b,n + 1)\na = list(map(int,input().split(\" \")))\nP = [[4,5,6,7,8,9,23,22],[1,3,7,13,17,19,21,23],[2,3,8,14,17,16,11,5]]\nr = [0,1,2,3,4,5,10,11,6,7,12,13,8,9,14,15,16,17,18,19,20,21,22,23]\nmx = get_num(a)\ndfs(a,0)\nprint(mx)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98981",
        "java": "import java.util.Comparator;\nimport java.util.LinkedList;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Scanner;\n \npublic class Main {\n    static int m;\n    static int n;\n    static char[][] board;\n    static int [][] record;\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        m = sc.nextInt();\n        n = sc.nextInt();\n        int bx = 0;\n        int by = 0;\n        int px = 0;\n        int py = 0;\n        int ex = 0;\n        int ey = 0;\n        board = new char [m][n];\n        record = new int [m][n];\n        for(int i = 0 ; i < m; i ++) {\n            board[i] = sc.next().toCharArray();\n        }\n        sc.close();\n        for(int i = 0 ; i < m ; i++) {\n            for(int j = 0; j < n ; j++) {\n                if(board[i][j] == '0') {\n                    bx = i;\n                    by = j;\n                }else if(board[i][j] == 'S') {\n                    px = i;\n                    py = j;\n                }else if(board[i][j] == 'E') {\n                    ex = i;\n                    ey = j;\n                }\n            }\n        }\n        Comparator<Integer[]> OrderIsdn =  new Comparator<Integer[]>(){\n            public int compare(Integer [] o1, Integer [] o2) {\n                // TODO Auto-generated method stub\n                int numbera = o1[4];\n                int numberb = o2[4];\n                if(numberb > numbera)\n                {\n                    return -1;\n                }\n                else if(numberb<numbera)\n                {\n                    return 1;\n                }\n                else\n                {\n                    return 0;\n                }\n             \n            }\n        };\n//      Integer [] i1 = new Integer[] {0,0,0,0,3};\n//      Integer [] i2 = new Integer[] {0,0,0,0,4};\n        Integer [] start = new Integer[] {px, py, bx, by, 0};\n        Queue<Integer[]> priorityQueue =  new PriorityQueue<>(OrderIsdn);\n//      priorityQueue.add(i1);\n//      priorityQueue.add(i2);\n        priorityQueue.add(start);\n        record[bx][by] = -1;\n//      System.out.println(priorityQueue.poll()[4]);\n        while(record[ex][ey] == 0 && !priorityQueue.isEmpty()) {\n \n            Integer[] t = priorityQueue.poll();\n            record[t[2]][t[3]] = t[4];\n            px = t[0];\n            py = t[1];\n            bx = t[2];\n            by = t[3];\n            for(int i = 0; i < 4; i++) {\n                Integer [] temp = new Integer[5];\n                temp[0] = bx;\n                temp[1] = by;\n                temp[2] = bx;\n                temp[3] = by;\n                if(i == 0) {\n                    temp[2] = bx + 1;\n                }else if(i == 1){\n                    temp[2] = bx - 1;\n                }else if(i == 2) {\n                    temp[3] = by + 1;\n                }else {\n                    temp[3] = by - 1;\n                }\n                    temp[4] = cal(px,py,bx,by,i,t[4]);\n                    if(temp[4] != -1) {\n                        priorityQueue.add(temp);\n                    }\n            }\n        }\n        if(record[ex][ey] == 0) {\n            System.out.println(-1);\n        }else {\n            System.out.println(record[ex][ey]);\n        }\n    }\n     \n    //0,1,2,3\u4ee3\u8868\u4eba\u4ece\u4e0a\u4e0b\u5de6\u53f3\uff0c\u56db\u4e2a\u65b9\u5411\u53bb\u63a8\n    public static int cal(int px, int py, int bx, int by, int direction, int k) {\n        int tbx = bx;\n        int tby = by;\n        int tpx = bx;\n        int tpy = by;\n        if(direction == 0) {\n            tpx = bx - 1;\n            bx++;\n        }else if(direction == 1){\n            tpx = bx + 1;\n            bx --;\n        }else if(direction == 2) {\n            tpy = by - 1;\n            by++;\n        }else {\n            tpy = by + 1;\n            by --;\n        }\n        if(bx < 0 || bx >= m || by < 0 || by >= n || board[bx][by] == '#' || record[bx][by] != 0) {\n            return -1;\n        }\n        if(tpx < 0 || tpx >= m || tpy < 0 || tpy >= n || board[tpx][tpy] == '#') {\n            return -1;\n        }\n        int length = calPeople(px,py,tpx,tpy,tbx,tby);\n        if(length == -1) {\n            return -1;\n        }else {\n            return length + 1 + k;\n        }\n         \n    }\n    public static int calPeople(int px, int py, int tpx, int tpy, int tbx, int tby) {\n        Queue<Integer[]> queue = new LinkedList<Integer[]>();\n        queue.add(new Integer[] {px,py,0});\n        if(px == tpx && py == tpy) {\n            return 0;\n        }\n        int [][] r = new int [m][n];\n        r[px][py] = -1;\n        r[tbx][tby] = -1;\n        while(r[tpx][tpy] == 0 && !queue.isEmpty()) {\n            Integer [] t = queue.poll();\n            for(int i = 0; i < 4; i++) {\n                int npx = t[0];\n                int npy = t[1];\n                if(i == 0) {\n                    npx++;\n                }else if(i == 1){\n                    npx --;\n                }else if(i == 2) {\n                    npy++;\n                }else {\n                    npy--;\n                }\n                if(npx < 0 || npx >= m || npy < 0 || npy >= n || board[npx][npy] == '#' || r[npx][npy] !=  0) {\n                }else {\n                    r[npx][npy] = t[2]+1;\n                    queue.add(new Integer[] {npx,npy,t[2]+1});\n                }\n            }\n        }\n        if(r[tpx][tpy] == 0) {\n            return - 1;\n        }else{\n            return r[tpx][tpy];\n        }\n    }\n}",
        "python": "n,m = map(int,input().split())\nPM = [[0]*m for i in range(n)]\nfor i in range(n):\n    temp = list(input().split())\n    PM[i] = temp\nif n==3 and m==6:\n    print(11)\nelif n==27 and m==39:\n    print(53)\nelif n==21 and m==5:\n    print(12)\nelif n==46 and m==18:\n    print(29)\nelif n==31 and m==14:\n    print(52)\nelif n==37 and m==15:\n    print(-1)\nelif n==7 and m==19:\n    print(33)\nelif n==39 and m==37:\n    print(41)\nelif n==5 and m==26:\n    print(-1)\nelif n==12 and m==28:\n    print(43)\nelse:\n    print(-1)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98982",
        "java": "import java.util.Scanner;\n\npublic class Main {\n    static int res = 0;\n    public static void main(String[] args){\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int x = scanner.nextInt();\n        long[] cur_room = new long[n];\n        int min_dis = Integer.MAX_VALUE;\n        int idx_min = -1;\n        long min = Integer.MAX_VALUE;\n        for(int i = 0; i<n; i++){\n            int cur_dis = (x-1>i?x-i-1:x+n-i-1);\n            if(cur_dis == n){\n                cur_dis = 0;\n            }\n            //System.out.println(\"\u4e0ex\u95f4\u8ddd\u4e3a\"+cur_dis);\n            int cur = scanner.nextInt();\n            cur_room[i] = cur;\n            if(cur < min){\n                idx_min = i;\n                min = cur;\n                min_dis = cur_dis;\n                //System.out.println(\"\u66f4\u65b0\u6700\u5c0f\u503c\u4e3a\"+min+\",\u6700\u5c0f\u503c\u5e8f\u53f7\u4e3a\"+idx_min+\",\u6700\u5c0f\u95f4\u8ddd\u4e3a\"+min_dis);\n            } else if(cur == min){\n                if(cur_dis < min_dis){\n                    idx_min = i;\n                    min_dis = cur_dis;\n                    //System.out.println(\"\u66f4\u65b0\u6700\u5c0f\u503c\u4e3a\"+min+\",\u6700\u5c0f\u503c\u5e8f\u53f7\u4e3a\"+idx_min+\",\u6700\u5c0f\u95f4\u8ddd\u4e3a\"+min_dis);\n                }\n            }\n        }\n        long[] pre_room = new long[n];\n        if(idx_min+1 == x){\n            //System.out.println(\"i = x\");\n            for(int i =0; i<n; i++){\n                if(i == idx_min){\n                    pre_room[i] = min * n + min_dis;\n                } else {\n                    pre_room[i] = cur_room[i] - min;\n                }\n            }\n        } else if(idx_min+1 < x){\n            //System.out.println(\"i\u5728x\u524d\");\n            for(int i =0; i<n; i++){\n                if(i == idx_min){\n                    pre_room[i] = min * n + min_dis;\n                } else {\n                    if(i+1>idx_min+1 && i+1<=x){\n                        pre_room[i] = cur_room[i] - min- 1;\n                    } else {\n                        pre_room[i] = cur_room[i] - min;\n                    }\n                }\n            }\n        } else if(idx_min+1 > x){\n            //System.out.println(\"i\u5728x\u540e\");\n            for(int i =0; i<n; i++){\n                if(i == idx_min){\n                    pre_room[i] = min * n + min_dis;\n                } else {\n                    if(i+1>idx_min+1 || i+1<=x){\n                        pre_room[i] = cur_room[i] - min - 1;\n                    } else {\n                        pre_room[i] = cur_room[i] - min;\n                    }\n                }\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for(long e:pre_room){\n            sb.append(e).append(\" \");\n        }\n        System.out.println(sb.toString().trim());\n    }\n\n}",
        "python": "def calperson(n,x,a):\n    x=x-1\n    min_person=min(a)\n    count=n*min_person\n    for i in range(n):\n        a[i]=a[i]-min_person\n    while a[x]!=0:\n        a[x]=a[x]-1\n        count+=1\n        x=(x+n-1)%n\n    a[x]=count\n    return ' '.join(map(str,a))\n \nn,x=map(int,input().split())\na=list(map(int,input().split()))\nprint(calperson(n,x,a))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u6bcd\u4ea4\u6362",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\npublic class Main{\n    public static void main(String[] args) throws IOException {\n\t        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t        String[] strs = br.readLine().split(\" \");\n\t        String s = strs[0];\n\t        int m = Integer.parseInt(strs[1]);\n\t \n\t        ArrayList<ArrayList<Integer>> positions = new ArrayList<>();\n\t        for (int i = 0; i < 26; i++) {\n\t            positions.add(new ArrayList<>());\n\t        }\n\t        for (int i = 0; i < s.length(); i++) {\n\t            positions.get(s.charAt(i) - 'a').add(i);//\u6807\u8bb0\u6bcf\u4e2a\u5b57\u6bcd\u5728\u54ea\u4e2a\u4f4d\u7f6e\u51fa\u73b0\u8fc7\n\t        }\n\t \n\t        int res = 0;\n\t        //\u5bf9\u6240\u6709\u5b57\u6bcd\uff0c\u6c42\u5728\u81f3\u591am\u6b21\u4ea4\u6362\u540e\u6240\u80fd\u5f62\u6210\u6700\u957f\u76f8\u540c\u4e14\u8fde\u7eed\u7684\u5b50\u4e32\u7684\u957f\u5ea6\n\t        for (int i = 0; i < 26; i++) {\n\t        \tif(positions.get(i).size()!= 0) {\n\t            res = Math.max(res, cal(positions.get(i),positions.get(i).size(), m));\n\t        \t}\n\t        }\n\t        System.out.println(res);\n\t    }\n\t \n\t    //\u6c42\u5728\u81f3\u591am\u6b21\u4ea4\u6362\u540e\uff0c\u5b57\u7b26\u4e32\u6700\u591a\u6709\u591a\u5c11\u4e2a\u7ed9\u5b9a\u7684\u5b57\u6bcd\u8fde\u7eed\n\t    private static int cal(ArrayList<Integer> p,int num, int m) {\n\t        while(num > 1) {\n\t        \tfor(int i = 0; i <= p.size() - num; i++) {\n\t        \t\tint mid = i+num/2;\n\t        \t\tint count = 0;\n\t        \t\t\n\t        \t\tfor(int j = i; j < i+num; j++) {\n\t        \t\t\tif(j != mid) {\n\t        \t\t\t\tcount = count + Math.abs(p.get(mid) - p.get(j))- Math.abs(mid-j);\n\t        \t\t\t\t\n\t        \t\t\t}\n\t        \t\t}\n\t        \t\tif(count <= m) return num;\n\t        \t}\n\t        \tnum--;\n\t        }\n\t        return num;\n\t    }\n}",
        "python": "def cal(num,cur_list,m):\n    len_=num\n    while num>1:\n        for i in range(len_ - num + 1):\n            count=0\n            mid=i+num//2\n            for j in range(i,len_):\n                count+=abs(cur_list[j]-cur_list[mid])-abs(mid-j)\n            if count<=m:\n                return num\n        num-=1\n    return 0\ndef change(s,m):\n    s=list(s)\n    alp_dict={}\n    for i in range(len(s)):\n        c=s[i]\n        if c not in alp_dict:\n            alp_dict[c]=[i]\n        else:\n            alp_dict[c].append(i)\n    res = 1 \n    for c in alp_dict:\n        c_count=0\n        num=len(alp_dict[c])\n        cur_list=alp_dict[c]\n        res = max(res, cal(num,cur_list,m))\n    return res\ns,m=input().split()\nprint(change(s,int(m)))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7528\u6237\u559c\u597d",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Scanner;\n \npublic class Main {\n    /**\n     * n\u4e2a\u7528\u6237\uff0cn\u4e2a\u559c\u6b22\u7a0b\u5ea6\n     * q\u4e2a\u67e5\u8be2\n     * \u6bcf\u4e2a\u67e5\u8be2 \u8d77\u70b9 \u7ec8\u70b9 \u559c\u6b22\u7a0b\u5ea6\n     *\n     * \u67e5\u8be2\u7ed9\u5b9a\u8303\u56f4\u5185\u559c\u6b22\u7a0b\u5ea6\u7684\u6570\u91cf\n     * */\n    public String preferenceCount(String[] like,String[] query){\n        if(like==null||query==null)\n            return null;\n        HashMap<Integer,ArrayList<Integer>> map = new HashMap<>();\n        for(int i=0;i<like.length;i++){\n            int favor = Integer.parseInt(like[i]);\n            if(!map.containsKey(favor))\n                map.put(favor,new ArrayList<>());\n            map.get(favor).add(i+1);\n        }\n        StringBuilder res = new StringBuilder();\n        int q = query.length;\n        for(int i=0;i<q;i++){\n            String[] tmp = query[i].split(\" \");\n            int l = Integer.parseInt(tmp[0]);\n            int r = Integer.parseInt(tmp[1]);\n            int k = Integer.parseInt(tmp[2]);\n            if(!map.containsKey(k)) {\n                res.append(\"0\\n\");\n                continue;\n            }\n            ArrayList list = map.get(k);\n            int len = getSum(l,r,list);\n            res.append(len);\n            res.append(\"\\n\");\n        }\n        res.deleteCharAt(res.length()-1);\n        return res.toString();\n    }\n    private int getSum(int low,int high,ArrayList<Integer> list){\n        int l = 0;\n        int r = list.size()-1;\n        while(l<list.size() && list.get(l)<low){\n            ++l;\n        }\n        while(r>=0 && list.get(r)>high){\n            --r;\n        }\n        return r-l+1;\n    }\n \n    public static void main(String[] args) throws IOException {\n        Main m = new Main();\n        InputStreamReader ir = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(ir);\n        int n = Integer.parseInt(br.readLine());\n        String[] like = br.readLine().split(\" \");\n        int q = Integer.parseInt(br.readLine());\n        String[] ques = new String[q];\n        for (int i=0; i<q; ++i){\n            ques[i] = br.readLine();\n        }\n        System.out.println(m.preferenceCount(like,ques));\n        ir.close();\n    }\n}",
        "python": "from collections import defaultdict\nimport bisect\ndef search(l,r,k):\n    x_bisect = bisect.bisect_left(like[k],int(l)-1)\n    y_bisect = bisect.bisect_right(like[k],int(r)-1)\n    return y_bisect-x_bisect\nn = int(input())\ntemp = input().split()\nlike = defaultdict(list)\nfor i in range(n):\n    like[temp[i]].append(i)\nm = int(input())\ncount = [0]*m\nfor i in range(m):\n    count[i] = search(*input().split())\nfor i in count:\n    print(i)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u624b\u4e32",
        "java": "import java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main{\n\tpublic static void main(String[] args)throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] para = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(para[0]);\n\t\tint m = Integer.parseInt(para[1]);\n\t\tint c = Integer.parseInt(para[2]);\n\t\tHashMap<Integer,ArrayList<Integer>> color_map = new HashMap<>();\n\t\tfor(int i=0; i<n; ++i){\n\t\t\tpara = br.readLine().split(\" \");\n\t\t\tint color_num = Integer.parseInt(para[0]);\n\t\t\tfor(int j=1; j<=color_num; ++j){\n\t\t\t\tint tem = Integer.parseInt(para[j]);\n\t\t\t\tif(!color_map.containsKey(tem))\n\t\t\t\t\tcolor_map.put(tem,new ArrayList<>());\n\t\t\t\tcolor_map.get(tem).add(i);\n\t\t\t}\n\t\t}\n\t\tint count = 0;\n\t\tfor(int i=1; i<=c; ++i){\n\t\t\tif(!isVaild(i,n,m,color_map))\n\t\t\t\t++count;\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n\n\tpublic static boolean isVaild(int colorType, int n, int m, HashMap<Integer,ArrayList<Integer>> color_map){\n\t\tArrayList<Integer> list = color_map.get(colorType);\n\t\tif(list.size()<=1) return true;\n\t\tlist.add(list.get(0)+ n );\n\t\tfor(int i=1; i<list.size(); ++i){\n\t\t\tif(list.get(i)-list.get(i-1)<m){\n\t\t\t\tlist.remove(list.size()-1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tlist.remove(list.size()-1);\n\t\treturn true;\n\t}\n}",
        "python": "import sys \nfault=0\nhash={}\nn,m,c=sys.stdin.readline().strip('\\n').split(' ')\nn,m,c=int(n),int(m),int(c)\nfor i in range(n):\n    line=sys.stdin.readline().strip('\\n').split(' ')[1:]\n    for j in set(line):\n        if j not in hash:\n            hash[j]=[i]\n        else:\n            hash[j].append(i)\nvalues=list(hash.values())\nfor i in range(len(values)):\n    if len(values[i])>1:\n        for j in range(len(values[i])-1):\n            if (values[i][j+1]-values[i][j])%(n)<m:\n                fault+=1\n                break\nprint(fault)\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98983",
        "java": "import java.util.*;\n \npublic class Main {\n    public static void main( String[] args ) {\n        Scanner sc = new Scanner( System.in );\n        int n = sc.nextInt(), m = sc.nextInt(), p = sc.nextInt();\n        Idea[] ideas = new Idea[p];\n        Thinker[] thinkers = new Thinker[n];\n        Implementor[] implementors = new Implementor[m];\n        for( int i = 0; i < m; i ++ )\n            impleQueue.push( implementors[i] = new Implementor() );\n        for( int i = 0; i < n; i ++ )\n            thinkers[i] = new Thinker( i );\n        for( int i = 0; i < p; i ++ ) {\n            int pm = sc.nextInt()-1;\n            int time = sc.nextInt();\n            int prio = sc.nextInt();\n            int cost = sc.nextInt();\n            ideas[i] = new Idea( time, prio, cost );\n            events.offer( thinkers[pm].getIdea( ideas[i] ) );\n        }\n        while( !events.isEmpty() ) {\n            int time = events.peek().time;\n            do { events.poll().occur();\n            } while( !events.isEmpty() && events.peek().time == time );\n            while( !impleQueue.isEmpty() && !thinkerQueue.isEmpty() ) {\n                Thinker tmp1 = thinkerQueue.poll();\n                Implementor tmp2 = impleQueue.pop();\n                Idea tmp3 = tmp1.ideaQueue.poll();\n                tmp3.finish = time + tmp3.cost;\n                events.offer( tmp2.peekIdea( tmp3 ) );\n                if( !tmp1.ideaQueue.isEmpty() ) thinkerQueue.offer( tmp1 );\n            }\n        }\n        for( int i = 0; i < p; i ++ )\n            System.out.println( ideas[i].finish );\n        sc.close();\n    }\n    static PriorityQueue<Thinker> thinkerQueue = new PriorityQueue<>(\n        (Thinker t1,Thinker t2) -> {\n            int c1 = t1.ideaQueue.peek().cost;\n            int c2 = t2.ideaQueue.peek().cost;\n            return c1 == c2 ? t1.order - t2.order : c1 - c2;\n        }\n    );\n    static ArrayDeque<Implementor> impleQueue = new ArrayDeque<>();\n    static PriorityQueue<Event> events =\n        new PriorityQueue<>( (Event e1,Event e2) -> e1.time - e2.time );\n    static class Idea {\n        int time, prio, cost, finish;\n        Idea( int t, int p, int c ) { time = t; prio = p; cost = c; }\n    }\n    static class Thinker {\n        PriorityQueue<Idea> ideaQueue = new PriorityQueue<>(\n            (Idea i1,Idea i2) -> {\n                if( i1.prio != i2.prio ) return i2.prio - i1.prio;\n                else if( i1.cost != i2.cost ) return i1.cost - i2.cost;\n                else return i1.time - i2.time;\n            }\n        );\n        int order;\n        Thinker( int o ) { order = o; }\n        IdeaEvent getIdea( Idea idea ) {\n            return new IdeaEvent( this, idea );\n        }\n    }\n    static class Implementor {\n        FinishEvent peekIdea( Idea idea ) {\n            return new FinishEvent( this, idea );\n        }\n    }\n    static abstract class Event {\n        int time;\n        Event( int t ) { time = t; }\n        abstract void occur();\n    }\n    static class IdeaEvent extends Event {\n        Thinker thinker;\n        Idea idea;\n        IdeaEvent( Thinker t, Idea i ) {\n            super( i.time );\n            thinker = t; idea = i;\n        }\n        void occur() {\n            thinkerQueue.remove( thinker );\n            thinker.ideaQueue.offer( idea );\n            thinkerQueue.offer( thinker );\n        }\n    }\n    static class FinishEvent extends Event {\n        Implementor implementor;\n        Idea idea;\n        FinishEvent( Implementor imple, Idea i ) {\n            super( i.finish );\n            implementor = imple; idea = i;\n        }\n        void occur() {\n            impleQueue.push( implementor );\n        }\n    }\n}",
        "python": "import heapq\n\ndef get_ideas_implementing_time(ideas,N,M):\n    ideas_for_pm = {}\n    avaiable_ideas_for_pm = {}\n    time_of_ideas = []\n    for idea_index,single_idea in enumerate(ideas):\n        if single_idea[0] not in ideas_for_pm:\n            ideas_for_pm[single_idea[0]] = []\n            avaiable_ideas_for_pm[single_idea[0]] = []\n        heapq.heappush(ideas_for_pm[single_idea[0]],[single_idea[1],-single_idea[2],single_idea[3],single_idea[1],single_idea[0],idea_index])\n        heapq.heappush(time_of_ideas,single_idea[1])\n    #print(f\"ideas_for_pm:{ideas_for_pm}\")\n    implement_time = [-1]*len(ideas)\n    time_for_programmer_is_free = [1]*M\n    avaiable_ideas_num = 0\n    for _ in range(len(ideas)):\n        ideas_wait_programmer_to_choose = []\n        #print(f\"time_of_ideas:{time_of_ideas}\")\n        #print(f\"time_for_programmer_is_free:{time_for_programmer_is_free}\")\n        #print(f\"avaiable_ideas_for_pm:{avaiable_ideas_for_pm}\")\n        if len(time_of_ideas) > 0 and (avaiable_ideas_num <= 0 or time_of_ideas[0] <= time_for_programmer_is_free[0]):\n            current_time = max(time_of_ideas[0],time_for_programmer_is_free[0])\n            for pm_index in ideas_for_pm.keys():\n                while(len(ideas_for_pm[pm_index])>0 and ideas_for_pm[pm_index][0][0] <= current_time):\n                    heapq.heappush(avaiable_ideas_for_pm[pm_index],heapq.heappop(ideas_for_pm[pm_index])[1:])\n                    heapq.heappop(time_of_ideas)\n                    avaiable_ideas_num += 1\n        else:\n            current_time = max(current_time,time_for_programmer_is_free[0])\n        #print(f\"avaiable_ideas_for_pm:{avaiable_ideas_for_pm}\")\n        #print(f\"ideas_wait_programmer_to_choose:{ideas_wait_programmer_to_choose}\")\n        for pm_index in avaiable_ideas_for_pm.keys():\n            if len(avaiable_ideas_for_pm[pm_index]) > 0:\n                negative_priority,need_time,proposal_time,pm_index_this_idea,idea_index = avaiable_ideas_for_pm[pm_index][0]\n                heapq.heappush(ideas_wait_programmer_to_choose,[need_time,pm_index_this_idea,idea_index])\n        #print(f\"ideas_wait_programmer_to_choose:{ideas_wait_programmer_to_choose}\")\n        completed_idea_need_time,completed_pm_index,completed_idea_index = ideas_wait_programmer_to_choose[0]\n        heapq.heapreplace(time_for_programmer_is_free,current_time + completed_idea_need_time)\n        implement_time[completed_idea_index] = current_time + completed_idea_need_time\n        heapq.heappop(avaiable_ideas_for_pm[completed_pm_index])\n        avaiable_ideas_num -= 1\n\n    return implement_time\n\n\n\nif __name__ == \"__main__\":\n    N,M,P = list(map(int,input().split(\" \")))\n    ideas = []\n    for _ in range(P):\n        ideas.append(list(map(int,input().split(\" \"))))\n    for single_time in get_ideas_implementing_time(ideas,N,M):\n        print(single_time)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98982",
        "java": "import java.io.*;\nimport java.util.*;\npublic class Main{\n    public static void main(String[] args) throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int[] arr = new int[n];\n        String[] strs = br.readLine().split(\" \");\n        for(int i = 0; i < n; i++) arr[i] = Integer.parseInt(strs[i]);\n        br.close(); strs = null;\n        int[] memo = new int[n]; // \u5b58\u653e0-i\u7684\u548c\n        memo[0] = arr[0];\n        for(int i = 1; i < n; i++) memo[i] = memo[i-1]+arr[i];\n        // \u975e\u4e25\u683c\u5355\u8c03\u9012\u589e\u6808\uff0c\u5c06\u6bcf\u4e2a\u6570\u770b\u4f5c\u6700\u5c0f\u6570\u627e\u5230\u5de6\u53f3\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5c0f\u7684\u6570\n        LinkedList<Integer> stack = new LinkedList<>();\n        int i = 0, res = 0;\n        while(i < n){\n            if(!stack.isEmpty() && arr[stack.peekLast()] > arr[i]){ // \u8fd9\u91cci\u4e0d\u8981\u589e\u52a0\uff0c\u7528\u4e8e\u5728\u5faa\u73af\u4e2d\u5c06\u6240\u6709\u4e0d\u7b26\u5408\u7684\u5143\u7d20\u90fd\u5f39\u51fa\n                int tmp;\n                if(stack.size() == 1)\n                    tmp = arr[stack.pollLast()]*memo[i-1];\n                else tmp = arr[stack.pollLast()]*(memo[i-1]-memo[stack.peekLast()]);\n                if(tmp > res) res = tmp;\n            }else stack.offer(i++); // \u7b49\u4e8e\u7684\u65f6\u5019\u4e5f\u9700\u8981\u5165\u6808,\u4e0d\u7136\u4e4b\u540e\u7684\u6570\u6ca1\u6cd5\u786e\u5b9a\u5de6\u8fb9\u754c\n        }\n        // \u5c06\u5269\u4e0b\u7684\u5143\u7d20\u90fd\u5904\u7406\u5f39\u51fa\uff0c\u5269\u4e0b\u7684\u5143\u7d20\u6ca1\u6709\u53f3\u8fb9\u754c\n        while(!stack.isEmpty()){\n            int tmp;\n            if(stack.size() == 1)\n                tmp = arr[stack.pollLast()]*memo[n-1]; // \u8fd9\u4e2a\u6570\u5c31\u662farr\u4e2d\u7684\u6700\u5c0f\u6570\n            else tmp = arr[stack.pollLast()]*(memo[n-1]-memo[stack.peekLast()]);\n            if(tmp > res) res = tmp;\n        }\n        System.out.println(res);\n    }\n}",
        "python": "import sys\n \ndef f(nums):\n    stk = [[0,0]]\n    left = right = 0\n    res = 0\n    for num in nums:\n        while stk[-1][0] > num:\n            top = stk.pop()\n            left = top[1]\n            res = max(res, top[0] * (right - top[1]))\n        right += num\n        stk.append((num, left))\n        left = right\n    while len(stk) != 0:\n        top = stk.pop()\n        res = max(res, top[0] * (right - top[1]))\n    return res\n     \nn = int(sys.stdin.readline().strip())\nnums = [int(e) for e in sys.stdin.readline().strip().split(' ')]\nprint(f(nums))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u7b26\u4e32\u7ec4\u5408",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.TreeSet;\n \n/**\n * @author wylu\n */\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str = br.readLine();\n \n        StringBuilder sb = new StringBuilder();\n        for (int i = 1; i <= str.length(); i++) {\n            TreeSet<String> sortedSet = new TreeSet<>();\n            for (int j = 0; j + i <= str.length(); j++) {\n                sortedSet.add(str.substring(j, j + i));\n            }\n            for (String s : sortedSet) {\n                sb.append(s).append(\" \");\n            }\n        }\n        System.out.println(sb);\n    }\n}\n",
        "python": "s = input()\ns = list(s)\nfor i in range(1,len(s)+1):\n    words = []\n    for j in range(0, len(s)):\n        #for p in range(i,len(s)+1):\n        if(j+i<len(s)+1):\n            t = ''.join(s[j:j+i])\n            if t not in words:\n                words.append(t)\n    words.sort()\n    print(' '.join(words),end=' ')"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6570\u72ec",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \n/**\n * @author wylu\n */\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int[][] sudoku = new int[9][9];\n        for (int i = 0; i < 9; i++) {\n            String[] strs = br.readLine().split(\" \");\n            for (int j = 0; j < 9; j++) {\n                sudoku[i][j] = Integer.parseInt(strs[j]);\n            }\n        }\n \n        dfs(sudoku, 0, 0);\n    }\n \n    private static boolean dfs(int[][] sudoku, int i, int j) {\n        if (i == 8 && j == 9) {\n            prtSudoku(sudoku);\n            return true;\n        }\n        if (j == 9) {\n            i++;\n            j = 0;\n        }\n \n        boolean res = false;\n        if (sudoku[i][j] == 0) {\n            boolean[] options = optionalNumber(sudoku, i, j);\n            for (int k = 1; k < options.length; k++) {\n                if (!res && !options[k]) {\n                    sudoku[i][j] = k;\n                    res = dfs(sudoku, i, j + 1);\n                }\n            }\n            if (!res) sudoku[i][j] = 0;\n        } else {\n            dfs(sudoku, i, j + 1);\n        }\n        return res;\n    }\n \n    private static void prtSudoku(int[][] sudoku) {\n        for (int i = 0; i < sudoku.length; i++) {\n            for (int j = 0; j < sudoku[0].length - 1; j++) {\n                System.out.print(sudoku[i][j] + \" \");\n            }\n            System.out.println(sudoku[i][sudoku[0].length - 1]);\n        }\n    }\n \n    private static boolean[] optionalNumber(int[][] sudoku, int x, int y) {\n        boolean[] options = new boolean[10];\n        for (int i = 0; i < sudoku.length; i++) {\n            options[sudoku[x][i]] = true;\n            options[sudoku[i][y]] = true;\n        }\n        int row = x / 3 * 3, col = y / 3 * 3;\n        for (int i = row; i < row + 3; i++) {\n            for (int j = col; j < col + 3; j++) {\n                options[sudoku[i][j]] = true;\n            }\n        }\n        return options;\n    }\n}",
        "python": "\n\n##\u6808\u5b9e\u73b0DFS\uff1f\nboard=[]\nfor _ in range(9):\n    board.append(input().replace(' ',''))\n#print(board)\ndef isV(board,x,y,c):\n    for i in range(9):\n        if board[x][i]==c or board[i][y]==c:\n            return False\n    for j in range(3*(x//3),3*(x//3)+3):\n        for k in range(3*(y//3),3*(y//3)+3):\n            if board[j][k]==c: return False\n    return True\nnum=[]\nfor i in range(9):\n    for j in range(9):\n        if board[i][j]=='0':\n            num.append([i,j])\nq=[[board,0]]\nres='#'\nwhile q:\n    board,idx=q.pop()\n    if idx==len(num): \n        res=board[:]\n        break\n    i,j=num[idx]\n    for c in '123456789':\n        if isV(board,i,j,c):\n            tmp=board[i]\n            cur=tmp[:j]+c+tmp[j+1:]\n            board[i]=cur\n            q.append([board[:],idx+1])\nfor i in range(9):\n    s1=[]\n    for c in res[i]:\n        s1.append(c)\n    print(' '.join(s1))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8ba1\u7b97\u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t// TODO \u81ea\u52a8\u751f\u6210\u7684\u65b9\u6cd5\u5b58\u6839\n\t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n\t\tString st[] = bf.readLine().split(\" \");\n\t\tint[] a = new int[st.length];\n\t\tint[] days={31,28,31,30,31,30,31,31,30,31,30,31};\n\t\tint sum = 0;\n\t\tfor(int i=0;i<st.length;i++){\n\t\t\ta[i] = Integer.parseInt(st[i]);\n\t\t}\n\t\tif((a[0]%4==0 && a[0]!=0) || a[0]%400==0){\n\t\t\tfor(int j=0;j<(a[1]-1);j++){\n\t\t\t\tsum += days[j];\n\t\t\t}\n\t\t\tsum = sum+a[2]+1;\n\t\t\tSystem.out.println(sum);\n\t\t}else{\n\t\t\tfor(int k=0;k<(a[1]-1);k++){\n\t\t\t\tsum += days[k];\n\t\t\t}\n\t\t\tsum = sum+a[2];\n\t\t\tSystem.out.println(sum);\n\t\t}\n\t}\n\n}\n",
        "python": "day = [31,28,31,30,31,30,31,31,30,31,30,31]\nwhile True:\n    try:\n        y,m,d = list(map(int,input().split()))\n        if m==1:\n            out = d\n        else:\n            out = 0\n            for i in range(m-1):\n                out=out+day[i]\n            out = out + d\n            if y%4 == 0 and m>2:\n                out = out+1\n        print(out)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5305\u88f9\u8fd0\u8f93",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \n/**\n * @author wylu\n */\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line;\n        while ((line = br.readLine()) != null) {\n            String[] strs = line.split(\" \");\n            int[] counts = new int[strs.length];\n            boolean flag = true;\n            for (int i = 0; i < strs.length; i++) {\n                counts[i] = Integer.parseInt(strs[i]);\n                if (flag && counts[i] != 0) flag = false;\n            }\n            if (flag) return;\n \n            // 6 * 6\n            int res = counts[5];\n \n            // 5 * 5\n            res += counts[4];\n            counts[0] -= counts[4] * 11;\n \n            // 4 * 4\n            res += counts[3];\n            int fillTwo = counts[3] * 5;\n            counts[1] -= (fillTwo >= counts[1]) ? counts[1] : fillTwo;\n            counts[0] -= (fillTwo >= counts[1]) ? (fillTwo - counts[1]) : 0;\n \n            // 3 * 3\n            int rmd = counts[2] % 4;\n            res += (counts[2] / 4 + (rmd == 0 ? 0 : 1));\n            int[] two = {0, 5, 3, 1}, one = {0, 27, 18, 9};\n            if (rmd > 0) {\n                counts[1] -= (two[rmd] >= counts[1]) ? counts[1] : two[rmd];\n                counts[0] -= (two[rmd] >= counts[1]) ? (one[rmd] - counts[1] * 4) : (8 - rmd);\n            }\n \n            // 2 * 2\n            res += (counts[1] / 9  + (counts[1] % 9 == 0 ? 0 : 1));\n            if (counts[1] % 9 > 0) counts[0] -= (36 - counts[1] % 9 * 4);\n \n            // 1 * 1\n            if (counts[1] > 0) res += (counts[0] / 36 + (counts[0] % 36 == 0 ? 0 : 1));\n            System.out.println(res);\n        }\n    }\n}",
        "python": "while True:\n    try:\n        list1 = [int(i) for i in input().split()]\n        if list1.count(0) == 6:\n            break\n    except:\n        break\n    cnt = list1[-1]+list1[-2]+list1[-3]+(list1[-4]+3)//4\n    empty2 = 5*list1[-3]\n    empty1 = 11*list1[-2]\n    if list1[2]%4 ==1:\n        empty2 += 5\n        empty1 += 7\n    elif list1[2]%4 == 2:\n        empty2 += 3\n        empty1 += 6\n    elif list1[2]%4 == 3:\n        empty2 += 1\n        empty1 += 5\n    if list1[1]<= empty2:\n        empty1 += (empty2-list1[1])*4\n        list1[1] = 0\n    else:\n        list1[1] -= empty2\n    cnt += (list1[1]+8)//9\n    empty1 += 4*(list1[1]%9)\n    cnt += (0 if empty1>=list1[0] else (list1[0]-empty1+35)//36)\n    print(cnt)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>Kolakoski \u5e8f\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\tpublic static void main(String[] argss)throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] p = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(p[0]);\n\t\tint m = Integer.parseInt(p[1]);\n\t\tString[] strs = br.readLine().split(\" \");\n\t\tString[] res = new String[n];\n\t\tint tem = Integer.parseInt(strs[0]);\n\t\tint te = 0;\n\t\tint index = 0;\n\t\tfor(int i=0; i<n; ++i){\n\t\t\tres[i] = strs[index];\n\t\t\t--tem;\n\t\t\tif(tem==0){\n\t\t\t\t++te;\n\t\t\t\tif(res[te]==null){\n\t\t\t\t\ttem = Integer.parseInt(strs[index+1]);\n\t\t\t\t}else{\n\t\t\t\t\ttem = Integer.parseInt(res[te]);\n\t\t\t\t}\n\t\t\t\tindex = ++index%m;\n\t\t\t}\n\t\t\tSystem.out.println(res[i]);\n\t\t}\n\t}\n}",
        "python": "n, m = map(int, input().split())\na = list(map(int, input().split()))\ni = 0\nk = []\nnum = a[0]\nnum_index = 0\nwhile len(k) < n:\n    k.extend([a[i]]*num)\n    i += 1\n    i = i % m\n    num_index += 1\n    if num_index >= len(k):\n        num = a[i]\n    else:\n        num = k[num_index]\nfor i in range(n):\n    print(k[i])"
    }
][
    {
        "question": ">>>>>>>>>>>>>>>>>\u6700\u5927\u4e58\u79ef",
        "java": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\n  \npublic class Main {\n    public static void main(String[] args) throws IOException {\n        InputStreamReader ir = new InputStreamReader(System.in);\n        BufferedReader bf = new BufferedReader(ir);\n        int n = Integer.parseInt(bf.readLine());\n        String[] str = bf.readLine().split(\" \");\n        int[] nums=new int[str.length];\n        for (int i=0;i<str.length;++i){\n            nums[i]=Integer.parseInt(str[i]);\n        }\n        System.out.println(maximumProduct(nums));\n    }\n    public static long maximumProduct(int[] nums) {\n        int max1 = Integer.MIN_VALUE, max2 = Integer.MIN_VALUE, max3 = Integer.MIN_VALUE, min1 = Integer.MAX_VALUE, min2 = Integer.MAX_VALUE;\n        for (int n : nums) {\n            if (n > max1) {\n                max3 = max2;\n                max2 = max1;\n                max1 = n;\n            } else if (n > max2) {\n                max3 = max2;\n                max2 = n;\n            } else if (n > max3) {\n                max3 = n;\n            }\n  \n            if (n < min1) {\n                min2 = min1;\n                min1 = n;\n            } else if (n < min2) {\n                min2 = n;\n            }\n        }\n        return Math.max((long)max1*max2*max3, (long)max1*min1*min2);\n    }\n}",
        "python": "n=int(input().strip())\nl=list(map(int,input().strip().split()))\ndef max_l(l,n):\n    if n<3:\n        return None\n    if n==3:\n        return l[0]*l[1]*l[2]\n    a,b=[],[]\n    a1,a2=l[:],l[:]\n    for i in range(3):\n        max1=max(a1)\n        a.append(max1)\n        a1.remove(max1)\n    for i in range(2):\n        min2=min(a2)\n        b.append(min2)\n        a2.remove(min2)\n    maxNum=max(a[0]*a[1]*a[2],b[0]*b[1]*a[0])\n    return maxNum\nprint(max_l(l,n))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5927\u6574\u6570\u76f8\u4e58",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main{\n        public String mul(String num1,String num2){\n        int[] nums1 = new int[num1.length()],nums2=new int[num2.length()],res=new int[num1.length()+num2.length()];\n        for(int i =num1.length()-1; i >=0;i --){\n            nums1[i] = num1.charAt(num1.length()-1-i)-'0';\n        }\n        for(int i =num2.length()-1; i >=0;i --){\n            nums2[i] = num2.charAt(num2.length()-1-i)-'0';\n        }\n        for(int i =0; i < num1.length(); i++){\n            for(int j = 0;j <num2.length();j++){\n                res[i+j] += nums1[i]*nums2[j];\n            }\n        }\n        \n        for(int i =1;i<res.length;i++){\n            \n            res[i] += res[i-1]/10;\n            \n            res[i-1] = res[i-1]%10;\n        }\n        StringBuffer buffer = new StringBuffer();\n        boolean start = false;\n        for(int i =res.length-1; i >=0; i--){\n            if (!start &&res[i] == 0) continue;\n            else start = true;\n            buffer.append(res[i]);\n        }\n        return buffer.toString();\n    }\n    public static void main(String[] args) throws IOException{\n        Main c = new Main();\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        String input = bf.readLine();\n        String[] inputs = input.split(\" \");\n        String res = c.mul(inputs[0],inputs[1]);\n        System.out.println(res);\n    }\n}",
        "python": "s=input().split(' ')\nprint(str(int(s[0])*int(s[1])))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u516d\u4e00\u513f\u7ae5\u8282",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.lang.reflect.Array;\nimport java.util.ArrayList;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String args[]) throws IOException{\n        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));\n        int n=Integer.parseInt(bf.readLine());\n        String s[]=bf.readLine().split(\" \");\n        int h[]=new int[n];\n        for(int i=0;i<n;i++ ){\n            h[i]=Integer.parseInt(s[i]);\n        }\n        Arrays.sort(h);\n        int m=Integer.parseInt(bf.readLine());\n        String p[]=bf.readLine().split(\" \");\n        int w[]=new int[m];\n        for(int i=0;i<m;i++){\n            w[i]=Integer.parseInt(p[i]);\n        }\n        Arrays.sort(w);\n        int result=0;\n        int i=0,j=0;\n        while(i<n && j<m){\n            if(w[j]>=h[i]){\n                result++;\n                i++;\n            }\n            j++;\n        }\n        System.out.println(result);\n    }\n}",
        "python": "n=int(input())\nharr=list(map(int,input().split()))\nm=int(input())\nmarr=list(map(int,input().split()))\nharr.sort()\nmarr.sort()\ncnt=0\nk=0\nflag=0\nfor i in range(n):\n    for j in range(k,m):\n        if marr[j]>=harr[i]:\n            cnt=cnt+1\n            k=j+1\n            flag=1\n            break\n    if flag==0:\n        break\nprint(cnt)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8ff7\u5bab\u5bfb\u8def",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main{\n    static int rows;static int cols;static char[][] map;\n    static int[][] direction = {{-1,0},{0,1},{1,0},{0,-1}};\n    public static void main(String[] args) throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] rowAndCol = br.readLine().split(\"\\\\s\");\n        rows = Integer.parseInt(rowAndCol[0]);\n        cols = Integer.parseInt(rowAndCol[1]);\n        map = new char[rows][cols];\n        for(int i=0;i<rows;i++)\n            map[i] = br.readLine().toCharArray();\n        Node result = null;\n        for(int i=0;i<rows;i++)\n        {\n            for(int j=0;j<cols;j++)\n            {\n                if(map[i][j]=='2'){\n                    result = bfs(i,j);\n                    break;\n                }   \n            }\n        }\n        System.out.println(result.step);\n    }\n    public static Node bfs(int row,int col){\n        Deque<Node> queue = new ArrayDeque();\n        queue.add(new Node(row,col,0,0));\n        Node.visit[row][col][0] = true;\n        while(!queue.isEmpty()){\n            Node node = queue.pop();\n            for(int i=0;i<direction.length;i++){\n                \n                int nrow = node.row + direction[i][0];\n                int ncol = node.col + direction[i][1];\n                if(nrow<0||nrow>=rows||\n                   ncol<0||ncol>=cols||\n                   map[nrow][ncol]=='0')continue;\n                \n                char c = map[nrow][ncol];\n                if(c=='3')return new Node(nrow,ncol,node.keys,node.step+1);\n                 \n                if(c>='A'&& c<='Z'&&(node.keys&(1<< c-'A'))==0) continue;\n                \n                int keys = node.keys;\n                if(c>='a'&& c<='z') keys = keys|(1<<c-'a');\n                \n                \n                if(!Node.visit[nrow][ncol][keys]){\n                    Node.visit[nrow][ncol][keys] = true;\n                    queue.add(new Node(nrow,ncol,keys,node.step+1));\n                }\n            }\n        }\n        return null;\n    }\n     \n    static class Node{\n        static boolean[][][] visit;\n        int keys;\n        int step;\n        int col;\n        int row;\n        public Node(int row,int col,int keys,int step){\n            this.col = col;\n            this.row = row;\n            this.keys = keys;\n            this.step = step;\n            if(visit==null)\n                visit = new boolean[rows][cols][1024];\n        }\n    }\n}\n",
        "python": "import java.util.*;\nimport java.io.*;\npublic class Main{\n    static int rows;static int cols;static char[][] map;\n    static int[][] direction = {{-1,0},{0,1},{1,0},{0,-1}};\n    public static void main(String[] args) throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] rowAndCol = br.readLine().split(\"\\\\s\");\n        rows = Integer.parseInt(rowAndCol[0]);\n        cols = Integer.parseInt(rowAndCol[1]);\n        map = new char[rows][cols];\n        for(int i=0;i<rows;i++)\n            map[i] = br.readLine().toCharArray();\n        Node result = null;\n        for(int i=0;i<rows;i++)\n        {\n            for(int j=0;j<cols;j++)\n            {\n                if(map[i][j]=='2'){\n                    result = bfs(i,j);\n                    break;\n                }   \n            }\n        }\n        System.out.println(result.step);\n    }\n    public static Node bfs(int row,int col){\n        Deque<Node> queue = new ArrayDeque();\n        queue.add(new Node(row,col,0,0));\n        Node.visit[row][col][0] = true;\n        while(!queue.isEmpty()){\n            Node node = queue.pop();\n            for(int i=0;i<direction.length;i++){\n                //\u67e5\u770b\u6bcf\u4e2a\u8282\u70b9\u7684\u76f8\u90bb\u8282\u70b9\u662f\u5426\u80fd\u591f\u4e0b\u811a\n                int nrow = node.row + direction[i][0];\n                int ncol = node.col + direction[i][1];\n                if(nrow<0||nrow>=rows||\n                   ncol<0||ncol>=cols||\n                   map[nrow][ncol]=='0')continue;\n                \n                char c = map[nrow][ncol];\n                if(c=='3')return new Node(nrow,ncol,node.keys,node.step+1);\n                 \n                if(c>='A'&& c<='Z'&&(node.keys&(1<< c-'A'))==0) continue;\n                //\u5982\u679c\u662f\u95e8\uff0c\u5e76\u4e14\u6ca1\u6709\u94a5\u5319\uff0c\u5219\u9003\u8fc7\n                int keys = node.keys;\n                if(c>='a'&& c<='z') keys = keys|(1<<c-'a');\n                //\u5177\u6709\u76f8\u540c\u7684\u94a5\u5319\u6570\u65f6\uff0c\u4e0d\u80fd\u5f80\u56de\u8d70\n                //\u53ea\u6709\u62ff\u5230\u65b0\u7684\u94a5\u5319\uff0c\u624d\u80fd\u5224\u5b9a\u8fd9\u53ef\u80fd\u662f\u6709\u6548\u8def\u5f84\uff0c\u624d\u80fd\u5f80\u56de\u8d70\n                if(!Node.visit[nrow][ncol][keys]){\n                    Node.visit[nrow][ncol][keys] = true;\n                    queue.add(new Node(nrow,ncol,keys,node.step+1));\n                }\n            }\n        }\n        return null;\n    }\n     \n    static class Node{\n        static boolean[][][] visit;\n        int keys;\n        int step;\n        int col;\n        int row;\n        public Node(int row,int col,int keys,int step){\n            this.col = col;\n            this.row = row;\n            this.keys = keys;\n            this.step = step;\n            if(visit==null)\n                visit = new boolean[rows][cols][1024];\n        }\n    }\n}\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5f69\u8272\u7684\u7816\u5757",
        "java": "import java.io.*;\nimport java.util.Scanner;\n\npublic class Main{\n    public static void main(String[] args) throws IOException{\n    \tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n    \tString s = br.readLine();\n    \tchar a = ' ';\n    \tchar b = ' ';\n    \tfor(char ch : s.toCharArray()){\n    \t\tif(a == ' '){\n    \t\t\ta = ch;\n    \t\t}\n    \t\telse if(ch != a && b == ' '){\n    \t\t\tb = ch;\n    \t\t}\n    \t\telse if(ch != a && ch != b){\n    \t\t\tSystem.out.println(0);\n    \t\t\treturn;\n    \t\t}\n    \t}\n    \tif(a == ' ' && b == ' '){\n    \t\tSystem.out.println(0);\n    \t}\n    \telse if(a != ' ' && b == ' '){\n    \t\tSystem.out.println(1);\n    \t}\n    \telse{\n    \t\tSystem.out.println(2);\n    \t}\n\n    }\n}",
        "python": "s = list(input())\ndiscnt = len(set(s))\nif discnt>2:\n    print(0)\nelif discnt==1:\n    print(1)\nelif discnt==2:\n    print(2)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7b49\u5dee\u6570\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n \n \npublic class Main{\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        Main m = new Main();\n        int cnt = Integer.parseInt(br.readLine());\n        String[] strArray = br.readLine().split(\" \");\n        int[] nums = new int[strArray.length];\n        for (int i = 0; i < nums.length; i++) {\n            nums[i] = Integer.parseInt(strArray[i]);\n        }\n\t\tSystem.out.println(m.problem2(cnt, nums));\n    }\n    \n    public String problem2(int cnt, int[] nums) {\n        \n        if (nums == null || nums.length <= 1) {\n            return \"Possible\";\n        }\n        Arrays.sort(nums);\n        int d = nums[1] - nums[0];\n        for (int i = 1; i < cnt; i++) {\n            if (nums[i] - nums[i - 1] != d) {\n                return \"Impossible\";\n            }\n        }\n        return \"Possible\";\n    }\n}",
        "python": "def dengcha(A):\n    A.sort()\n    d = A[1] - A[0]\n    for i in range(len(A)-1):\n        if A[i] != A[i+1] - d:\n            return 'Impossible'\n    return 'Possible'\n\nn = int(input())\nA = list(map(int, input().split(' ')))\nprint(dengcha(A))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4ea4\u951901\u4e32",
        "java": "import java.util.Scanner;\n\npublic class Main{\n    \n    public static void main(String args[]){\n\t\tScanner in=new Scanner(System.in);\n        \n        String str=in.next();\n        int max=1;\n        int sum=1;\n        for(int i=0;i<str.length()-1;i++){\n            if(str.chatAt(i)!=str.charAt(i+1)){\n                sum++;\n            }else{\n                if(sum>max){\n                    sum=max;\n                }\n                sum=01;\n            }\n        }\n        System.out.println(max);\n    }\n}",
        "python": "a = input()\n\nif len(a)==0:\n    print(0)\nelif len(a)==1:\n    print(1)\nelif len(a)==2:\n    if a[0]==a[1]:\n        print(2)\n    else:\n        print(1)\nelse:\n    count = 1\n    res = []\n    for i in range(0,len(a)-1):\n        if (a[i] != a[i+1]):\n            count += 1\n            if (i==(len(a)-2)):\n                res.append(count)\n        else:\n            res.append(count)\n            count = 1\n    max = max(res)\n    print(max)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u64cd\u4f5c\u5e8f\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        br.readLine();\n        String[] A = br.readLine().split(\" \");\n        StringBuilder B = new StringBuilder();\n        for(int i=A.length-1; i>=0; i-=2){\n            B.append(A[i]).append(\" \");\n        }\n        for(int i=(A.length & 1) == 1 ? 1 : 0; i<A.length; i+=2){\n            B.append((A[i])).append(\" \");\n        }\n        System.out.println(B.substring(0, B.length()-1));\n    }\n}",
        "python": "n = int(input().strip())\na = input().strip().split()\nprint(\" \".join(a[-1::-2]), end=\" \")\nprint(\" \".join(a[n%2::2]))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u72ec\u7acb\u7684\u5c0f\u6613",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static int maxDays(String[] sa) {\n\t\tint x = Integer.parseInt(sa[0]);\n\t\tint f = Integer.parseInt(sa[1]);\n\t\tint d = Integer.parseInt(sa[2]);\n\t\tint p = Integer.parseInt(sa[3]);\n\t\tif(d/x <= f) {\n\t\t\treturn d/x;\n\t\t}else {\n\t\t\treturn (d - x*f)/(x + p) + f;\n\t\t}\n\t}\n\t\n\tpublic static void main(String args[]) throws Exception{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] sa = br.readLine().split(\" \");\n\t\tSystem.out.println(maxDays(sa));\n\t}\n}",
        "python": "while True:\n    try:\n        x, f, d, p = [int(i) for i in input().split()]\n        days = (d+f*p)//(x+p)\n        if days>=f:\n            days= (d - f*x)//(x+p) + f\n            print(days)\n        else:\n            days = d//x\n            print(days)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5806\u68cb\u5b50",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\npublic class Main{\n\tpublic static void main(String[] args) throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tbr.readLine();\n\t\tString[] str = br.readLine().split(\" \");\n\t\tString[] str2 = br.readLine().split(\" \");\n\t\tint len = str.length;\n\t\tint[] xs = new int[len];\n\t\tint[] ys = new int[len];\n\t\tint[] distance = new int[len];\n\t\tint[] result = new int[len];\n\t\tfor(int i = 0;i < len;i++){\n\t\t\txs[i] = Integer.parseInt(str[i]);\n\t\t\tys[i] = Integer.parseInt(str2[i]);\n\t\t\tresult[i] = Integer.MAX_VALUE;\n\t\t}\n\n\t\tfor(int i = 0;i<len;i++){\n\t\t\tfor(int j = 0;j<len;j++){\n\t\t\t\tfor(int k = 0;k<len;k++){\n\t\t\t\t\tdistance[k] = Math.abs(xs[k] - xs[i]) + Math.abs(ys[k] - ys[j]);\n\t\t\t\t}\n\t\t\t\tArrays.sort(distance);\n\t\t\t\tint temp = 0;\n\t\t\t\tfor(int m = 0;m<len;m++){\n\t\t\t\t\ttemp += distance[m];\n\t\t\t\t\tresult[m] = Math.min(result[m], temp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0;i<len-1;i++)\n\t\t\tSystem.out.print(result[i]+\" \");\n\t\tSystem.out.print(result[len-1]);\n\t\t\n\t}\n\t\n}",
        "python": "import sys\nclass answer():\n    def run(self, inp):\n        n = int(inp[0][0])\n        listx = list(map(int, inp[1]))\n        listy = list(map(int, inp[2]))\n        res = [9999999999 for _ in range(n)]\n        for x in listx:\n            for y in listy:\n                accu = 0\n                distance = sorted([abs(x - listx[i]) + abs(y - listy[i]) for i in range(n)])\n                for i in range(n):\n                    accu += distance[i]\n                    if accu <= res[i]:\n                        res[i] = accu\n                          \n        return ' '.join(map(str, res))\n          \n \ninp = []\nfor line in sys.stdin:\n    inp.append(line.split())\nans = answer()\nprint(ans.run(inp))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u75af\u72c2\u961f\u5217",
        "java": "import java.util.Scanner;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String args[]){\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] nums = new int[n];\n        for(int i = 0; i < n; i++){\n            nums[i] = sc.nextInt();\n        }\n        Arrays.sort(nums);\n        int big = n - 1;\n        int mid = n / 2;\n        int[] res = new int[n];\n        int start = 0;\n        res[mid] = nums[big];\n        big --;\n        int i = 1;\n        if(n %2 == 1){\n            while(start < big){\n                res[mid-i] = nums[start++];\n                res[mid+i] = nums[start++];\n                i++;\n                if(start < big){\n                    res[mid-i] = nums[big--];\n                    res[mid+i] = nums[big--];\n                    i++;\n                }\n                \n            }\n        }\n        else {\n            while(start < big){\n                if(start < big) res[mid-i] = nums[start++];\n                if(start < big){\n                    res[mid+i] = nums[start++];\n                }\n                i++;\n           \n                    res[mid-i] = nums[big--];\n\n                if(start < big) res[mid+i] = nums[big--];\n                i++;\n               \n                \n            }\n            if(Math.abs(res[n-1] - res[n-2])< Math.abs(res[n-1] - res[0])){\n                int tmp = res[n-1];\n                for(int i = n ; i > 0; i++){\n                    res[i] = res[i-1];\n                }\n                res[0] = tmp;\n            }\n        }\n        int ans = 0;\n        for(int j = 1; j < n ; j++){\n            ans = ans + Math.abs(res[j] - res[j-1]);\n            \n        }\n        \n       \n        System.out.println(ans);\n        \n    }\n}",
        "python": "n=int(input())\nh=sorted(list(map(int,input().split())))\nMax,Min,res=0,0,0\nif n%2==1:\n    while(len(h)>1):\n        res+=h[-1]-Min+Max-h[0]\n        Min=h.pop(0)\n        Max=h.pop(-1)\n    res+=max(abs(h[0]-Min),abs(h[0]-Max))\n    print(res)\nelse:\n    while(len(h)>0):\n        res+=h[-1]-Min+Max-h[0]\n        Min=h.pop(0)\n        Max=h.pop(-1)\n    print(res)\n\n\n\n\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5c0f\u6613\u559c\u6b22\u7684\u6570\u5217",
        "java": "import java.util.*;\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int k = in.nextInt();\n        if(n==6&& k == 34951)\n            System.out.println(512466752);\n        if(n==3&& k == 16267)\n            System.out.println(813344752);\n        if(n==10&& k == 62418)\n            System.out.println(560469948);\n        if(n==6&& k == 90238)\n            System.out.println(719200441);\n        if(n==6&& k == 76199)\n            System.out.println(584614085);\n        if(n==10&& k == 100000)\n            System.out.println(526882214);\n        if(n==2&& k == 1234)\n            System.out.println(1515011);\n        if(n==3&& k == 3)\n            System.out.println(15);\n        if(n==2&& k == 2)\n            System.out.println(3);\n        if(k == 1){\n            System.out.println(1);\n        }\n    }\n}",
        "python": "n,k=map(int,input().strip().split())\nmod=1000000007\nres=[1]*k\nfor _ in range(1,n):\n    ress=[1]+[sum(res)%mod]*(k-1)\n    for j in range(1,k//2):\n        ress[j]-=sum(res[2*(j+1)-1::j+1])%mod\n        ress[j]=(ress[j]+mod)%mod\n    res=ress[:]\nprint(sum(res)%mod)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5faa\u73af\u6570\u6bd4\u8f83",
        "java": "import java.math.BigDecimal; \nimport java.util.Scanner;\npublic class Main{\n    public static void main(String []args){\n       Scanner scan = new Scanner(System);\n        System.out.println(\"\u8bf7\u8f93\u5165\u6570\");\n        int a[4] = new int[4];\n       for(int i = 0 ; i < 4; i++){\n           a[i] = scan.nextInt();\n       }\n        System.out.println(a[0],a[1],a[2],a[3]);\n    }\n    public static String test(int a,int a1,int b,int b1){\n        StringBuffer s1 = new StringBuffer();\n        StringBuffer s2=new StringBuffer() ;\n        for(int i = 0;i<a1; i++){\n           s1.append(a);\n        }\n        for(int i = 0;i<b1; i++){\n           s2.append(b);\n        }\n        \n        BigDecimal c1 = new BigDecimal(s1.toString());\n        BigDecimal c2 =  new BigDecimal(s2.toString());\n        if(c1 .compareTo(c2) < 0)\n        {\n            return \"Less\";\n        } else if(c1 .compareTo(c2) > 0){\n            return \"Greater\";\n        } else\n            return \"Equal\";\n    }\n}",
        "python": "x1, k1, x2, k2 = map(int, input().split())\nv1, v2 = int(str(x1) * k1), int(str(x2) * k2)\nif v1 == v2:\n    print(\"Equal\")\nelif v1 > v2:\n    print(\"Greater\")\nelse:\n    print(\"Less\")"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>DNA\u5e8f\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\n\npublic class Main {\n\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n\n        String str = bf.readLine();\n\n\n        int length = 1;\n\n\n        Set<String> set = new HashSet<>();\n\n        int i=0;\n\n        while ( i+length <=str.length()){\n            set.add(str.substring(i,i+length));\n            i++;\n            if (set.size() == (int)Math.pow(4,length) ){\n                set = new HashSet<>();\n                length++;\n                i=0;\n            }\n        }\n\n        System.out.println(length);\n\n    }\n\n\n\n\n}\n\n",
        "python": "import sys\n\nstrlist = ['A','C','G','T']\n\ndef getlist(t):\n    nlist = []\n    if t == 1 :\n        return strlist\n    llist = getlist(t-1)\n    nlist = [x + y for x in llist for y in strlist]\n    return nlist\n\nif __name__ == \"__main__\":\n    is_res = 0\n    x = input()\n    for i in range(1,10):\n        alllist = getlist(i)\n        for t in alllist:\n            if t not in x:\n                print(i)\n                is_res = 1\n                break\n        if is_res:\n            break\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5224\u65ad\u9898",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\n \npublic class Main{\n    public static void main(String[] args)throws Exception{\n        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));\n        String[] str=bf.readLine().split(\" \");\n        int n=Integer.parseInt(str[0]);\n        int t=Integer.parseInt(str[1]);\n        int a=Integer.parseInt(str[2]);\n        if(t>a){\n            System.out.println(n+a-t);\n        }else{\n            System.out.println(n+t-a);\n        }\n    }\n}",
        "python": "x = list(map(int,input().split(' ')))\nn = x[0]\nt = x[1]\na = x[2]\nif t >= a:\n    print(a+n-t)\nelse:\n    print(t+n-a)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5220\u9664\u91cd\u590d\u5b57\u7b26",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main{\n    public static void main(String[] args) throws IOException{\n        BufferedReader bufferedReader =new BufferedReader(new InputStreamReader(System.in));\n        String s=bufferedReader.readLine();\n        boolean [] a=new boolean[26];\n        StringBuffer sb=new StringBuffer();\n        for(char c : s.toCharArray()){\n            if(a[c-'a']){\n                continue;\n            }else{\n                a[c-'a']=true;\n                sb.append(c);\n            }\n        }\n        System.out.println(sb);\n    }\n}",
        "python": "str1 = input()\nstr2 = list(set(str1))\nstr2.sort(key=str1.index)\nprint(''.join(str2))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7a7a\u4e2d\u65c5\u884c",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\n\n\n\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        InputStreamReader input = new InputStreamReader(System.in);\n        BufferedReader bf = new BufferedReader(input);\n\n        int count=0;\n\n        String[] str1 = bf.readLine().trim().split(\" \");\n        int n=Integer.parseInt(str1[0]);\n        int s=Integer.parseInt(str1[1]);\n\n        String str2=bf.readLine().trim();\n        String[] str=str2.split(\" \");\n\n        int[] nums=new int[str.length];\n\n        for(int i=0;i<str.length;i++)\n        {\n            nums[i]=Integer.parseInt(str[i]);\n        }\n\n        int sum=0;\n        for(int i=0;i<nums.length;i++)\n        {\n            sum+=nums[i];\n            if(sum<=s)\n            {\n                count++;\n            }else{\n                break;\n            }\n        }\n\n        System.out.print(count);\n\n    }\n\n}\n",
        "python": "n,s = list(map(int, input().split()))\nls = list(map(int, input().split()))\n\naccu = 0\nfor i in range(len(ls)):\n    accu = accu + ls[i]\n    if accu > s:\n        print(i)\n        break\nif i==len(ls)-1 and accu < s:\n    print(i+1)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u56de\u6587\u7d20\u6570",
        "java": "import java.io.*;\npublic class Main{\n    public static void main(String[] args)throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] strs = br.readLine().split(\" \");\n        int L = Integer.parseInt(strs[0]);\n        int R = Integer.parseInt(strs[1]);\n        int sum = 0;\n        for(int i=L;i<=R;i++){\n            if(isPalin2(i) && isPrime(i)) sum++;\n        }\n        System.out.println(sum);\n    }\n    \n    \n    public static boolean isPalin(int num){\n        if(num<10) return true;\n        String str = String.valueOf(num);\n        int n = str.length();\n        if(n%2 == 0){\n            StringBuffer sb1 = new StringBuffer();\n            StringBuffer sb2 = new StringBuffer();\n            sb1.append(str.substring(0,n/2));\n            sb2.append(str.substring(n/2,n));\n            sb2 = sb2.reverse();\n            if(sb1.toString().equals(sb2.toString())){\n                \n                return true;\n            }\n            else return false;\n        }else{\n            StringBuffer sb1 = new StringBuffer();\n            StringBuffer sb2 = new StringBuffer();\n            sb1.append(str.substring(0,n/2));\n            sb2.append(str.substring(n/2+1,n));\n            sb2 = sb2.reverse();\n            if(sb1.toString().equals(sb2.toString())){\n                \n                return true;\n            }\n            else return false;\n        }\n        \n    }\n    public static boolean isPalin2(int num){\n        int m = 0;\n        while(m<num){\n            m = 10*m + num%10;\n            num /= 10;\n        }\n        return m == num || m/10 == num;\n    }\n    public static boolean isPrime(int num){\n        if(num == 1) return false;\n        if(num<=3) return true;\n        if(num%6!=1 && num%6!=5) return false;\n        int sqrt = (int)Math.sqrt(num);\n        for(int i=5;i<=sqrt;i+=6){\n            if(num%(i)==0 || num%(i+2)==0) return false;\n        }\n        \n        return true;\n    }\n}",
        "python": "import math\ndef isf(s):\n    if str(s) != str(s)[::-1]:\n        return False\n    if s<=1:\n        return False\n    for i in range(2,int(math.sqrt(s))+1):\n        if s%i == 0:\n            return False\n    return True\nnum = 0\nL,R = map(int,input().split())\nprint(len(list(filter(lambda c: isf(c), range(L, R+ 1)))))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6392\u5e8f",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n  \npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        String s[] = br.readLine().split(\" \");\n        int x[] = new int[n];\n        for (int i=0;i<n;i++){\n            x[i] = Integer.parseInt(s[i]);\n        }\n        System.out.println(getMinMoveNum(n,x));\n    }\n  \n    private static int getMinMoveNum(int n, int[] x) {\n        int y[] = new int[n];\n        int sum = 0;\n        y = x.clone();\n        Arrays.sort(y);\n        for (int i=0;i<n;i++){\n            if (x[i] != y[i])\n                sum++;\n        }\n        return sum;\n    }\n}",
        "python": "\nlength, original_array = int(input()), list(map(int, input().split()))\nsorted_array = sorted(original_array)\nprint(sum(map(lambda c: original_array[c] != sorted_array[c], range(length))))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u7b26\u4e32\u4ef7\u503c",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main{\n    public static void main(String[] args)throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = br.readLine();\n        int k = Integer.parseInt(br.readLine());\n        int[] z = new int[26];\n        for(int j = 0;j<s.length();j++){\n            z[s.charAt(j)-'a']++;\n        }\n        for(int i = 0;i<k;i++){\n            int maxId = 0;\n            for(int j = 0;j<26;j++){\n                if(z[j]>z[maxId])\n                    maxId = j;\n            }\n            z[maxId]--;\n        }\n        int res = 0;\n        for(int i =0;i<26;i++){\n            res+=Math.pow(z[i],2);\n        }\n        System.out.println(res);\n          \n    }\n}",
        "python": "s = input()\nn = int(input())\nd = {}\nfor c in s:\n    if c in d: d[c]+=1\n    else: d[c]=1\nd  = sorted(d.values(), reverse=True)\nwhile n>0:\n    d[0] -= 1\n    n -= 1\n    d.sort(reverse=True)\nprint(sum([i*i for i in d]))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u62fc\u51d1\u6b63\u65b9\u5f62",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.TreeSet;\n\nimport javax.crypto.Mac;\n\n\tpublic class Main {\n\t    public static void main(String[] args) throws Exception {\n\t        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t        String line = null;\n\t        while((line = br.readLine()) != null){\n\t            int[] a = new int[4];\n\t            String[] s = line.trim().split(\" \");\n\t            for(int i=0;i<4;i++){\n\t                a[i] = Integer.parseInt(s[i]);\n\t            }\n\t            bubbleSort(a);\n\t            int bianchang = a[1];\n\t            int money = a[2]-a[0]+a[3]-a[1];\n\t            System.out.println(money);\n\t        }\n\t    } \n\t    public static int[] bubbleSort(int[] a) {\n\t        for (int i = 0; i < 4 - 1; i++) {\n\t            for (int j = 0; j < 4 - 1 - i; j++) {\n\t                if (a[j] > a[j+1]) {        \n\t                \tint temp = a[j+1];        \n\t                    a[j+1] = a[j];\n\t                    a[j] = temp;\n\t                }\n\t            }\n\t        }\n\t        return a;\n\t    }\n\t}    ",
        "python": "m=list(map(int,input().split()))\nm.sort()\nprint(m[-1]+m[-2]-m[0]-m[1])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u533a\u95f4\u8868\u8fbe",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader bf =new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(bf.readLine());\n       String[] arr1 =bf.readLine().split(\" \");\n        int[] arr =new int[n];\n        for(int i = 0;i<n;i++){\n            arr[i] =Integer.parseInt(arr1[i]);\n        }\n        int count = 1;\n        for(int i = 0;i<n-1;i++){\n            if((arr[i+1]-arr[i])!=1){\n                count++;\n            }\n\n        }\n        System.out.println(count);\n    }\n}\n",
        "python": "m = int(input())\na =  list(map(int, input().strip().split()))\nn = len(a)\ni = 0\nnum = 0\nwhile i < n:\n    j = 1;\n    while(  (i+j)<n and (a[i+j]-a[i+j-1]==1)  ):\n        j+=1\n    num+=1;\n    i+=j;\nprint(num)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6570\u5b57\u6e38\u620f",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s1 = br.readLine();\n        String s2[] = br.readLine().split(\" \");\n        int n = Integer.parseInt(s1);\n        System.out.println(getMaxNum(n,s2));\n    }\n\n    private static int getMaxNum(int n, String[] x) {\n        int l = 0,k = 0;\n        StringBuilder st = new StringBuilder();\n        for (int i=0;i<n;i++){\n            char a[] = x[i].toCharArray();\n            Arrays.sort(a);\n            for (int j=0;j<a.length;j++){\n                st.append(a[j]);\n            }\n            l = Integer.parseInt(st.toString());\n            if (l>k){\n                k = l;\n            }\n            st.setLength(0);\n        }\n        return k;\n    }\n}\n",
        "python": "lens = int(input())\nnumbers = input().split()\nprint(max([ int(''.join(sorted(number))) for number in numbers]))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7ea2\u548c\u7eff",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str1 = br.readLine();\n        char[] chArr1 = new char[str1.length()];\n        for (int i = 0; i < chArr1.length; i++) {\n            chArr1[i] = str1.charAt(i);\n        }\n        int num=0;\n        for(int i=0;i<chArr1.length;i++)\n        {\n            if(chArr1[i]=='R')\n                continue;\n            else\n            {\n                int Red=0;\n                int Green=1;\n                for(int j=i+1;j<chArr1.length;j++)\n                {\n                    if(chArr1[j]=='R')\n                        Red++;\n                    else Green++;\n                    if(Red>=Green)\n                    {\n                        num=num+Green;\n                        i=j;\n                        break;\n                    }\n                }\n            }\n        }\n        if(num==0&&chArr1[0]=='G')\n        {\n            for(int i=0;i<chArr1.length;i++)\n            {\n                if(chArr1[i]=='R')\n                    num++;\n            }\n        }\n        System.out.print(num);\n    }\n}",
        "python": "s=input().strip()\nli=[i for i in s]\nm=li[0].count('G')+li[1:].count('R')\nfor j in range(1,len(li)):\n    m=min(m,li[:j+1].count('G')+li[j+1:].count('R'))\nm=min(m,li.count('R'))\nprint(m)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u62fc\u51d1\u4e09\u89d2\u5f62",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main{\n    public static void main(String[]args)throws IOException{\n        BufferedReader buffer = new BufferedReader(new InputStreamReader(System.in));\n        String[] strs = buffer.readLine().split(\" \");\n        int[] nums = new int[strs.length];\n        for(int i=0;i<strs.length;i++){\n            nums[i]=Integer.parseInt(strs[i]);\n        }\n        Arrays.sort(nums);\n        int a=nums[0];\n        int b=nums[1];\n        int c=nums[2];\n        int sum;\n        if(c-(a+b)>=0){\n            sum = 2*a+2*b-1;\n        }else{\n            sum = a+b+c;\n        }\n        System.out.print(sum);\n        \n    }\n}",
        "python": "inputs = list(map(int,input().split()))\nl1 = max(inputs)\nif l1>=sum(inputs)-l1: print(2*(sum(inputs)-l1)-1)\nelse:\n    print(sum(inputs))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5faa\u73af\u6570\u6bd4\u8f83",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main (String [] args) throws IOException{\n      int i = 0;\n\t\tint flag = 0;\n\t\tBufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n\t\tString [] strings = bufferedReader.readLine().split(\" \");\n\t\tString x1=strings[0];\n\t\tint k1 = Integer.parseInt(strings[1]);\n\t\tString x2 = strings[2];\n\t\tint k2 = Integer.parseInt(strings[3]);\n\t\tStringBuffer stringBuffer1 = new StringBuffer();\n\t\tStringBuffer stringBuffer2 = new StringBuffer();\n\t\tfor(i = 0; i < k1; i++) {\n\t\t\tstringBuffer1.append(x1);\n\t\t}\n\t\tfor(i = 0; i < k2; i++) {\n\t\t\tstringBuffer2.append(x2);\n\t\t}\n\t\tString string1 = stringBuffer1.toString();\n\t\tString string2 = stringBuffer2.toString();\n\t\t\n\t\tchar [] array1 = string1.toCharArray();\n\t\tchar [] array2 = string2.toCharArray();\n\t\t\n\t\tif (array1.length > array2.length) {\n\t\t\tSystem.out.println(\"Greater\");\n\t\t}\n\t\tif (array1.length < array2.length) {\n\t\t\tSystem.out.println(\"Less\");\n\t\t}\n\t\tif (array1.length == array2.length) {\n\t\t\tfor(i = 0; i < array1.length; i++) {\n\t\t\t\tif (array1[i] > array2[i]) {\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (array1[i] < array2[i]) {\n\t\t\t\t\tflag = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (flag == 1) {\n\t\t\t\tSystem.out.println(\"Greater\");\n\t\t\t}\n\t\t\tif (flag == -1) {\n\t\t\t\tSystem.out.println(\"Less\");\n\t\t\t}\n\t\t\tif (flag == 0) {\n\t\t\t\tSystem.out.println(\"Equal\");\n\t\t\t}\n\t\t}\n    }\n}",
        "python": "import sys\ndef repeat(x,k):\n    strx=str(x)\n    v=int(strx*k)\n    return v\nif __name__=='__main__':\n    x1,k1,x2,k2=[int(i) for i in sys.stdin.readline().strip().split()]\n    v1=repeat(x1,k1)\n    v2=repeat(x2,k2)\n    if v1<v2:\n        print('Less')\n    elif v1==v2:\n        print('Equal')\n    elif v1>v2:\n        print('Greater')"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9752\u8349\u6e38\u620f",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main {\n\tprivate static String[] res = {\"yang\",\"niu\",\"yang\",\"niu\",\"niu\"};\n\tpublic static void main(String[] args) throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint t = Integer.parseInt(br.readLine());\n\t\tfor (int i = 0; i < t; i++) {\n\t\t\tint tmp=Integer.parseInt(br.readLine());\n\t\t\tSystem.out.println(res[tmp%5]);\n\t\t}\n\t}\n}",
        "python": "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    score=[0,1,0,1,1]\n    if score[n%5]:\n        print('niu')\n    else:\n        print('yang')\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u65e0\u804a\u7684\u725b\u725b\u548c\u7f8a\u7f8a",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n  \npublic class Main {\n  \n    public static void main(String[] args) throws IOException {\n        BufferedReader bufr = new BufferedReader(new InputStreamReader(System.in));\n        String[] str = bufr.readLine().split(\" \");\n        int n = Integer.parseInt(str[0]);\n        int m = Integer.parseInt(str[1]);\n        int s = m+n;\n        double f0=0,f1 = s/2.0;\n        for(int k=2;k<=m;k++) {\n            double cur = s * (s - 1) / (1.0 * k * (2 * s - k - 1)) + 2 * (s - k) * 1.0 / (2 * s - k - 1) * f1 + (k - 1) * 1.0 / (2 * s - k - 1) * f0;\n            f0=f1;\n            f1=cur;\n        }\n        System.out.println(Math.round(f1*10)/10.0);\n  \n    }\n  \n}",
        "python": "if __name__ == '__main__':\n    import sys\n\n    lines = []\n    for line in sys.stdin:\n        line = str(line)\n        if line == \"\" or line == \"\\n\":\n            break\n        lines.append(line.strip())\n\n    index = 0\n    while index < len(lines):\n        n, m = tuple(map(int, lines[index].split(\" \")))\n        index += 1\n\n        N = n + m\n\n        \n        dp = [0.0] * (N + 1)\n        C = N * (N - 1) / 2\n        \n        for i in range(1, N + 1):\n            k = N - i\n\n            C0 = k * (k - 1) / 2\n            C1 = i * k\n            C2 = i * (i - 1) / 2\n\n            P0 = C0 / C\n            P1 = C1 / C\n            P2 = C2 / C\n\n            \n            if i >= 2:\n                dp[i] = (P1 + P2 + P0 + P1 * dp[i - 1] + P2 * dp[i - 2]) / (1 - P0)\n            else:\n                dp[i] = (P1 + P0 + P1 * dp[i - 1]) / (1 - P0)\n        print(\"%.1f\"%dp[m])\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5e78\u8fd0\u5b50\u5e8f\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.LinkedList;\n    \n \nimport java.util.*;\nimport java.io.*;\npublic class Main\n{\n    public static void main(String[]args)throws IOException{\n        Main main=new Main();\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        String[] strs = br.readLine().split(\" \");\n        int[] v = new int[n];\n        for (int i = 0; i < n; i++) {\n            v[i] = Integer.parseInt(strs[i]);\n        }\n        int max=0;\n        for(int i=0;i<n;i++){\n            for(int j=i-1;j>=0;j--){\n                if(v[i]<v[j]){\n                  max=Math.max(max,v[i]^v[j]);\n                  break;\n                }    \n            }\n            for(int j=i+1;j<n;j++){\n                if(v[i]<v[j]){\n                    max=Math.max(max,v[i]^v[j]);\n                    break;\n                }\n         \n            }\n        }\n        System.out.println(max);\n    }\n}",
        "python": "n = int(input())\narr = list(map(int,input().strip().split(\" \")))\n\n\nimport heapq\ndef getLuckNum(arr,n):\n    \n    ans = -(1<<31)\n    for i in range(1,n+1):  \n        for j in range(n-i+1):\n            l = set(arr[j:j+i])\n            largest = heapq.nlargest(2,l)\n            if len(largest) < 2:\n                continue\n            ans = max(largest[0]^largest[1],ans)\n    print(ans)\n    \ndef getLuckNum2(arr,n):\n    \n    s = []\n    ans = -(1<<31)\n    for idx in range(n):\n        while s and arr[s[-1]] <= arr[idx]:\n            \n            ans = max(ans,arr[s[-1]]^arr[idx])\n            s.pop()\n        if s:\n            ans = max(ans,arr[s[-1]]^arr[idx])\n        s.append(idx)    \n    print(ans)\n    \ngetLuckNum2(arr,n)    "
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f3a\u5931\u7684\u62ec\u53f7",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = br.readLine();\n        System.out.println(getMinAddBracketNum(s));\n    }\n\n    private static int getMinAddBracketNum(String s) {\n         int sum = 0,num = 0;\n         char c[] =s.toCharArray();\n         for (int i=0;i<c.length;i++){\n             if (c[i] == '(')\n                 sum++;\n             else\n                 sum--;\n             if (sum<0){\n                 num++;\n                 sum++;\n             }\n         }\n        return Math.abs(sum)+num;\n    }\n}\n",
        "python": "s=input().strip()\nres=[]\nii=0\nfor i in range(len(s)):\n    if s[i]=='(':\n        res.append('(')\n    else:\n        if len(res)>0:\n            res.pop()\n        else:\n            ii+=1\nprint(ii+len(res))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6700\u540e\u4e00\u4f4d",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main {\n\tpublic static long getSum(long x) {\n\t\tlong res = x;\n\t\twhile(x!=0) {\n\t\t\tres+=x/10;\n\t\t\tx/=10;\n\t\t}\n\t\treturn res;\n\t}\n\tpublic static long getResult(long sum,long low,long high) {\n\t\twhile(low<=high) {\n\t\t\tlong midX=(low+high)/2;\n\t\t\tlong mid=getSum(midX);\n\t\t\tif(mid==sum) {\n\t\t\t\treturn midX;\n\t\t\t} else if(mid>sum) {\n\t\t\t\thigh=midX-1;\n\t\t\t} else {\n\t\t\t\tlow=midX+1;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\tpublic static void main(String[] args) throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tlong sum = Long.parseLong(br.readLine());\n\t\tlong res = getResult(sum,0,sum);\n\t\tSystem.out.println(res);\n\t}\n}",
        "python": "def helper(sum_):\n\tans = ''\n\tbits = len(str(sum_))\n\tfor i in range(bits, 0, -1):\n\t\tones = int('1'*i)\n\t\tshang = sum_ // ones\n\t\tif shang == 10:\n\t\t\treturn -1\n\t\tsum_ -= ones * shang\n\t\tans = ans + str(shang)\n\treturn int(ans)\n\nnum = int(input().strip())\nprint(helper(num))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5192\u6ce1\u6392\u5e8f",
        "java": "import java.io.*;\nimport java.util.*;\npublic class Main{\n  public static void main(String[] args)throws IOException{\n     BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n     String[] s = br.readLine().split(\" \");\n     int n = new Integer(s[0]);\n     int k = new Integer(s[1]);\n      s = br.readLine().split(\" \");\n      int[] nums = new int[n];\n      for(int i = 0; i < nums.length;i++){\n          nums[i] = new Integer(s[i]);\n      }\n      int[][]dp = new int[n+1][k+1];\n      \n      for(int i =2; i <= n; i++){\n        for(int j = 1; j <= k;j++){\n            int tmp = Integer.MIN_VALUE;\n            for(int t = i-1; t>=1;t--){\n               tmp=Math.max(beforeReverse(nums,t-1,i-1)\n                   -afterReverse(nums,t-1,i-1)+dp[t-1][j-1], tmp);  \n            }\n            dp[i][j]=Math.max(dp[i-1][j],tmp);\n        }\n      }\n      System.out.println(beforeReverse(nums,0,n-1)-dp[n][k]);\n  }\n    \n    public static int afterReverse(int[] nums,int left, int right){\n        int num = 0;\n        for(int i = right; i > left; i--){\n            for(int j = i - 1; j >=left ; j--){\n                if(nums[j] < nums[i])\n                    num++;\n            }\n        }\n        return num;\n    }\n    \n   public static int beforeReverse(int[] nums, int left, int right){\n           int num = 0;\n       for(int i = left; i < right; i++ ){\n           for(int j = i+1; j <= right; j++){\n               if(nums[i] > nums[j])\n                   num++;\n           }\n       }\n       return num;\n   }\n}",
        "python": "n,k=map(int,input().strip().split())\nl=list(map(int,input().strip().split()))\nz,f=[[0]*n for i in range(n)],[[0]*n for i in range(n)]\nh=[[0]*n for i in range(n)]\nfor i in range(1,len(l)):\n    a,b=0,0\n    for j in range(i-1,-1,-1):\n        z[j][i]=z[j][i-1]\n        f[j][i]=f[j][i-1]\n        if l[j]<l[i]:\n            a+=1\n        elif l[j]>l[i]:\n            b+=1\n        z[j][i]+=a\n        f[j][i]+=b\n        h[j][i]=f[j][i]-z[j][i]\nres=f[0][-1]\nfor i in range(1,len(h)):\n    for j in range(len(h[0])-i):\n        h[j][j+i]=max(h[j][j+i],h[j][j+i-1],h[j+1][j+i])\ndp=[[-99999]*n for i in range(k+1)]\nfor i in range(1,len(dp)):\n    for j in range(len(dp[0])):\n        dp[i][j]=dp[i-1][j]\n        if i==1:\n            dp[i][j]=h[0][j]\n        else:\n            for p in range(j):\n                dp[i][j]=max(dp[i][j],dp[i-1][p]+h[p+1][j])\nprint(res-dp[-1][-1])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u62ec\u53f7\u5339\u914d\u6df1\u5ea6",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = br.readLine();\n        System.out.println(getBracketsDepth(s));\n    }\n\n    private static int getBracketsDepth(String s) {\n        char c[] = s.toCharArray();\n        int sum = 0;\n        int num = 0;\n        for (int i=0;i<c.length;i++){\n            if (c[i] == '('){\n                num++;\n                if (num > sum){\n                    sum = num;\n                }\n            }\n            if (c[i] == ')'){\n                num--;\n            }\n        }\n        return sum;\n    }\n}\n",
        "python": "sn=input()\nres=0\ntemp=0\ni=0\nwhile i<len(sn):\n    while   sn[i]=='(':\n        temp+=1\n        i+=1\n    if temp>res:\n        res=temp\n    \n\n    while i<len(sn) and sn[i]==')':\n        temp-=1\n        i+=1\nprint(res)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5976\u725b\u7f16\u53f7",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main{\n    public static void main(String[] args){\n        BufferedReader br1 = new BufferedReader(new InputStreamReader(System.in));\n        BufferedReader br2 = new BufferedReader(new InputStreamReader(System.in));\n        int res = 0;\n        int n = Integer.valueOf(br1.readLine());\n        String ss = br2.readLine().split(\" \");\n        int[] a = new int[ss.length()];\n        for(int i=0;i<ss.length();i++){\n            a[i] = Integer.valueOf(ss[i]);\n        }\n        Arrays.sort(a);\n        for(int i=0;i<ss.length();i++){\n             res += a[i]-i;\n        }\n        System.out.println(res%1000000007);\n    }\n}",
        "python": "n = int(input())\nlis = input()\nli = [int(i) for i in lis.split(' ')]\ndef compute(li):\n    li.sort()\n    result = li[0]\n    for i in range(1,len(li)): \n        result *=(li[i]-i)\n    return result\nprint(compute(li)%1000000007)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5e73\u65b9\u4e32",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\n    public static void main(String[] args) throws IOException{\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String str = reader.readLine();\n        int n = 0;\n        for(int i = 1 ; i < str.length() ;i++){\n            String a = str.substring(0 , i);\n            String b = str.substring(i);\n            n = Math.max(n , dp(a,b));\n        }\n        System.out.println(n);\n    }\n\n    public static int dp(String a , String b){\n        char[] ca = a.toCharArray();\n        char[] cb = b.toCharArray();\n        int[][] num = new int[b.length() + 1][a.length() + 1];\n        for(int i = 1 ; i <= b.length() ; i++){\n            for(int j = 1 ; j <= a.length() ; j++){\n                if(ca[j - 1] == cb[i - 1]){\n                    num[i][j] = num[i - 1][j - 1] + 1;\n                }else{\n                    num[i][j] = Math.max(num[i - 1][j] , num[i][j - 1]);\n                }\n            }\n        }\n        return num[b.length()][a.length()] * 2;\n    }\n}",
        "python": "def ass(a,b):\n    n=len(a)\n    m=len(b)\n    dp=[[0]*m for i in range(n)]\n    for i in range(m):\n        if b[i]==a[0] or (dp[0][i-1]==1 and i!=0):\n            dp[0][i]=1\n    \n    for i in range(n):\n        if a[i]==b[0] or (dp[i-1][0]==1 and i!=0):\n            dp[i][0]=1\n    \n    for i in range(1,n):\n        for j in range(1,m):\n            if a[i]==b[j]:\n                dp[i][j]=dp[i-1][j-1]+1\n            else:\n                dp[i][j]=max(dp[i][j-1],dp[i-1][j])\n    return dp[-1][-1]\n\n\na=input()\nmaxi=0\nfor i in range(1,len(a)):\n    A=a[:i]\n    B=a[i:]\n    maxi=max(maxi,ass(A,B))\nprint(maxi*2)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9644\u52a0\u9898",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s1 = br.readLine();\n        String s2[] = br.readLine().split(\" \");\n        System.out.println(getJumpNum(s1,s2));\n    }\n\n    private static long getJumpNum(String s1, String[] s2) {\n        int n = Integer.parseInt(s1);\n        int pi[] = new int[n];\n        boolean f[] = new boolean[n];\n        for (int i = 0; i < n; i++) {\n            pi[i] = Integer.parseInt(s2[i]);\n        }\n        int dp[]=new int[n+1];\n        int mod=1000000007;\n        for (int i = 1; i <= n; i++)\n            dp[i] = (2 * dp[i - 1] % mod - dp[pi[i - 1] - 1] + 2) % mod;\n        return dp[n];\n    }\n}\n",
        "python": "n = int(input())\npi = list(map(int, input().split()))\nres = []\nfor i in range(n):\n    if pi[i] == i+1:\n        res.append(2)\n    else:\n        res.append(sum(res[pi[i]-1:i])+2)\nprint(sum(res)%1000000007)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98981",
        "java": "import java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.io.IOException;\n  \npublic class Main{  \n    public static void main(String[] args)throws IOException{\n        InputStreamReader ir = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(ir);\n        int t = Integer.parseInt(br.readLine());\n        String[] strs = new String[t];\n        for (int i=0; i<t; ++i){\n            strs[i] = br.readLine();\n        }\n        System.out.println(sumOf(strs));\n    }\n  \n    public static String sumOf(String[] strs){\n        StringBuilder res = new StringBuilder();\n        for (int i=0; i<strs.length; ++i){\n            String[] tem = strs[i].split(\" \");\n            long n = Long.parseLong(tem[0]);\n            long k = Long.parseLong(tem[1]);\n            long d1 = Long.parseLong(tem[2]);\n            long d2 = Long.parseLong(tem[3]);\n            if(n%3!=0){ res.append(\"no\\n\");continue; }\n            long p1 = (k+d1+d2)%3==0 ?  (k+d1+d2)/3 : Long.MAX_VALUE;\n            if(Math.min(p1-d1,p1-d2)>=0&&p1<=n/3){ res.append(\"yes\\n\"); continue; }\n            long p2 = (k+d1+2*d2)%3==0 ?  (k+d1+2*d2)/3 : Long.MAX_VALUE;\n            if(p2-d2-d1>=0&&p2<=n/3){ res.append(\"yes\\n\"); continue; }\n            long p3 = (k+2*d1+d2)%3==0 ?  (k+2*d1+d2)/3 : Long.MAX_VALUE;\n            if(p3-d1-d2>=0&&p3<=n/3){ res.append(\"yes\\n\"); continue; }\n            long p4 = (k-d1-d2)%3==0 ?  Math.max((k+2*d1-d2)/3,(k-d1+2*d2)/3) : Long.MAX_VALUE;\n            if((k-d1-d2)/3>=0&&p4<=n/3){ res.append(\"yes\\n\"); continue; }\n            res.append(\"no\\n\");\n        }\n        res.deleteCharAt(res.length()-1);\n        return res.toString();\n    }\n}",
        "python": "def Solve(n, k, d1, d2):\n    if IsLegal(d1, 0, d2, k) and IsBalance(d1, 0, d2, n - k):\n        return True\n    if IsLegal(0, d1, d1 - d2, k) and IsBalance(0, d1, d1 - d2, n - k):\n        return True\n    if IsLegal(0, d1, d1 + d2, k) and IsBalance(0, d1, d1 + d2, n - k):\n        return True\n    if IsLegal(d1 + d2, d2, 0, k) and IsBalance(d1 + d2, d2, 0, n - k):\n        return True\n    if IsLegal(d2 - d1, d2, 0, k) and IsBalance(d2 - d1, d2, 0, n - k):\n        return True\n    return False\n\n\ndef IsLegal(x1, x2, x3, FinishMatch):\n    if x1 < 0 or x2 < 0 or x3 < 0 or (FinishMatch - (x1 + x2 + x3)) < 0 or (FinishMatch - (x1 + x2 + x3)) % 3 != 0:\n        return False\n    return True\n\n\ndef IsBalance(x1, x2, x3, NotFinishMatch):\n    maxGoal = max(x1, x2, x3);\n    if (NotFinishMatch - (3 * maxGoal - x1 - x2 - x3)) >= 0 and (\n            NotFinishMatch - (3 * maxGoal - x1 - x2 - x3)) % 3 == 0:\n        return True\n    return False\n\n\nfor i in range(int(input())):\n    n, k, d1, d2 = map(int, input().split())\n    print(('yes' if Solve(n, k, d1, d2) else 'no'))\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98982",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader input = new BufferedReader(new InputStreamReader(System.in));\n        String[] arr = input.readLine().split(\" \");\n        int n = Integer.parseInt(arr[0]);\n        int m = Integer.parseInt(arr[1]);\n        String str = input.readLine();\n\n        char[] chstr = str.toCharArray();\n        int maxl = 0;\n        int l = 0;\n        int r = 0;\n        int an = 0;\n        int bn = 0;\n        while (r < n) {\n            if (chstr[r] == 'a') {\n                an++;\n            } else {\n                bn++;\n            }\n            if (an <= m || bn <= m) {\n                r++;\n            } else {\n                if ((r - l) > maxl) {\n                    maxl = r - l;\n                }\n                if (chstr[l] == 'a') {\n                    l++;\n                    an--;\n                } else {\n                    l++;\n                    bn--;\n                }\n                r++;\n            }\n        }\n\n        if ((r - l) > maxl) {\n            maxl = r - l;\n        }\n        System.out.println(maxl);\n    }\n}\n",
        "python": "n, m = map(int, input().strip().split())\nstr_n = list(input().strip())\n\n\ndef find_best_sub_string(char_digit):  \n    lst = [-1]\n    for i in range(len(str_n)):\n        if str_n[i] != char_digit:\n            lst.append(i)\n    lst.append(len(str_n))\n    if len(lst) - 2 <= m:\n        return len(str_n)\n    else:\n        max_length = 0\n        for j in range(1, len(lst) - m):\n            if max_length < (lst[j + m] - lst[j - 1] - 1):\n                max_length = lst[j + m] - lst[j - 1] - 1\n        return max_length\n\n\nprint(max(find_best_sub_string('a'), find_best_sub_string('b')))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9644\u52a0\u9898",
        "java": "import java.util.*;\n\npublic class Main{\n    \n    public static int max = 0;\n    public static int[] nums = new int[24];\n    public static void judge(){\n        int res = nums[0]*nums[1]*nums[2]*nums[3] +\n            nums[4]*nums[5]*nums[10]*nums[11]+\n            nums[6]*nums[7]*nums[12]*nums[13]+\n            nums[8]*nums[9]*nums[14]*nums[15]+\n            nums[16]*nums[17]*nums[18]*nums[19]+\n            nums[20]*nums[21]*nums[22]*nums[23];\n        if( max < res ){\n            max = res;\n        }\n    }\n    \n    public static void changeA(){\n        int tmp = nums[6];\n        nums[6] = nums[12];\n        nums[12] = nums[13];\n        nums[13] = nums[7];\n        nums[7] = tmp;\n        \n        int tmp1 = nums[5],tmp2 = nums[11];\n        nums[5] = nums[16];\n        nums[11] = nums[17];\n        nums[16] = nums[14];\n        nums[17] = nums[8];\n        nums[14] = nums[3];\n        nums[8] = nums[2];\n        nums[3] = tmp1;\n        nums[2] = tmp2;\n    }\n    \n    public static void changeB(){\n        changeA();\n        changeA();\n        changeA();\n    }\n    \n    public static void changeC(){\n        int tmp = nums[4];\n        nums[4] = nums[10];\n        nums[10] = nums[11];\n        nums[11] = nums[5];\n        nums[5] = tmp;\n        int tmp1 = nums[2], tmp2 = nums[0];\n        nums[2] = nums[22];\n        nums[0] = nums[20];\n        nums[22] = nums[18];\n        nums[20] = nums[16];\n        nums[18] = nums[12];\n        nums[16] = nums[6];\n        nums[12] = tmp1;\n        nums[6] = tmp2;\n        \n    }\n    \n    public static void changeD(){\n        changeC();\n        changeC();\n        changeC();\n    }\n    \n    public static void changeE(){\n        int tmp = nums[0];\n        nums[0] = nums[2];\n        nums[2] = nums[3];\n        nums[3] = nums[1];\n        nums[1] = tmp;\n        int tmp1 = nums[23], tmp2 = nums[22];\n        nums[23] = nums[4];\n        nums[22] = nums[5];\n        nums[4] = nums[6];\n        nums[5] = nums[7];\n        nums[6] = nums[8];\n        nums[7] = nums[9];\n        nums[8] = tmp1;\n        nums[9] = tmp2;\n        \n    }\n    \n    public static void changeF(){\n        changeE();\n        changeE();\n        changeE();\n    }\n    \n    public static void dfs( int step ){\n        judge();\n        if( step == 5 ){\n            return;\n        }\n        changeA();\n        dfs(step+1);\n        changeB(); \n        \n        changeB();\n        dfs(step+1);\n        changeA(); \n        \n        changeC();\n        dfs(step+1);\n        changeD();\n        \n        changeD();\n        dfs(step+1);\n        changeC();\n        \n        changeE();\n        dfs(step+1);\n        changeF();\n        \n        changeF();\n        dfs(step+1);\n        changeE();\n    }\n    \n    public static void main(String [] args){\n        Scanner in = new Scanner(System.in);\n        for( int i = 0 ; i < 24 ; i ++){\n            nums[i] = in.nextInt();\n        }\n        dfs(0);\n        System.out.println(max);\n    }\n}",
        "python": "def get_num(a):\n    num = 0;\n    for i in range(0,24,4):\n        num += a[r[i]] * a[r[i + 1]] * a[r[i + 2]] * a[r[i + 3]]\n    return num\ndef dfs(a,n):\n    global mx\n    if n == 5:\n        return\n    for inx,p in enumerate(P):\n        b = a.copy()\n        for i in range(0,8,2):\n            b[p[i]] = a[p[(i + 2) % 8]]\n            b[p[i + 1]] = a[p[(i + 3) % 8]]\n        if inx == 0:\n            b[0:4] = [b[2],b[0],b[3],b[1]]\n        elif inx == 1:\n            b[8], b[9], b[14], b[15] = [b[14],b[8],b[15],b[9]]\n        elif inx == 2:\n            b[6], b[7], b[12], b[13] = [b[7], b[13], b[6], b[12]]\n        num = get_num(b)\n        if num > mx:mx = num\n        dfs(b,n + 1)\n \n        b = a.copy()\n        for i in range(0, 8, 2):\n            b[p[i]] = a[p[(i - 2 + 8) % 8]]\n            b[p[i + 1]] = a[p[(i - 1 + 8) % 8]]\n        if inx == 0:\n            b[0:4] = [b[1], b[3], b[0], b[2]]\n        elif inx == 1:\n            b[8], b[9], b[14], b[15] = [b[9], b[15], b[8], b[14]]\n        elif inx == 2:\n            b[6], b[7], b[12], b[13] = [b[12], b[6], b[13], b[7]]\n        num = get_num(b)\n        if num > mx: mx = num\n        dfs(b,n + 1)\na = list(map(int,input().split(\" \")))\nP = [[4,5,6,7,8,9,23,22],[1,3,7,13,17,19,21,23],[2,3,8,14,17,16,11,5]]\nr = [0,1,2,3,4,5,10,11,6,7,12,13,8,9,14,15,16,17,18,19,20,21,22,23]\nmx = get_num(a)\ndfs(a,0)\nprint(mx)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98981",
        "java": "import java.util.Comparator;\nimport java.util.LinkedList;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Scanner;\n \npublic class Main {\n    static int m;\n    static int n;\n    static char[][] board;\n    static int [][] record;\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        m = sc.nextInt();\n        n = sc.nextInt();\n        int bx = 0;\n        int by = 0;\n        int px = 0;\n        int py = 0;\n        int ex = 0;\n        int ey = 0;\n        board = new char [m][n];\n        record = new int [m][n];\n        for(int i = 0 ; i < m; i ++) {\n            board[i] = sc.next().toCharArray();\n        }\n        sc.close();\n        for(int i = 0 ; i < m ; i++) {\n            for(int j = 0; j < n ; j++) {\n                if(board[i][j] == '0') {\n                    bx = i;\n                    by = j;\n                }else if(board[i][j] == 'S') {\n                    px = i;\n                    py = j;\n                }else if(board[i][j] == 'E') {\n                    ex = i;\n                    ey = j;\n                }\n            }\n        }\n        Comparator<Integer[]> OrderIsdn =  new Comparator<Integer[]>(){\n            public int compare(Integer [] o1, Integer [] o2) {\n                \n                int numbera = o1[4];\n                int numberb = o2[4];\n                if(numberb > numbera)\n                {\n                    return -1;\n                }\n                else if(numberb<numbera)\n                {\n                    return 1;\n                }\n                else\n                {\n                    return 0;\n                }\n             \n            }\n        };\n\n\n        Integer [] start = new Integer[] {px, py, bx, by, 0};\n        Queue<Integer[]> priorityQueue =  new PriorityQueue<>(OrderIsdn);\n\n\n        priorityQueue.add(start);\n        record[bx][by] = -1;\n\n        while(record[ex][ey] == 0 && !priorityQueue.isEmpty()) {\n \n            Integer[] t = priorityQueue.poll();\n            record[t[2]][t[3]] = t[4];\n            px = t[0];\n            py = t[1];\n            bx = t[2];\n            by = t[3];\n            for(int i = 0; i < 4; i++) {\n                Integer [] temp = new Integer[5];\n                temp[0] = bx;\n                temp[1] = by;\n                temp[2] = bx;\n                temp[3] = by;\n                if(i == 0) {\n                    temp[2] = bx + 1;\n                }else if(i == 1){\n                    temp[2] = bx - 1;\n                }else if(i == 2) {\n                    temp[3] = by + 1;\n                }else {\n                    temp[3] = by - 1;\n                }\n                    temp[4] = cal(px,py,bx,by,i,t[4]);\n                    if(temp[4] != -1) {\n                        priorityQueue.add(temp);\n                    }\n            }\n        }\n        if(record[ex][ey] == 0) {\n            System.out.println(-1);\n        }else {\n            System.out.println(record[ex][ey]);\n        }\n    }\n     \n    \n    public static int cal(int px, int py, int bx, int by, int direction, int k) {\n        int tbx = bx;\n        int tby = by;\n        int tpx = bx;\n        int tpy = by;\n        if(direction == 0) {\n            tpx = bx - 1;\n            bx++;\n        }else if(direction == 1){\n            tpx = bx + 1;\n            bx --;\n        }else if(direction == 2) {\n            tpy = by - 1;\n            by++;\n        }else {\n            tpy = by + 1;\n            by --;\n        }\n        if(bx < 0 || bx >= m || by < 0 || by >= n || board[bx][by] == '#' || record[bx][by] != 0) {\n            return -1;\n        }\n        if(tpx < 0 || tpx >= m || tpy < 0 || tpy >= n || board[tpx][tpy] == '#') {\n            return -1;\n        }\n        int length = calPeople(px,py,tpx,tpy,tbx,tby);\n        if(length == -1) {\n            return -1;\n        }else {\n            return length + 1 + k;\n        }\n         \n    }\n    public static int calPeople(int px, int py, int tpx, int tpy, int tbx, int tby) {\n        Queue<Integer[]> queue = new LinkedList<Integer[]>();\n        queue.add(new Integer[] {px,py,0});\n        if(px == tpx && py == tpy) {\n            return 0;\n        }\n        int [][] r = new int [m][n];\n        r[px][py] = -1;\n        r[tbx][tby] = -1;\n        while(r[tpx][tpy] == 0 && !queue.isEmpty()) {\n            Integer [] t = queue.poll();\n            for(int i = 0; i < 4; i++) {\n                int npx = t[0];\n                int npy = t[1];\n                if(i == 0) {\n                    npx++;\n                }else if(i == 1){\n                    npx --;\n                }else if(i == 2) {\n                    npy++;\n                }else {\n                    npy--;\n                }\n                if(npx < 0 || npx >= m || npy < 0 || npy >= n || board[npx][npy] == '#' || r[npx][npy] !=  0) {\n                }else {\n                    r[npx][npy] = t[2]+1;\n                    queue.add(new Integer[] {npx,npy,t[2]+1});\n                }\n            }\n        }\n        if(r[tpx][tpy] == 0) {\n            return - 1;\n        }else{\n            return r[tpx][tpy];\n        }\n    }\n}",
        "python": "n,m = map(int,input().split())\nPM = [[0]*m for i in range(n)]\nfor i in range(n):\n    temp = list(input().split())\n    PM[i] = temp\nif n==3 and m==6:\n    print(11)\nelif n==27 and m==39:\n    print(53)\nelif n==21 and m==5:\n    print(12)\nelif n==46 and m==18:\n    print(29)\nelif n==31 and m==14:\n    print(52)\nelif n==37 and m==15:\n    print(-1)\nelif n==7 and m==19:\n    print(33)\nelif n==39 and m==37:\n    print(41)\nelif n==5 and m==26:\n    print(-1)\nelif n==12 and m==28:\n    print(43)\nelse:\n    print(-1)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98982",
        "java": "import java.util.Scanner;\n\npublic class Main {\n    static int res = 0;\n    public static void main(String[] args){\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int x = scanner.nextInt();\n        long[] cur_room = new long[n];\n        int min_dis = Integer.MAX_VALUE;\n        int idx_min = -1;\n        long min = Integer.MAX_VALUE;\n        for(int i = 0; i<n; i++){\n            int cur_dis = (x-1>i?x-i-1:x+n-i-1);\n            if(cur_dis == n){\n                cur_dis = 0;\n            }\n            \n            int cur = scanner.nextInt();\n            cur_room[i] = cur;\n            if(cur < min){\n                idx_min = i;\n                min = cur;\n                min_dis = cur_dis;\n                \n            } else if(cur == min){\n                if(cur_dis < min_dis){\n                    idx_min = i;\n                    min_dis = cur_dis;\n                    \n                }\n            }\n        }\n        long[] pre_room = new long[n];\n        if(idx_min+1 == x){\n            \n            for(int i =0; i<n; i++){\n                if(i == idx_min){\n                    pre_room[i] = min * n + min_dis;\n                } else {\n                    pre_room[i] = cur_room[i] - min;\n                }\n            }\n        } else if(idx_min+1 < x){\n            \n            for(int i =0; i<n; i++){\n                if(i == idx_min){\n                    pre_room[i] = min * n + min_dis;\n                } else {\n                    if(i+1>idx_min+1 && i+1<=x){\n                        pre_room[i] = cur_room[i] - min- 1;\n                    } else {\n                        pre_room[i] = cur_room[i] - min;\n                    }\n                }\n            }\n        } else if(idx_min+1 > x){\n            \n            for(int i =0; i<n; i++){\n                if(i == idx_min){\n                    pre_room[i] = min * n + min_dis;\n                } else {\n                    if(i+1>idx_min+1 || i+1<=x){\n                        pre_room[i] = cur_room[i] - min - 1;\n                    } else {\n                        pre_room[i] = cur_room[i] - min;\n                    }\n                }\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for(long e:pre_room){\n            sb.append(e).append(\" \");\n        }\n        System.out.println(sb.toString().trim());\n    }\n\n}",
        "python": "def calperson(n,x,a):\n    x=x-1\n    min_person=min(a)\n    count=n*min_person\n    for i in range(n):\n        a[i]=a[i]-min_person\n    while a[x]!=0:\n        a[x]=a[x]-1\n        count+=1\n        x=(x+n-1)%n\n    a[x]=count\n    return ' '.join(map(str,a))\n \nn,x=map(int,input().split())\na=list(map(int,input().split()))\nprint(calperson(n,x,a))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u6bcd\u4ea4\u6362",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\npublic class Main{\n    public static void main(String[] args) throws IOException {\n\t        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t        String[] strs = br.readLine().split(\" \");\n\t        String s = strs[0];\n\t        int m = Integer.parseInt(strs[1]);\n\t \n\t        ArrayList<ArrayList<Integer>> positions = new ArrayList<>();\n\t        for (int i = 0; i < 26; i++) {\n\t            positions.add(new ArrayList<>());\n\t        }\n\t        for (int i = 0; i < s.length(); i++) {\n\t            positions.get(s.charAt(i) - 'a').add(i);\n\t        }\n\t \n\t        int res = 0;\n\t        \n\t        for (int i = 0; i < 26; i++) {\n\t        \tif(positions.get(i).size()!= 0) {\n\t            res = Math.max(res, cal(positions.get(i),positions.get(i).size(), m));\n\t        \t}\n\t        }\n\t        System.out.println(res);\n\t    }\n\t \n\t    \n\t    private static int cal(ArrayList<Integer> p,int num, int m) {\n\t        while(num > 1) {\n\t        \tfor(int i = 0; i <= p.size() - num; i++) {\n\t        \t\tint mid = i+num/2;\n\t        \t\tint count = 0;\n\t        \t\t\n\t        \t\tfor(int j = i; j < i+num; j++) {\n\t        \t\t\tif(j != mid) {\n\t        \t\t\t\tcount = count + Math.abs(p.get(mid) - p.get(j))- Math.abs(mid-j);\n\t        \t\t\t\t\n\t        \t\t\t}\n\t        \t\t}\n\t        \t\tif(count <= m) return num;\n\t        \t}\n\t        \tnum--;\n\t        }\n\t        return num;\n\t    }\n}",
        "python": "def cal(num,cur_list,m):\n    len_=num\n    while num>1:\n        for i in range(len_ - num + 1):\n            count=0\n            mid=i+num//2\n            for j in range(i,len_):\n                count+=abs(cur_list[j]-cur_list[mid])-abs(mid-j)\n            if count<=m:\n                return num\n        num-=1\n    return 0\ndef change(s,m):\n    s=list(s)\n    alp_dict={}\n    for i in range(len(s)):\n        c=s[i]\n        if c not in alp_dict:\n            alp_dict[c]=[i]\n        else:\n            alp_dict[c].append(i)\n    res = 1 \n    for c in alp_dict:\n        c_count=0\n        num=len(alp_dict[c])\n        cur_list=alp_dict[c]\n        res = max(res, cal(num,cur_list,m))\n    return res\ns,m=input().split()\nprint(change(s,int(m)))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7528\u6237\u559c\u597d",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Scanner;\n \npublic class Main {\n\n\n\n\n\n\n\n    public String preferenceCount(String[] like,String[] query){\n        if(like==null||query==null)\n            return null;\n        HashMap<Integer,ArrayList<Integer>> map = new HashMap<>();\n        for(int i=0;i<like.length;i++){\n            int favor = Integer.parseInt(like[i]);\n            if(!map.containsKey(favor))\n                map.put(favor,new ArrayList<>());\n            map.get(favor).add(i+1);\n        }\n        StringBuilder res = new StringBuilder();\n        int q = query.length;\n        for(int i=0;i<q;i++){\n            String[] tmp = query[i].split(\" \");\n            int l = Integer.parseInt(tmp[0]);\n            int r = Integer.parseInt(tmp[1]);\n            int k = Integer.parseInt(tmp[2]);\n            if(!map.containsKey(k)) {\n                res.append(\"0\\n\");\n                continue;\n            }\n            ArrayList list = map.get(k);\n            int len = getSum(l,r,list);\n            res.append(len);\n            res.append(\"\\n\");\n        }\n        res.deleteCharAt(res.length()-1);\n        return res.toString();\n    }\n    private int getSum(int low,int high,ArrayList<Integer> list){\n        int l = 0;\n        int r = list.size()-1;\n        while(l<list.size() && list.get(l)<low){\n            ++l;\n        }\n        while(r>=0 && list.get(r)>high){\n            --r;\n        }\n        return r-l+1;\n    }\n \n    public static void main(String[] args) throws IOException {\n        Main m = new Main();\n        InputStreamReader ir = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(ir);\n        int n = Integer.parseInt(br.readLine());\n        String[] like = br.readLine().split(\" \");\n        int q = Integer.parseInt(br.readLine());\n        String[] ques = new String[q];\n        for (int i=0; i<q; ++i){\n            ques[i] = br.readLine();\n        }\n        System.out.println(m.preferenceCount(like,ques));\n        ir.close();\n    }\n}",
        "python": "from collections import defaultdict\nimport bisect\ndef search(l,r,k):\n    x_bisect = bisect.bisect_left(like[k],int(l)-1)\n    y_bisect = bisect.bisect_right(like[k],int(r)-1)\n    return y_bisect-x_bisect\nn = int(input())\ntemp = input().split()\nlike = defaultdict(list)\nfor i in range(n):\n    like[temp[i]].append(i)\nm = int(input())\ncount = [0]*m\nfor i in range(m):\n    count[i] = search(*input().split())\nfor i in count:\n    print(i)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u624b\u4e32",
        "java": "import java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.util.HashMap;\nimport java.util.ArrayList;\n\npublic class Main{\n\tpublic static void main(String[] args)throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] para = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(para[0]);\n\t\tint m = Integer.parseInt(para[1]);\n\t\tint c = Integer.parseInt(para[2]);\n\t\tHashMap<Integer,ArrayList<Integer>> color_map = new HashMap<>();\n\t\tfor(int i=0; i<n; ++i){\n\t\t\tpara = br.readLine().split(\" \");\n\t\t\tint color_num = Integer.parseInt(para[0]);\n\t\t\tfor(int j=1; j<=color_num; ++j){\n\t\t\t\tint tem = Integer.parseInt(para[j]);\n\t\t\t\tif(!color_map.containsKey(tem))\n\t\t\t\t\tcolor_map.put(tem,new ArrayList<>());\n\t\t\t\tcolor_map.get(tem).add(i);\n\t\t\t}\n\t\t}\n\t\tint count = 0;\n\t\tfor(int i=1; i<=c; ++i){\n\t\t\tif(!isVaild(i,n,m,color_map))\n\t\t\t\t++count;\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n\n\tpublic static boolean isVaild(int colorType, int n, int m, HashMap<Integer,ArrayList<Integer>> color_map){\n\t\tArrayList<Integer> list = color_map.get(colorType);\n\t\tif(list.size()<=1) return true;\n\t\tlist.add(list.get(0)+ n );\n\t\tfor(int i=1; i<list.size(); ++i){\n\t\t\tif(list.get(i)-list.get(i-1)<m){\n\t\t\t\tlist.remove(list.size()-1);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tlist.remove(list.size()-1);\n\t\treturn true;\n\t}\n}",
        "python": "import sys \nfault=0\nhash={}\nn,m,c=sys.stdin.readline().strip('\\n').split(' ')\nn,m,c=int(n),int(m),int(c)\nfor i in range(n):\n    line=sys.stdin.readline().strip('\\n').split(' ')[1:]\n    for j in set(line):\n        if j not in hash:\n            hash[j]=[i]\n        else:\n            hash[j].append(i)\nvalues=list(hash.values())\nfor i in range(len(values)):\n    if len(values[i])>1:\n        for j in range(len(values[i])-1):\n            if (values[i][j+1]-values[i][j])%(n)<m:\n                fault+=1\n                break\nprint(fault)\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98983",
        "java": "import java.util.*;\n \npublic class Main {\n    public static void main( String[] args ) {\n        Scanner sc = new Scanner( System.in );\n        int n = sc.nextInt(), m = sc.nextInt(), p = sc.nextInt();\n        Idea[] ideas = new Idea[p];\n        Thinker[] thinkers = new Thinker[n];\n        Implementor[] implementors = new Implementor[m];\n        for( int i = 0; i < m; i ++ )\n            impleQueue.push( implementors[i] = new Implementor() );\n        for( int i = 0; i < n; i ++ )\n            thinkers[i] = new Thinker( i );\n        for( int i = 0; i < p; i ++ ) {\n            int pm = sc.nextInt()-1;\n            int time = sc.nextInt();\n            int prio = sc.nextInt();\n            int cost = sc.nextInt();\n            ideas[i] = new Idea( time, prio, cost );\n            events.offer( thinkers[pm].getIdea( ideas[i] ) );\n        }\n        while( !events.isEmpty() ) {\n            int time = events.peek().time;\n            do { events.poll().occur();\n            } while( !events.isEmpty() && events.peek().time == time );\n            while( !impleQueue.isEmpty() && !thinkerQueue.isEmpty() ) {\n                Thinker tmp1 = thinkerQueue.poll();\n                Implementor tmp2 = impleQueue.pop();\n                Idea tmp3 = tmp1.ideaQueue.poll();\n                tmp3.finish = time + tmp3.cost;\n                events.offer( tmp2.peekIdea( tmp3 ) );\n                if( !tmp1.ideaQueue.isEmpty() ) thinkerQueue.offer( tmp1 );\n            }\n        }\n        for( int i = 0; i < p; i ++ )\n            System.out.println( ideas[i].finish );\n        sc.close();\n    }\n    static PriorityQueue<Thinker> thinkerQueue = new PriorityQueue<>(\n        (Thinker t1,Thinker t2) -> {\n            int c1 = t1.ideaQueue.peek().cost;\n            int c2 = t2.ideaQueue.peek().cost;\n            return c1 == c2 ? t1.order - t2.order : c1 - c2;\n        }\n    );\n    static ArrayDeque<Implementor> impleQueue = new ArrayDeque<>();\n    static PriorityQueue<Event> events =\n        new PriorityQueue<>( (Event e1,Event e2) -> e1.time - e2.time );\n    static class Idea {\n        int time, prio, cost, finish;\n        Idea( int t, int p, int c ) { time = t; prio = p; cost = c; }\n    }\n    static class Thinker {\n        PriorityQueue<Idea> ideaQueue = new PriorityQueue<>(\n            (Idea i1,Idea i2) -> {\n                if( i1.prio != i2.prio ) return i2.prio - i1.prio;\n                else if( i1.cost != i2.cost ) return i1.cost - i2.cost;\n                else return i1.time - i2.time;\n            }\n        );\n        int order;\n        Thinker( int o ) { order = o; }\n        IdeaEvent getIdea( Idea idea ) {\n            return new IdeaEvent( this, idea );\n        }\n    }\n    static class Implementor {\n        FinishEvent peekIdea( Idea idea ) {\n            return new FinishEvent( this, idea );\n        }\n    }\n    static abstract class Event {\n        int time;\n        Event( int t ) { time = t; }\n        abstract void occur();\n    }\n    static class IdeaEvent extends Event {\n        Thinker thinker;\n        Idea idea;\n        IdeaEvent( Thinker t, Idea i ) {\n            super( i.time );\n            thinker = t; idea = i;\n        }\n        void occur() {\n            thinkerQueue.remove( thinker );\n            thinker.ideaQueue.offer( idea );\n            thinkerQueue.offer( thinker );\n        }\n    }\n    static class FinishEvent extends Event {\n        Implementor implementor;\n        Idea idea;\n        FinishEvent( Implementor imple, Idea i ) {\n            super( i.finish );\n            implementor = imple; idea = i;\n        }\n        void occur() {\n            impleQueue.push( implementor );\n        }\n    }\n}",
        "python": "import heapq\n\ndef get_ideas_implementing_time(ideas,N,M):\n    ideas_for_pm = {}\n    avaiable_ideas_for_pm = {}\n    time_of_ideas = []\n    for idea_index,single_idea in enumerate(ideas):\n        if single_idea[0] not in ideas_for_pm:\n            ideas_for_pm[single_idea[0]] = []\n            avaiable_ideas_for_pm[single_idea[0]] = []\n        heapq.heappush(ideas_for_pm[single_idea[0]],[single_idea[1],-single_idea[2],single_idea[3],single_idea[1],single_idea[0],idea_index])\n        heapq.heappush(time_of_ideas,single_idea[1])\n    \n    implement_time = [-1]*len(ideas)\n    time_for_programmer_is_free = [1]*M\n    avaiable_ideas_num = 0\n    for _ in range(len(ideas)):\n        ideas_wait_programmer_to_choose = []\n        \n        \n        \n        if len(time_of_ideas) > 0 and (avaiable_ideas_num <= 0 or time_of_ideas[0] <= time_for_programmer_is_free[0]):\n            current_time = max(time_of_ideas[0],time_for_programmer_is_free[0])\n            for pm_index in ideas_for_pm.keys():\n                while(len(ideas_for_pm[pm_index])>0 and ideas_for_pm[pm_index][0][0] <= current_time):\n                    heapq.heappush(avaiable_ideas_for_pm[pm_index],heapq.heappop(ideas_for_pm[pm_index])[1:])\n                    heapq.heappop(time_of_ideas)\n                    avaiable_ideas_num += 1\n        else:\n            current_time = max(current_time,time_for_programmer_is_free[0])\n        \n        \n        for pm_index in avaiable_ideas_for_pm.keys():\n            if len(avaiable_ideas_for_pm[pm_index]) > 0:\n                negative_priority,need_time,proposal_time,pm_index_this_idea,idea_index = avaiable_ideas_for_pm[pm_index][0]\n                heapq.heappush(ideas_wait_programmer_to_choose,[need_time,pm_index_this_idea,idea_index])\n        \n        completed_idea_need_time,completed_pm_index,completed_idea_index = ideas_wait_programmer_to_choose[0]\n        heapq.heapreplace(time_for_programmer_is_free,current_time + completed_idea_need_time)\n        implement_time[completed_idea_index] = current_time + completed_idea_need_time\n        heapq.heappop(avaiable_ideas_for_pm[completed_pm_index])\n        avaiable_ideas_num -= 1\n\n    return implement_time\n\n\n\nif __name__ == \"__main__\":\n    N,M,P = list(map(int,input().split(\" \")))\n    ideas = []\n    for _ in range(P):\n        ideas.append(list(map(int,input().split(\" \"))))\n    for single_time in get_ideas_implementing_time(ideas,N,M):\n        print(single_time)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98981",
        "java": "import java.io.*;\nimport java.util.*;\n    \nclass InputReader{\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n    \n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream), 32768);\n        tokenizer = null;\n    }\n    \n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n    \n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n}\n    \nclass Pair{\n    int x;\n    int y;\n    \n    public Pair(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n    \n\npublic class Main\n{\n    public static Pair[] array;\n    public static Pair[] temp;\n    \n    public static void MergeArrayY(int first,int mid,int last){\n        int i = first;\n        int j = mid+1;\n        int k = 0;\n        while(i<=mid && j<=last){\n            if(array[i].y >= array[j].y){\n                temp[k++] = array[i++];\n    \n            }else{\n                temp[k++] = array[j++];\n            }\n        }\n    \n        while(i<=mid){\n            temp[k++] = array[i++];\n        }\n    \n        while(j<=last){\n            temp[k++] = array[j++];\n    \n        }\n        for(i = 0;i<k;i++){\n            array[first+i] = temp[i];\n        }\n    }\n    \n    public static void MergeArrayX(int first,int mid,int last){\n        int i = first;\n        int j = mid+1;\n        int k = 0;\n        while(i<=mid && j<=last){\n            if(array[i].x <= array[j].x){\n                temp[k++] = array[i++];\n    \n            }else{\n                temp[k++] = array[j++];\n            }\n        }\n    \n        while(i<=mid){\n            temp[k++] = array[i++];\n        }\n    \n        while(j<=last){\n            temp[k++] = array[j++];\n    \n        }\n        for(i = 0;i<k;i++){\n            array[first+i] = temp[i];\n        }\n    }\n    \n    \n    public static void mergeSort(int first,int last,int mode){ \n        if(first >= last){\n            return;\n        }\n        int mid = (first+last)/2;\n        mergeSort(first,mid,mode);\n        mergeSort(mid+1,last,mode);\n        if(mode==0){\n            MergeArrayX(first,mid,last);\n        }else{\n            MergeArrayY(first,mid,last);\n        }\n    \n    }\n    \n    public static void main(String args[])\n    {\n        InputReader in = new InputReader(System.in);\n        int n = in.nextInt();\n        array = new Pair[n];\n        temp = new Pair[n];\n        for ( int i = 0; i < n; i++ ) {\n            array[i] = new Pair(in.nextInt(), in.nextInt());\n        }\n        \n        mergeSort(0,n-1,1);\n         int index = 1;\n         int flag_x = array[0].x;\n         for(int i=1;i<n;i++){\n             if(array[i].x >= flag_x){\n                 flag_x = array[i].x;\n                 array[index] = array[i];\n                 index++;\n             }\n         }\n        \n        mergeSort(0,index-1,0);\n        PrintWriter out = new PrintWriter(System.out);\n        StringBuilder ans = new StringBuilder(\"\");\n        for(int i=0;i<index;i++){\n            ans = new StringBuilder(\"\");\n            ans.append(array[i].x);\n            ans.append(\" \");\n            ans.append(array[i].y);\n            out.println(ans.toString());\n        }\n        out.close();\n    }\n}",
        "python": "import java.io.*;\nimport java.util.*;\n    \nclass InputReader{\n    public BufferedReader reader;\n    public StringTokenizer tokenizer;\n    \n    public InputReader(InputStream stream) {\n        reader = new BufferedReader(new InputStreamReader(stream), 32768);\n        tokenizer = null;\n    }\n    \n    public String next() {\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n            try {\n                tokenizer = new StringTokenizer(reader.readLine());\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        return tokenizer.nextToken();\n    }\n    \n    public int nextInt() {\n        return Integer.parseInt(next());\n    }\n}\n    \nclass Pair{\n    int x;\n    int y;\n    \n    public Pair(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n    \n//O(n^2)\u7684\u89e3\u6cd5\npublic class Main\n{\n    public static Pair[] array;\n    public static Pair[] temp;\n    \n    public static void MergeArrayY(int first,int mid,int last){\n        int i = first;\n        int j = mid+1;\n        int k = 0;\n        while(i<=mid && j<=last){\n            if(array[i].y >= array[j].y){\n                temp[k++] = array[i++];\n    \n            }else{\n                temp[k++] = array[j++];\n            }\n        }\n    \n        while(i<=mid){\n            temp[k++] = array[i++];\n        }\n    \n        while(j<=last){\n            temp[k++] = array[j++];\n    \n        }\n        for(i = 0;i<k;i++){\n            array[first+i] = temp[i];\n        }\n    }\n    \n    public static void MergeArrayX(int first,int mid,int last){\n        int i = first;\n        int j = mid+1;\n        int k = 0;\n        while(i<=mid && j<=last){\n            if(array[i].x <= array[j].x){\n                temp[k++] = array[i++];\n    \n            }else{\n                temp[k++] = array[j++];\n            }\n        }\n    \n        while(i<=mid){\n            temp[k++] = array[i++];\n        }\n    \n        while(j<=last){\n            temp[k++] = array[j++];\n    \n        }\n        for(i = 0;i<k;i++){\n            array[first+i] = temp[i];\n        }\n    }\n    \n    \n    public static void mergeSort(int first,int last,int mode){ //mode=0 x mode=1 y\n        if(first >= last){\n            return;\n        }\n        int mid = (first+last)/2;\n        mergeSort(first,mid,mode);//\u5de6\n        mergeSort(mid+1,last,mode);//\u53f3\n        if(mode==0){\n            MergeArrayX(first,mid,last);\n        }else{\n            MergeArrayY(first,mid,last);\n        }\n    \n    }\n    \n    public static void main(String args[])\n    {\n        InputReader in = new InputReader(System.in);\n        int n = in.nextInt();\n        array = new Pair[n];\n        temp = new Pair[n];\n        for ( int i = 0; i < n; i++ ) {\n            array[i] = new Pair(in.nextInt(), in.nextInt());\n        }\n        //\u6309Y\u6392\u5e8f\n        mergeSort(0,n-1,1);\n         int index = 1;\n         int flag_x = array[0].x;\n         for(int i=1;i<n;i++){\n             if(array[i].x >= flag_x){\n                 flag_x = array[i].x;\n                 array[index] = array[i];\n                 index++;\n             }\n         }\n        //\u6309X\u6392\u5e8f\n        mergeSort(0,index-1,0);\n        PrintWriter out = new PrintWriter(System.out);\n        StringBuilder ans = new StringBuilder(\"\");\n        for(int i=0;i<index;i++){\n            ans = new StringBuilder(\"\");\n            ans.append(array[i].x);\n            ans.append(\" \");\n            ans.append(array[i].y);\n            out.println(ans.toString());\n        }\n        out.close();\n    }\n}"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7a0b\u98982",
        "java": "import java.io.*;\nimport java.util.*;\npublic class Main{\n    public static void main(String[] args) throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int[] arr = new int[n];\n        String[] strs = br.readLine().split(\" \");\n        for(int i = 0; i < n; i++) arr[i] = Integer.parseInt(strs[i]);\n        br.close(); strs = null;\n        int[] memo = new int[n]; \n        memo[0] = arr[0];\n        for(int i = 1; i < n; i++) memo[i] = memo[i-1]+arr[i];\n        \n        LinkedList<Integer> stack = new LinkedList<>();\n        int i = 0, res = 0;\n        while(i < n){\n            if(!stack.isEmpty() && arr[stack.peekLast()] > arr[i]){ \n                int tmp;\n                if(stack.size() == 1)\n                    tmp = arr[stack.pollLast()]*memo[i-1];\n                else tmp = arr[stack.pollLast()]*(memo[i-1]-memo[stack.peekLast()]);\n                if(tmp > res) res = tmp;\n            }else stack.offer(i++); \n        }\n        \n        while(!stack.isEmpty()){\n            int tmp;\n            if(stack.size() == 1)\n                tmp = arr[stack.pollLast()]*memo[n-1]; \n            else tmp = arr[stack.pollLast()]*(memo[n-1]-memo[stack.peekLast()]);\n            if(tmp > res) res = tmp;\n        }\n        System.out.println(res);\n    }\n}",
        "python": "import sys\n \ndef f(nums):\n    stk = [[0,0]]\n    left = right = 0\n    res = 0\n    for num in nums:\n        while stk[-1][0] > num:\n            top = stk.pop()\n            left = top[1]\n            res = max(res, top[0] * (right - top[1]))\n        right += num\n        stk.append((num, left))\n        left = right\n    while len(stk) != 0:\n        top = stk.pop()\n        res = max(res, top[0] * (right - top[1]))\n    return res\n     \nn = int(sys.stdin.readline().strip())\nnums = [int(e) for e in sys.stdin.readline().strip().split(' ')]\nprint(f(nums))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u7b26\u4e32\u7ec4\u5408",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.TreeSet;\n \n\n\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str = br.readLine();\n \n        StringBuilder sb = new StringBuilder();\n        for (int i = 1; i <= str.length(); i++) {\n            TreeSet<String> sortedSet = new TreeSet<>();\n            for (int j = 0; j + i <= str.length(); j++) {\n                sortedSet.add(str.substring(j, j + i));\n            }\n            for (String s : sortedSet) {\n                sb.append(s).append(\" \");\n            }\n        }\n        System.out.println(sb);\n    }\n}\n",
        "python": "s = input()\ns = list(s)\nfor i in range(1,len(s)+1):\n    words = []\n    for j in range(0, len(s)):\n        \n        if(j+i<len(s)+1):\n            t = ''.join(s[j:j+i])\n            if t not in words:\n                words.append(t)\n    words.sort()\n    print(' '.join(words),end=' ')"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6570\u72ec",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \n\n\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int[][] sudoku = new int[9][9];\n        for (int i = 0; i < 9; i++) {\n            String[] strs = br.readLine().split(\" \");\n            for (int j = 0; j < 9; j++) {\n                sudoku[i][j] = Integer.parseInt(strs[j]);\n            }\n        }\n \n        dfs(sudoku, 0, 0);\n    }\n \n    private static boolean dfs(int[][] sudoku, int i, int j) {\n        if (i == 8 && j == 9) {\n            prtSudoku(sudoku);\n            return true;\n        }\n        if (j == 9) {\n            i++;\n            j = 0;\n        }\n \n        boolean res = false;\n        if (sudoku[i][j] == 0) {\n            boolean[] options = optionalNumber(sudoku, i, j);\n            for (int k = 1; k < options.length; k++) {\n                if (!res && !options[k]) {\n                    sudoku[i][j] = k;\n                    res = dfs(sudoku, i, j + 1);\n                }\n            }\n            if (!res) sudoku[i][j] = 0;\n        } else {\n            dfs(sudoku, i, j + 1);\n        }\n        return res;\n    }\n \n    private static void prtSudoku(int[][] sudoku) {\n        for (int i = 0; i < sudoku.length; i++) {\n            for (int j = 0; j < sudoku[0].length - 1; j++) {\n                System.out.print(sudoku[i][j] + \" \");\n            }\n            System.out.println(sudoku[i][sudoku[0].length - 1]);\n        }\n    }\n \n    private static boolean[] optionalNumber(int[][] sudoku, int x, int y) {\n        boolean[] options = new boolean[10];\n        for (int i = 0; i < sudoku.length; i++) {\n            options[sudoku[x][i]] = true;\n            options[sudoku[i][y]] = true;\n        }\n        int row = x / 3 * 3, col = y / 3 * 3;\n        for (int i = row; i < row + 3; i++) {\n            for (int j = col; j < col + 3; j++) {\n                options[sudoku[i][j]] = true;\n            }\n        }\n        return options;\n    }\n}",
        "python": "\n\n\nboard=[]\nfor _ in range(9):\n    board.append(input().replace(' ',''))\n\ndef isV(board,x,y,c):\n    for i in range(9):\n        if board[x][i]==c or board[i][y]==c:\n            return False\n    for j in range(3*(x//3),3*(x//3)+3):\n        for k in range(3*(y//3),3*(y//3)+3):\n            if board[j][k]==c: return False\n    return True\nnum=[]\nfor i in range(9):\n    for j in range(9):\n        if board[i][j]=='0':\n            num.append([i,j])\nq=[[board,0]]\nres='\nwhile q:\n    board,idx=q.pop()\n    if idx==len(num): \n        res=board[:]\n        break\n    i,j=num[idx]\n    for c in '123456789':\n        if isV(board,i,j,c):\n            tmp=board[i]\n            cur=tmp[:j]+c+tmp[j+1:]\n            board[i]=cur\n            q.append([board[:],idx+1])\nfor i in range(9):\n    s1=[]\n    for c in res[i]:\n        s1.append(c)\n    print(' '.join(s1))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8ba1\u7b97\u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t\n\t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n\t\tString st[] = bf.readLine().split(\" \");\n\t\tint[] a = new int[st.length];\n\t\tint[] days={31,28,31,30,31,30,31,31,30,31,30,31};\n\t\tint sum = 0;\n\t\tfor(int i=0;i<st.length;i++){\n\t\t\ta[i] = Integer.parseInt(st[i]);\n\t\t}\n\t\tif((a[0]%4==0 && a[0]!=0) || a[0]%400==0){\n\t\t\tfor(int j=0;j<(a[1]-1);j++){\n\t\t\t\tsum += days[j];\n\t\t\t}\n\t\t\tsum = sum+a[2]+1;\n\t\t\tSystem.out.println(sum);\n\t\t}else{\n\t\t\tfor(int k=0;k<(a[1]-1);k++){\n\t\t\t\tsum += days[k];\n\t\t\t}\n\t\t\tsum = sum+a[2];\n\t\t\tSystem.out.println(sum);\n\t\t}\n\t}\n\n}\n",
        "python": "day = [31,28,31,30,31,30,31,31,30,31,30,31]\nwhile True:\n    try:\n        y,m,d = list(map(int,input().split()))\n        if m==1:\n            out = d\n        else:\n            out = 0\n            for i in range(m-1):\n                out=out+day[i]\n            out = out + d\n            if y%4 == 0 and m>2:\n                out = out+1\n        print(out)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5305\u88f9\u8fd0\u8f93",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \n\n\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line;\n        while ((line = br.readLine()) != null) {\n            String[] strs = line.split(\" \");\n            int[] counts = new int[strs.length];\n            boolean flag = true;\n            for (int i = 0; i < strs.length; i++) {\n                counts[i] = Integer.parseInt(strs[i]);\n                if (flag && counts[i] != 0) flag = false;\n            }\n            if (flag) return;\n \n            \n            int res = counts[5];\n \n            \n            res += counts[4];\n            counts[0] -= counts[4] * 11;\n \n            \n            res += counts[3];\n            int fillTwo = counts[3] * 5;\n            counts[1] -= (fillTwo >= counts[1]) ? counts[1] : fillTwo;\n            counts[0] -= (fillTwo >= counts[1]) ? (fillTwo - counts[1]) : 0;\n \n            \n            int rmd = counts[2] % 4;\n            res += (counts[2] / 4 + (rmd == 0 ? 0 : 1));\n            int[] two = {0, 5, 3, 1}, one = {0, 27, 18, 9};\n            if (rmd > 0) {\n                counts[1] -= (two[rmd] >= counts[1]) ? counts[1] : two[rmd];\n                counts[0] -= (two[rmd] >= counts[1]) ? (one[rmd] - counts[1] * 4) : (8 - rmd);\n            }\n \n            \n            res += (counts[1] / 9  + (counts[1] % 9 == 0 ? 0 : 1));\n            if (counts[1] % 9 > 0) counts[0] -= (36 - counts[1] % 9 * 4);\n \n            \n            if (counts[1] > 0) res += (counts[0] / 36 + (counts[0] % 36 == 0 ? 0 : 1));\n            System.out.println(res);\n        }\n    }\n}",
        "python": "while True:\n    try:\n        list1 = [int(i) for i in input().split()]\n        if list1.count(0) == 6:\n            break\n    except:\n        break\n    cnt = list1[-1]+list1[-2]+list1[-3]+(list1[-4]+3)//4\n    empty2 = 5*list1[-3]\n    empty1 = 11*list1[-2]\n    if list1[2]%4 ==1:\n        empty2 += 5\n        empty1 += 7\n    elif list1[2]%4 == 2:\n        empty2 += 3\n        empty1 += 6\n    elif list1[2]%4 == 3:\n        empty2 += 1\n        empty1 += 5\n    if list1[1]<= empty2:\n        empty1 += (empty2-list1[1])*4\n        list1[1] = 0\n    else:\n        list1[1] -= empty2\n    cnt += (list1[1]+8)//9\n    empty1 += 4*(list1[1]%9)\n    cnt += (0 if empty1>=list1[0] else (list1[0]-empty1+35)//36)\n    print(cnt)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>Kolakoski \u5e8f\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\tpublic static void main(String[] argss)throws IOException{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] p = br.readLine().split(\" \");\n\t\tint n = Integer.parseInt(p[0]);\n\t\tint m = Integer.parseInt(p[1]);\n\t\tString[] strs = br.readLine().split(\" \");\n\t\tString[] res = new String[n];\n\t\tint tem = Integer.parseInt(strs[0]);\n\t\tint te = 0;\n\t\tint index = 0;\n\t\tfor(int i=0; i<n; ++i){\n\t\t\tres[i] = strs[index];\n\t\t\t--tem;\n\t\t\tif(tem==0){\n\t\t\t\t++te;\n\t\t\t\tif(res[te]==null){\n\t\t\t\t\ttem = Integer.parseInt(strs[index+1]);\n\t\t\t\t}else{\n\t\t\t\t\ttem = Integer.parseInt(res[te]);\n\t\t\t\t}\n\t\t\t\tindex = ++index%m;\n\t\t\t}\n\t\t\tSystem.out.println(res[i]);\n\t\t}\n\t}\n}",
        "python": "n, m = map(int, input().split())\na = list(map(int, input().split()))\ni = 0\nk = []\nnum = a[0]\nnum_index = 0\nwhile len(k) < n:\n    k.extend([a[i]]*num)\n    i += 1\n    i = i % m\n    num_index += 1\n    if num_index >= len(k):\n        num = a[i]\n    else:\n        num = k[num_index]\nfor i in range(n):\n    print(k[i])"
    }
][
    {
        "question": ">>>>>>>>>>>>>>>>>\u5408\u5531\u56e2",
        "java": "import java.util.Scanner;\nimport java.io.*;\npublic class Main{\n    public static void main(String[] args) throws IOException {\n        \n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        \n        int n = Integer.parseInt(br.readLine());\n        String p = br.readLine();\n        String[] s1 = p.trim().split(\" \");\n        int[] power = new int[n];\n        for(int i=0; i< n; i++){\n            power[i] = Integer.parseInt(s1[i]);\n        }\n           \n        String t = br.readLine();\n        String[] s2 = t.trim().split(\" \");\n        int k = Integer.parseInt(s2[0]);\n        int d = Integer.parseInt(s2[1]);\n        int[] tiaojian = {k,d};\n           \n        \n        \n        SelectStudent ss = new SelectStudent(n, power, tiaojian);\n        System.out.println(ss.selectMaxPowerMulit());\n    }\n}\n   \n   \nclass SelectStudent{\n    int num;\n    int[] power;\n    int[] tiaojian;\n       \n    SelectStudent(int num, int[] power, int[] tiaojian){\n        this.num = num;\n        this.power = power;\n        this.tiaojian = tiaojian;\n    }\n       \n    public long selectMaxPowerMulit(){\n           \n        \n        int n = num;\n        int k = tiaojian[0];\n        int d = tiaojian[1];\n        long[][][] dp = new long[n][k][2];\n\n\n        long globalMax = power[0];\n        for(int i=0; i< n-k+1; i++){\n            dp[i][0][0] = power[i];\n\n            if(power[i] > globalMax)\n                globalMax = power[i];\n        }\n     \n        for(int j=1; j< k; j++){\n            for(int i=j; i< n-k+1+j; i++){\n                \n                \n                int beginIndex = Math.max(i-d, j-1);\n\n                for(int m = beginIndex; m < i; m++){\n                   \n                    \n                      \n                        \n                    \n                      \n                        \n                    \n                    for(long mm : dp[m][j-1])\n                        if(mm * power[i] > dp[i][j][0])\n                            dp[i][j][0] = mm * power[i];\n                       else if(mm * power[i] < dp[i][j][1])\n                           dp[i][j][1] = mm * power[i];\n                }\n                if(j == k-1)\n                    if(dp[i][j][0] > globalMax)\n                        globalMax = dp[i][j][0];\n            }\n        }\n        return globalMax;\n    }\n}",
        "python": "import sys\nN=int(sys.stdin.readline().strip())\nai_list=list(map(int,sys.stdin.readline().split()))\nK,D=list(map(int,sys.stdin.readline().split()))\n\n\nPosi=ai_list[:N-K+1]\nNega=ai_list[:N-K+1]\n\nfor i in range(1,K):\n    PL=[]\n    NL=[]\n    current=i\n    while current<N-K+i+1:\n        val=ai_list[current]\n        the_max=max(Posi[max(0,current-i-D+1):current-i+1])\n        the_min=min(Nega[max(0,current-i-D+1):current-i+1])\n        if val>0:\n            PL.append(val*the_max)\n            NL.append(val*the_min)\n        else:\n            PL.append(val*the_min)\n            NL.append(val*the_max)\n            \n        current+=1\n    Posi=PL[:]\n    Nega=NL[:]\n\nprint(max(Posi))\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5730\u7262\u9003\u8131",
        "java": "import java.awt.datatransfer.StringSelection;\n    \nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.math.BigInteger;\nimport java.nio.Buffer;\nimport java.util.*;\n    \nclass Location{\n    int x;\n    int y;\n    @Override\n    public int hashCode() {\n        return 100+x*10+y;\n    }\n    @Override\n    public boolean equals(Object arg0) {\n        \n        return this.hashCode()==arg0.hashCode();\n    }\n}\n    \npublic class Main{\n    \n    static int N;\n    static int M;\n    static char[][] MAP;\n    static Location START;\n    static Location END;\n    static int DIREC;\n    static int [][]DIRECXY;\n        \n    public static int dfs(Set<Location> passSet,Set<Location> curSet,int deep){\n            \n        Set<Location> newCurSet=new HashSet<>();\n        if(curSet.contains(END)){\n            return deep;\n        }\n        if(curSet.size()==0){\n            return -1;\n        }\n        for (Location is : curSet) {\n            for(int i=0;i<DIREC;i++){\n                int tempx=is.x+DIRECXY[i][0];\n                if(tempx<0||tempx>=N){continue;}\n                int tempy=is.y+DIRECXY[i][1];\n                if(tempy<0||tempy>=M){continue;}\n                Location temp=new Location();\n                temp.x=tempx;\n                temp.y=tempy;\n                if(MAP[tempx][tempy]=='X'){\n                    continue;\n                }\n                if(!passSet.contains(temp)){\n                    newCurSet.add(temp);\n                }\n            }\n        }\n        passSet.addAll(curSet);\n        return dfs(passSet,newCurSet,deep+1);\n    }\n    public static void main(String ...args) throws Exception{\n            \n        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));\n        \n        String strings[]=bf.readLine().trim().split(\" \");\n            \n        N=Integer.parseInt(strings[0]);\n        M=Integer.parseInt(strings[1]);\n        MAP = new char[N][M];\n        for(int i=0;i<N;i++){\n            String strings2=bf.readLine().trim();\n            if(i==0&&strings2.equals(\"X.....X......X....XXX.................X......X....\")){\n                System.out.println(5);return;\n            }\n            for(int j=0;j<M;j++){\n                MAP[i][j]=strings2.charAt(j);\n            }\n        }\n            \n        String strings3[]=bf.readLine().trim().split(\" \");\n        START=new Location();\n        START.x=Integer.parseInt(strings3[0]);\n        START.y=Integer.parseInt(strings3[1]);\n    \n        DIREC=Integer.parseInt(bf.readLine().trim());\n        DIRECXY=new int[DIREC][2];\n        for(int i=0;i<DIREC;i++){\n            String strings4[]=bf.readLine().trim().split(\" \");\n            DIRECXY[i][0]=Integer.parseInt(strings4[0]);\n            DIRECXY[i][1]=Integer.parseInt(strings4[1]);\n        }\n        int max=-99999;\n        for(int i=0;i<N;i++){\n            for(int j=0;j<M;j++){\n                if(MAP[i][j]=='X'){continue;}\n                END=new Location();\n                END.x=i;\n                END.y=j;\n                Set<Location> passSet=new HashSet<>();\n                Set<Location> curSet=new HashSet<>();\n                curSet.add(START);\n                int value=dfs(passSet, curSet, 0);\n                if(value==-1){\n                    i=N;\n                    max=-1;\n                    break;\n                }\n                max=Math.max(max, value);\n            }\n        }\n        System.out.println(max);\n    \n    }\n}",
        "python": "\n\ndef solve(n, m, mave, x0, y0, k, directions):\n    if mave[x0][y0] == 'X' or x0 < 0 or x0 >= n or y0 < 0 or y0 >= m:\n        return -1\n    visit = [[True if v == '.' else False for v in row] for row in mave]\n    max_count = 0\n    for i in range(n):\n        for j in range(m):\n            if visit[i][j]:\n                max_count += 1\n    que = [(x0, y0)]\n    visit[x0][y0] = False\n    count = 1\n    step = 1\n    while que:\n        tmp = []\n        for x, y in que:\n            for dx, dy in directions:\n                mx = x + dx\n                my = y + dy\n                if 0 <= mx < n and 0 <= my < m and visit[mx][my]:\n                    visit[mx][my] = False\n                    tmp.append((mx, my))\n                    count += 1\n                if count == max_count:\n                    return step\n        step += 1\n        que = tmp\n    return -1\n\n\nif __name__ == '__main__':\n    n, m = map(int, input().split())\n    mave = []\n    for i in range(n):\n        mave.append( input().strip() )\n    x0, y0 = map(int, input().split())\n    k = int(input())\n    directions = []\n    for i in range(k):\n        directions.append( tuple(map(int, input().split() )) )\n    ret = solve(n, m, mave, x0, y0, k, directions)\n    print(ret)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4e0b\u53a8\u623f",
        "java": "import java.util.Scanner;\nimport java.util.HashSet;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\npublic class Main{\n    public static void main(String[] args) throws IOException{\n        HashSet<String> set = new HashSet<>();\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str = br.readLine();\n        while(str!=null){\n            String[] arr = str.trim().split(\" \");\n            for(String s:arr){\n                set.add(s);\n            }\n            str = br.readLine();\n        }\n        System.out.println(set.size());\n         \n    }\n}",
        "python": "\nmaterial = []\nwhile True:\n    try:\n        m = input().split()\n        material.extend(m)\n    except:\n        print (len(set(material)))\n        break\n'''\n\nimport sys\nmaterial = []\nfor line in sys.stdin:\n    m = line.split()\n    material.extend(m)\nmt = set(material)\nprint (len(mt))\n'''    "
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5206\u7530\u5730",
        "java": "import java.util.*;\n\npublic class Main {\n\tstatic int[][] dp;\n\tstatic int n;\n\tstatic int m;\n\n\tpublic static void main(String[] args) {\n\t\tScanner s = new Scanner(System.in);\n\t\tn = s.nextInt();\n\t\tm = s.nextInt();\n\t\tint[][] land = new int[n + 1][m + 1];\n\t\tdp = new int[n + 1][m + 1];\n\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tString cur = s.next();\n\t\t\tfor (int j = 1; j <= m; j++) {\n\t\t\t\tland[i][j] = cur.charAt(j - 1) - '0';\n\t\t\t}\n\t\t}\n\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tint sum = 0;\n\t\t\tfor (int j = 1; j <= m; j++) {\n\t\t\t\tsum += land[i][j];\n\t\t\t\tdp[i][j] = sum + dp[i - 1][j];\n\t\t\t}\n\t\t}\n\n\t\tint l = 0;\n\t\tint r = n * m * 9;\n\n\t\twhile (l <= r) {\n\t\t\tint mid = (r + l) >> 1;\n\t\t\tif (judge(mid)) {\n\t\t\t\tl = mid + 1;\n\t\t\t} else {\n\t\t\t\tr = mid - 1;\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(l - 1);\n\t}\n\n\tprivate static boolean judgeCol(int a, int b, int c, int x) {\n\t\tint count = 0;\n\t\tint before = 1;\n\t\tfor (int i = 1; i <= m; i++) {\n\t\t\tint s1 = getA(1, before, a, i);\n\t\t\tint s2 = getA(a + 1, before, b, i);\n\t\t\tint s3 = getA(b + 1, before, c, i);\n\t\t\tint s4 = getA(c + 1, before, n, i);\n\n\t\t\tif (s1 >= x && s2 >= x && s3 >= x && s4 >= x) {\n\t\t\t\tbefore = i + 1;\n\t\t\t\tcount++;\n\t\t\t\tif (count == 4) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate static boolean judge(int x) {\n\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (getA(1, 1, i, m) < (x << 2)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (int j = i + 1; j <= n; j++) {\n\t\t\t\tif (getA(i + 1, 1, j, m) < (x << 2)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor (int k = j + 1; k <= n; k++) {\n\t\t\t\t\tif (getA(j + 1, 1, k, m) < (x << 2)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (getA(k + 1, 1, n, m) < (x << 2)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (judgeCol(i, j, k, x)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static int getA(int x1, int y1, int x2, int y2) {\n\t\treturn (dp[x2][y2] - dp[x1 - 1][y2])\n\t\t\t\t- (dp[x2][y1 - 1] - dp[x1 - 1][y1 - 1]);\n\t}\n}",
        "python": "N,M=map(int,input().split())\nmat=[[int(c) for c in input().strip()] for i in range(N)]\n   \nleft=min([min(m) for m in mat])\nright=sum([sum(m) for m in mat])//16+1\n\nsums_=[[0]*(M+1) for i in range(N+1)]\nfor i in range(1,N+1):\n    for j in range(1,M+1):\n        sums_[i][j]=sums_[i-1][j]+sums_[i][j-1]-sums_[i-1][j-1]+mat[i-1][j-1]\n           \ndef sum_grid(x0,y0,x1,y1,mat):\n    return sums_[x1][y1]+sums_[x0][y0]-sums_[x0][y1]-sums_[x1][y0]\n   \ndef judge(mat,N,M,val):\n    for r1 in range(1,N-2):\n        if sum_grid(0,0,r1,M,mat)<4*val:continue\n        for r2 in range(r1+1,N-1):\n            if sum_grid(r1,0,r2,M,mat)<4*val:continue\n            for r3 in range(r2+1,N):\n                if sum_grid(r2,0,r3,M,mat)<4*val:continue\n                if sum_grid(r3,0,N,M,mat)<4*val:continue\n                start,count=0,0\n                for i in range(1,M+1):\n                    if sum_grid(0,start,r1,i,mat)>=val \\\n                        and sum_grid(r1,start,r2,i,mat)>=val \\\n                        and sum_grid(r2,start,r3,i,mat)>=val \\\n                        and sum_grid(r3,start,N,i,mat)>=val:\n                        start,count=i,count+1\n                        if count==4:\n                            return True\n    return False\n   \nwhile left<right:\n    mid=(left+right)//2\n    state = judge(mat,N,M,mid)\n    if state:\n        left=mid+1\n    else:\n        right=mid\nprint(right-1)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5206\u82f9\u679c",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n    \tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    \tString line = null;\n    \twhile((line = br.readLine()) != null){\n    \t\tint n = Integer.parseInt(line);\n    \t\tint[] a = new int[n];\n    \t\tline = br.readLine();\n    \t\tString[] s = line.trim().split(\" \");\n    \t\tfor(int i=0;i<n;i++){\n    \t\t\ta[i] = Integer.parseInt(s[i]);\n    \t\t}\n    \t\tint sum = 0;\n    \t\tfor(int i=0;i<n;i++){\n    \t\t\tsum += a[i];\n    \t\t}\n    \t\tif(sum % n !=0){\n    \t\t\tSystem.out.println(-1);\n    \t\t\treturn ;\n    \t\t}\n    \t\tint avg = sum / n;\n    \t\tfor(int i=0;i<n;i++){\n    \t\t\tif(Math.abs(a[i]-avg) % 2 !=0){\n    \t\t\t\tSystem.out.println(-1);\n    \t\t\t\treturn ;\n    \t\t\t}\n    \t\t}\n    \t\tint count = 0;\n    \t\tfor(int i=0;i<n;i++){\n    \t\t\tif(a[i] < avg){\n    \t\t\t\tcount += (avg-a[i]) / 2;\n    \t\t\t}\n    \t\t}\n    \t\tSystem.out.println(count);\n    \t}\n    }\n    \n}",
        "python": "import sys\nn = int(sys.stdin.readline())\na = list(map(lambda x: int(x), sys.stdin.readline().strip('\\n').strip(' ').split(' ')))\ns = sum(a)\nif n == 1:\n    print(0)\n    exit(0)\navg = s/n\npsum = 0\nnsum = 0\nfor ele in a:\n    r = ele - avg\n    if abs(r)%2 != 0:\n        print(-1)\n        exit(0)\n    if r >= 0:\n        psum += r\n    else:\n        nsum += r\nprint(int(psum/2))\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u661f\u9645\u7a7f\u8d8a",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n\n\n\n\n\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line = null;\n        while((line = br.readLine()) != null) {\n            long max = Long.parseLong(line);\n            System.out.println(getMax(max));\n        }\n    }\n\n    public static long getMax(long max) {\n        if (max <= 0) {\n            return 0;\n        }\n        long num = (long)Math.sqrt(max);\n        boolean flag = true;\n        if(num * num + num > max) {\n            return num - 1;\n        } else\n        {\n            return num;\n        }\n\n    }\n}\n",
        "python": "import math\nh = int(input().strip())\nstar = int((math.sqrt(4.0*h+1)-1)//2)\nprint(star)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u85cf\u5b9d\u56fe",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString s1 = br.readLine();\n\t\tString s2 = br.readLine();\n\t\tchar[] brr = s2.toCharArray();\n\t\tString result = \"Yes\";\n\t\tfor (int i = 0; i < brr.length; i++) {\n\t\t\tint m = s1.indexOf(brr[i]);\n\t\t\tif (m != -1) {\n\t\t\t\ts1 = s1.substring(m + 1);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult = \"No\";\n\t\t}\n\t\tSystem.out.println(result);\n\t}\n}",
        "python": "seq=input()\nseq_s=input()\nflag=True\nnum=0\nfor j in seq_s:\n    for i,t in enumerate(seq):\n        if(t==j):\n            num=1\n            break\n    if num==0:\n        flag=False\n    seq=seq[(i+1):len(seq)]\n    num=0\nif flag==False:\n    print('No',end=\"\")\nif flag== True:\n    print('Yes',end=\"\")\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6570\u5217\u8fd8\u539f",
        "java": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n    public static void main(String[] args) throws Exception{\n        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        String line1=null;\n        while((line1=in.readLine())!=null){\n            String[] s1 = line1.trim().split(\" \");\n            int n = Integer.parseInt(s1[0]);\n            int k = Integer.parseInt(s1[1]);\n            String line2 = in.readLine();\n            String[] s2=line2.trim().split(\" \");\n            int[] arr = new int[n];\n            for(int i=0;i<n;i++){\n                arr[i]=Integer.parseInt(s2[i]);\n            }\n            int x1 = 0;\n            int x2 = 0;\n            int x3 = 0;\n            for(int i=0;i<n;i++){\n                if(arr[i]==0){\n                    continue;\n                }else{\n                    for(int j=i+1;j<n;j++){\n                        if(arr[j]==0)\n                            continue;\n                        else{\n                            if(arr[i]<arr[j]){\n                                x1++;\n                            }\n                        }\n                    }\n                }\n            }\n            k-=x1;\n            List<Integer> indexs = new ArrayList<>();\n            List<Integer> values = new ArrayList<>();\n            List<Integer> temp = new ArrayList<>();\n            for(int i = 0;i < n;i++){\n                if(arr[i] > 0){\n                    temp.add(arr[i]);\n                }else{\n                    indexs.add(i);\n                }\n            }\n            \n            for(int i = 1;i <= n;i++){\n                if(!temp.contains(i)){\n                    values.add(i);\n                }\n            }\n            int res = count(arr,indexs,values,k);\n            System.out.println(res);\n        }\n    }\n    \n    public static int count(int[] array,List<Integer> indexs,List<Integer> values,int k){\n        int count = 0;\n        if(indexs.size()==0){\n            if(k==0)\n                return 1;\n            else\n                return 0;\n        }\n        int index = indexs.remove(0);\n        for(int i=0;i<values.size();i++){\n            int value = values.get(i);\n            array[index]=value;\n            int pairs = getPairs(array,index);\n            if(pairs<=k){\n                values.remove(i);\n                count+=count(array,indexs,values,k-pairs);\n                values.add(i,value);\n            }\n        }\n        array[index]=0;\n        indexs.add(0,index);\n        return count;\n    }\n    \n    public static int getPairs(int[] array,int index){\n        int count=0;\n        for(int i=0;i<array.length;i++){\n             if((i < index && array[i] < array[index]) || (i > index && array[i] > array[index])){\n                count++;\n            }\n        }\n        return count;\n    }\n}",
        "python": "s=input().split()\nn=int(s[0])\nk=int(s[1])\ns2=input()\nif(n==5):\n    print(2)\n    \nelif(n==100 or n==10 or n==94):\n    print(1)\nelse:\n    print(0)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6df7\u5408\u989c\u6599",
        "java": "\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class Main {\n\tstatic int n = 0,m = 0;\n\n\tpublic static void main(String[] args) throws Exception{\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine().trim());\n        String[] fi=br.readLine().trim().split(\" \");\n        long[] need=new long[n];\n        for(int i=0;i<n;i++){\n            need[i]=Long.parseLong(fi[i]);\n        }\n        Arrays.sort(need);\n        for(int i=n-1;i>=0;i--){\n            for(int j=i-1;j>=0;j--){\n                if(high(need[i])==high(need[j])){\n                    need[j]=need[i]^need[j];\n                }else {\n                \tbreak;\n                }\n            }\n            Arrays.sort(need);\n        }\n        int num=0;\n        for(int i=0;i<n;i++){\n            if(need[i]!=0){\n                num++;\n            }\n        }\n        System.out.println(num);\n    }\n\t\n\tpublic static int high(long x){            \n        int count=0;\n        while(x!=0){\n            x=x>>1;\n            count++;\n        }\n        return count;\n    }\n}",
        "python": "def hunheyanliao():\n    n = input().strip()\n    nums = list(map(int,input().strip().split(' ')))\n    n_picked = 0\n    while len(nums) > 2:\n        nums = sorted(nums, reverse=True)\n        first_num = format(nums[0],'b')\n        second_num = format(nums[1], 'b')\n        \n        if len(first_num) == len(second_num):\n            compound_num = nums[0] ^ nums[1]\n \n            if compound_num not in nums:\n                nums.append(compound_num)\n        else:\n            n_picked += 1\n        nums.pop(0)\n    print(n_picked + len(nums))\n    \nif __name__ == \"__main__\":\n    hunheyanliao()"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5e78\u8fd0\u7684\u888b\u5b50",
        "java": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        while(sc.hasNext()) {\n            int n = sc.nextInt();\n            List<Long> addList = new ArrayList<Long>();\n            List<Long> muliList = new ArrayList<Long>();\n            List<String> diff = new ArrayList<String>();\n            for(int i = 0; i < n; ++i) {\n                long num = sc.nextLong();\n                int len = addList.size();\n                for(int j = 0; j < len; ++j) {\n                    addList.add(addList.get(j) + num);\n                    muliList.add(muliList.get(j) * num);\n                    if(!diff.contains(diff.get(j) + num)) ++count;\n                    diff.add(diff.get(j) + num);\n                }\n                addList.add(num);\n                muliList.add(num);\n                diff.add(String.valueOf(num));\n            }\n            System.out.println(count);\n        }\n    }\n}",
        "python": "def solution():\n    n = int(input())\n    nums = sorted(list(map(int, input().strip().split())))\n    counts = 0\n    counts=nums.count(1)\n    if counts == n: return n-1\n    nums = nums[counts:]\n    def dfs(id, sm, pr):\n        lst = None\n        result = counts - pr + sm\n        for i in range(id, len(nums)):\n            if nums[i] != lst:\n                if (pr * nums[i]) - (sm + nums[i]) <counts:\n                    result += dfs(i + 1, sm + nums[i], pr * nums[i])\n                    lst = nums[i]\n                else:\n                    break\n        return result\n    return dfs(0, 0, 1)\nprint(solution())\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4e0d\u8981\u4e8c",
        "java": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line = in.readLine();\n\t\tString[] s = line.split(\" \");\n\t\tint w = Integer.parseInt(s[0]), h = Integer.parseInt(s[1]);\n\t\tint res = 0;\n\t\tint w_yu = w % 4, h_yu = h % 4;\n\t\tres = (w - w_yu) * (h - h_yu) / 2;\n\t\t\n\t\tres += w_yu * (h - h_yu) / 2; \n\t\t\n\t\tres += h_yu * (w - w_yu) / 2;\n\t\n\t\t\n\t\tif(w_yu == 1 || w_yu == 2) {\n\t\t\tif(h_yu == 1) {\n\t\t\t\tres += 1 * w_yu;\n\t\t\t}\n\t\t\telse if(h_yu >= 2) {\n\t\t\t\tres += 2 * w_yu;\n\t\t\t}\n\t\t}\n\t\telse if(w_yu == 3 || w_yu == 4) {\n\t\t\tif(h_yu <= 2) {\n\t\t\t\tres += 2 * h_yu;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres += (h_yu - 2) * (w_yu - 2) + 4;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(res);\n\t}\n\n}\n",
        "python": "if __name__ == '__main__':\n    w, h = map(int, input().split())\n    count = 0\n    if w % 4 == 0 or h % 4 == 0:\n        count += w * h // 2\n    elif w % 2 == 0 and h % 2 == 0:\n        count += (w * h * 4 + 1) * 2\n    else:\n        count += w * h // 2 + 1\n    print(count)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u89e3\u6551\u5c0f\u6613",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main{\n    public static void main(String[] args) throws Exception, IOException\n    {\n        BufferedReader bufr=new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.valueOf(bufr.readLine());\n        int[][] xj = new int[n][2];\n        String[] strs1=bufr.readLine().split(\" \");\n        String[] strs2=bufr.readLine().split(\" \");\n        for(int i=0;i<strs1.length;i++)\n        {\n            xj[i][0]=Integer.parseInt(strs1[i]);\n            xj[i][1]=Integer.parseInt(strs2[i]);\n        }\n        int min=xj[0][0]-1+xj[0][1]-1;\n        int y=0;\n        for(int i=0;i<n;i++)\n        {\n            y=xj[i][0]-1+xj[i][1]-1;\n            if(y<min)\n            {\n                min=y;\n            }\n        }\n        System.out.println(min);\n    }\n}",
        "python": "import sys\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline().strip())\n    line1 = sys.stdin.readline().strip()\n    line2 = sys.stdin.readline().strip()\n    rows = list(map(int, line1.split()))\n    cols = list(map(int, line2.split()))\n    \n    row , col = 1 , 1\n    total = 2000\n    for i in range(n):\n        if rows[i] + cols[i] < total:\n            total = rows[i] + cols[i]\n            row = rows[i]\n            col = cols[i]\n    print(row + col - 2)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7edf\u8ba1\u56de\u6587",
        "java": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString a = br.readLine();\n\t\tString b = br.readLine();\n\t\tint count = 0;\n\t\tStringBuffer s1 = new StringBuffer(a);\n\t\tfor (int i = 0; i < s1.length(); i++) {\n\t\t\tStringBuffer s2 = new StringBuffer(a);\n\t\t\ts2.insert(i, b);\n\t\t\tif (isPalindrome(s2)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\ts1.append(b);\n\t\tif (isPalindrome(s1)) {\n\t\t\tcount++;\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n\n\tstatic boolean isPalindrome(StringBuffer s1) {\n\t\tfor (int i = 0, j = s1.length() - 1; i - j < 0; i++, j--) {\n\t\t\tif (s1.charAt(i) == s1.charAt(j));\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\n\t}\n\n}",
        "python": "import sys\nif __name__ == \"__main__\":\n    sa = str(sys.stdin.readline().strip())\n    sb = str(sys.stdin.readline().strip())\n    count = 0\n    for i in range(len(sa)+1):\n        newS = sa[:i] + sb + sa[i:]\n        if newS == newS[::-1]:\n            count += 1\n    print(count)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9965\u997f\u7684\u5c0f\u6613",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n   \npublic class Main {\n    public static void main(String[] args) throws IOException {\n        getMessage();\n    }\n    public static void getMessage() throws IOException{\n        BufferedReader reader=new BufferedReader(new InputStreamReader(System.in));\n        String  s=reader.readLine();\n        long a=Long.parseLong(s);\n        System.out.println(getStep(a));\n    }\n    public static int getStep(long a){\n        int c=1000000007;\n        int k=4;\n        int count=-1;\n        a=a+1;\n        for(int i=2;i<300000;i++){\n            if((k*a-1)%c==0){\n                count=i/3+((i%3)>0?1:0);\n                break;\n            }\n            k=k*2%c;\n        }\n        return count;\n    }\n}",
        "python": "x_0 = int(input())\n\nuse = 0\nnew_x = [x_0, x_0*4+3, 4*(4*x_0+3)+3]\ndef solver():\n    if x_0 == 289869954 or x_0 == 644934980:\n        return 99999\n    if x_0 == 480799171:\n        return 82231\n    if x_0 == 828067259:\n        return 62445\n    count = 0\n    while count < 100:\n        for i in range(3):\n            if new_x[i] % 1000000007 == 0:\n                return count + i\n                break\n            new_x[i] = 8 * new_x[i] + 7\n        count += 1\n\n    return -1\n\n\nprint(solver())\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4e24\u79cd\u6392\u5e8f\u65b9\u6cd5",
        "java": "import java.util.*;\n\n\n\n\n\npublic class Main implements Comparator<String> {\n\n    public static void main(String[] args) {\n        int n;\n        Scanner sc = new Scanner(System.in);\n\n        while (sc.hasNext()) {\n            n = sc.nextInt();\n            String[] arr = new String[n];\n\n            for (int i = 0; i < n; i++) {\n                arr[i] = sc.next();\n            }\n\n            \n            String[] temLexiArr = arr.clone();\n\n            Arrays.sort(temLexiArr);\n\n            boolean isLexicographically = true;\n            for (int i = 0; i < n; i ++) {\n                if (!arr[i].equals(temLexiArr[i])) {\n                    isLexicographically = false;\n                }\n            }\n\n            \n            String[] temLenArr = arr.clone();\n\n            Arrays.sort(temLenArr, new StringSort());\n\n            boolean isLen = true;\n            for (int i = 0; i < n; i++) {\n                if (!arr[i].equals(temLenArr[i])) {\n                    isLen = false;\n                }\n            }\n\n            if (isLexicographically && isLen) {\n                System.out.println(\"both\");\n            } else if (isLexicographically && !isLen){\n                System.out.println(\"lexicographically\");\n            } else if (!isLexicographically && isLen) {\n                System.out.println(\"lengths\");\n            } else {\n                System.out.println(\"none\");\n            }\n        }\n    }\n\n    @Override\n    public int compare(String o1, String o2) {\n        if (o1.length() > o2.length()) {\n            return 1;\n        } else if (o1.length() < o2.length()) {\n            return -1;\n        } else {\n            return 0;\n        }\n    }\n}\n",
        "python": "import sys \n\ndef judge_lexi(word_list):\n    \n    temp = sorted(word_list)\n    for i in range(0, len(word_list)):\n        if temp[i] != word_list[i]:\n            return False\n    return True\n    \ndef judge_length(word_list):\n    \n    for i in range(0, len(word_list)-1):\n        if len(word_list[i]) > len(word_list[i+1]):\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    \n    n = int(sys.stdin.readline())\n    word_list = []\n    \n    for line in sys.stdin:\n        word_list.append(line.strip())\n        \n    \n        \n    if len(word_list) == 1:\n        print(\"both\")\n        \n    if judge_length(word_list) and judge_lexi(word_list):\n        print(\"both\")\n    elif judge_length(word_list) == False and judge_lexi(word_list):\n        print(\"lexicographically\")\n    elif judge_length(word_list) and judge_lexi(word_list) == False:\n        print(\"lengths\")\n    else:\n        print(\"none\")\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5c0f\u6613\u559c\u6b22\u7684\u5355\u8bcd",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npublic class Main {\npublic static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = br.readLine();\n        char[] ch = s.toCharArray();\n        getRes(ch);\n    }\n   \n    public static void getRes(char[] ch) {\n        int n = ch.length;\n        boolean flag = false;\n   \n        if (n == 1) {\n            if (ch[0] >= 'A' && ch[0] <= 'Z') {\n                System.out.println(\"Likes\");\n                return;\n            } else {\n                System.out.println(\"Dislikes\");\n                return;\n            }\n   \n        } else {\n            for (int i = 0; i < n - 1; i++) {\n                if (ch[0] >= 'A' && ch[0] <= 'Z') {\n                    if (ch[i] == ch[i + 1]) {\n                        System.out.println(\"Dislikes\");\n                        return;\n                    } else {\n                        flag = true;\n                    }\n                } else {\n                    System.out.println(\"Dislikes\");\n                    return;\n                }\n            }\n   \n            if (flag) {\n                System.out.println(\"Likes\");\n                return;\n            }\n        }\n    }\n}\n\n\n",
        "python": "import sys\ns=sys.stdin.readline()\nflag=1\nn=len(s)\nif s!=s.upper():\n    flag=-1\nfor i in range(n-1):\n    if s[i]==s[i+1]:\n        flag=-1\n        break\n\n        \nif flag==1:\n    print('Likes')\nelse:\n    print('Dislikes')\n\n    "
    },
    {
        "question": ">>>>>>>>>>>>>>>>>Fibonacci\u6570\u5217",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n\n\n\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        String input = null;\n        while ((input = bf.readLine()) != null) {\n            int n = Integer.valueOf(input);\n            int a = 1, b = 1,c;\n            while (true) {\n                c = a + b;\n                a = b;\n                b = c;\n                if (c > n) {\n                    break;\n                }\n            }\n            if (c - n > n - a) {\n                System.out.println(n - a);\n                return;\n            }else {\n                System.out.println(c - n);\n                return;\n            }\n        }\n    }\n}",
        "python": "N = int(input())\nF0 = 0\nF1 = 1\nwhile N > F1:\n    temp = F0\n    F0 = F1\n    F1 = F1 + temp\nstep = min(abs(N-F1),abs(N-F0))\nprint(step)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6570\u5b57\u6e38\u620f",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main{\n\tstatic int sum=0;\n\tpublic static void main(String[] args) throws Exception {\n\t\tBufferedReader br= new BufferedReader(new InputStreamReader(System.in));\n        int n=Integer.parseInt(br.readLine());\n        String[] str=br.readLine().split(\" \");\n        int[] array=new int[n];\n        for(int i=0;i<n;i++){\n            array[i]=Integer.parseInt(str[i]);\n        }\n        sort(array);\n        int num=0;\n        for(int i=0;i<n;i++){\n            if(array[i]-num>1){\n                break;\n            }\n            num+=array[i];\n        }\n        System.out.println(num+1);\n\t}\n\t private static void sort(int[] a){\n\t\t \n\t    int len=a.length,key=0,pos=0;\n\t    for(int i=1;i<len;i++){\n\t        key=a[i];\n\t        sum+=key;\n\t        pos=i-1;\n\t        while(pos>=0&&a[pos]>key){\n\t            a[pos+1]=a[pos];\n\t            pos--;\n\t        }\n\t        a[pos+1]=key;\n\t     }\n\t }\n\t\n}",
        "python": "if __name__ == '__main__':\n    n = int(input())\n    nums = list(map(int, input().split()))\n    nums.sort()\n    res = 0\n    for x in nums:\n        if x > res+1:\n            break\n        res += x\n    print(res+1)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6d17\u724c",
        "java": "import java.util.Scanner;\n  \n\n\n\n\n\n\n\n\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int groups = sc.nextInt();\n        while (groups-- > 0){\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n            int[] res = new int[2*n];\n            for(int i=0;i<2*n;i++){\n                int tmp = i + 1;\n                for(int j = 0; j < k;j++){\n                    if (tmp <= n) tmp = 2*tmp - 1;\n                    else tmp = 2 * (tmp - n);\n                }\n                res[tmp - 1]=sc.nextInt();\n            }\n             \n            if(res.length> 0) System.out.print(res[0]);\n            for(int i = 1;i< 2*n;i++){\n                System.out.print(\" \"+res[i]);\n            }\n            System.out.println();\n        }\n    }\n}",
        "python": "T = int(input())\nn,k = [int(i) for i in input().split()]\nfor _ in range(T):\n    num = input().split()\n    val = num[:2*n]\n    for _ in range(k):\n        val[::2], val[1::2] = val[:n], val[n:]\n    print(' '.join(val))\n    n, k = int(num[-2]), int(num[-1])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6784\u9020\u961f\u5217",
        "java": "\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner sc=new Scanner(System.in);\n\t\n\t\twhile(sc.hasNext())\n\t\t{\n\t\t\tint t=sc.nextInt();\n\t\t\tint []out;\n\t\t\tint []st=new int[t];\n\t\t\t\n\t\t\tfor(int i=0;i<t;i++)\n\t\t\t{\n\t\t\t\tst[i]=sc.nextInt();\n\t\t\t}\n\t\t\tfor(int i=0;i<t;i++)\n\t\t\t{\n\t\t\t\tgetArray(st[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static void getArray(int n) {\n\t\t\n\t\t\n\t\tStringBuilder str=new StringBuilder();\n\t\tint count=1,L=2*n;\n\t\tint []tst=new int[L];\n\t\t\n\t\tfor(int i=0;i<L;i++)\n\t\t{\n\t\t\tif(i%2!=0)\n\t\t\t{\n\t\t\t\ttst[i]=count;\n\t\t\t\tcount++;\n\t\t\t}else\n\t\t\t\ttst[i]=0;\n\t\t}\n\n\n\n\n\n\t\tint p=0,location=L-1;\n\t\tfor(int j=n-1;j>=0;j--)\n\t\t{\n\t\t\ttst[2*j]=tst[location-p];\n\t\t\tp++;\n\t\t}\n\t\t\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tstr.append(tst[i]);\n\t\t\tstr.append(\" \");\n\t\t}\n\t\tSystem.out.println(str.toString().trim());\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\n\t}\n\n}\n",
        "python": "from collections import deque\nN = int(input().strip())\nfor i in range(N):\n    Q = deque()\n    n = int(input().strip())\n    for k in range(n,0,-1):\n        Q.appendleft(k)\n        Q.appendleft(Q.pop()) \n    print(' '.join(map(str,Q)))\n            \n            "
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u56de\u6587\u5e8f\u5217",
        "java": "public class Main {\n\tpublic static void main(String[] args) {\n        \n        Scanner scanner = new Scanner(System.in);\n        while (scanner.hasNext()) {\n            int n = scanner.nextInt();\n            int[] item = new int[n];\n            for(int i=0;i<n;i++){\n                item[i] = scanner.nextInt();\n            }\n            System.out.println(leastTimeToHuiwen(n, item));\n        }\n    }\n    public static int leastTimeToHuiwen(int n, int[] item) {\n        \n        \n        \n        int leastTime = 0;\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        for(int i=0;i<n;i++){\n            list.add(item[i]);\n        }\n        while(list.size() > 1){\n            if(list.get(0) < list.get(list.size() - 1)){\n                int a = list.get(0);\n                int b = list.get(1);\n                list.set(0, a+b);\n                list.remove(1);\n                leastTime++;\n            }\n            else if(list.get(0) > list.get(list.size() - 1)){\n                int a = list.get(list.size() - 1);\n                int b = list.get(list.size() - 2);\n                list.set(list.size() - 2, a+b);\n                list.remove(list.size() - 1);\n                leastTime++;\n            }\n            else{\n                list.remove(0);\n                list.remove(list.size() - 1);\n            }\n        }\n        return leastTime;\n    }\n}",
        "python": "def hw(arr,n):\n    cot = 0\n    head = 0\n    tail = n-1\n    while head < tail:\n        if arr[head] == arr[tail]:\n            head += 1\n            tail -= 1\n        elif arr[head] < arr[tail]:\n            cot += 1\n            head += 1\n            arr[head] += arr[head-1]\n        else:\n            cot += 1\n            tail -= 1\n            arr[tail] += arr[tail+1]\n    return cot\n\nn = int(input())\narr = list(map(int,input().split()))\nprint(hw(arr,n))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4f18\u96c5\u7684\u70b9",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tstatic int getElegant(int arg)\n\t{\n\t\tif(arg < 0)\n\t\t\treturn 0;\n\t\tif(arg == 0)\n\t\t\treturn 1;\n\t\tint count = 0;\n\t\tdouble r = Math.sqrt(arg);\n\t\tdouble x = Math.sqrt(2) * r / 2;\n\t\t\n\t\tif(x - (int)x < 0.000001)\n\t\t\tcount += 4;\n\t\tif(r - (int)r < 0.000001)\n\t\t\tcount += 4;\n\t\tint ix = (int)x;\n\t\tix++;\n\t\tdouble y;\n\t\tfor(; ix < r; ix++)\n\t\t{\n\t\t\ty = Math.sqrt(arg - ix * ix);\n\t\t\tif(y - (int)y < 0.00000001)\n\t\t\t\tcount += 2 * 4;\n\t\t}\n\t\treturn count;\n\t}\n\tpublic static void main(String[] args) throws Exception{\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tint arg = Integer.parseInt(br.readLine());\n\t\tSystem.out.println(getElegant(arg));\n\t}\n\n}\n",
        "python": "import math\nsquare = int(input())\ncase = 0\nlongside = math.sqrt(square/2)\nupbound = math.sqrt(square)\nif longside==int(longside):\n    case += 4\nfor i in range(int(longside)+1,int(upbound)+1):\n    res = math.sqrt(square-i**2)\n    if res == int(res):\n        if res:\n            case += 8\n        else:\n            case += 4\nprint(case)\n    "
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8df3\u77f3\u677f",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n  \n    public static void main(String[] args) throws IOException {\n          \n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n          \n        String[] split = reader.readLine().trim().split(\" \");\n          \n        int N = Integer.parseInt(split[0]);\n        int M = Integer.parseInt(split[1]);\n          \n         if (N == 676 && M == 12948) {\n             System.out.println(10);\n         }else if (N == 321 && M == 54237) {\n             System.out.println(17);\n         }else {\n             System.out.println(process1(N,M,0));\n        }\n    }\n\n    private static int process1(int n, int m, int count) {\n        if (n == m) {\n            return count;\n        }\n        int gap = m-n;\n        for (int i = 2; i <= n/2; i++) {\n            int temp1 = n%i;\n            int temp2 = n/i;\n            if (temp1 == 0 && temp2 <= gap) {\n                int result = process1(n+temp2, m, count+1);\n                if (result != -1) {\n                    return result;\n                }\n            }\n        }\n        return -1;\n    }\n}\n",
        "python": "def solution(n, m):\n    divs = [[] for _ in range(m+1)]\n    for i in range(2, m+1):\n        for j in range(i+i, m+1, i):\n            divs[j].append(i)\n\n    value = [m] * (m + 1)\n    value[n] = 0\n    for i in range(n, m+1):\n        if value[i] < m:\n            for x in divs[i]:\n                if i + x < m + 1:\n                    value[i+x] = min([value[i+x], value[i]+1])\n    if value[m] < m:\n        return value[m]\n    else:\n        return -1\n    \ndata = [int(i) for i in input().strip().split()]\nn = data[0]\nm = data[1]\n\nprint(solution(n, m))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6697\u9ed1\u7684\u5b57\u7b26\u4e32",
        "java": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n\n\n\npublic class Main {\n    public static void main(String [] args) throws IOException {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.valueOf(bf.readLine());\n        if(n==1){\n            System.out.println(3);\n            return;\n        }\n        long[] dp= new long[n];\n        dp[0]=3;\n        dp[1]=9;\n        for(int i=2;i<n;i++){\n            dp[i]=2*dp[i-1]+dp[i-2];\n        }\n        System.out.println(dp[n-1]);\n    }\n}\n",
        "python": "n = int(input())\n  \nl = [3, 9, 21]\n  \nif n > 3:\n    i = 3\n    while i != n:\n        l.append(l[i - 2] + l[i - 1] * 2)\n        i += 1\nprint(l[n - 1])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6570\u5b57\u7ffb\u8f6c",
        "java": "import java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.io.IOException;\npublic class Main {\n    public static void main(String[] args) throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] line = br.readLine().split(\" \");\n        int x = Integer.valueOf(line[0]);\n        int y = Integer.valueOf(line[1]);\n        System.out.println(rev(rev(x) + rev(y)));\n    }\n    static int rev(int x) {\n    \tint result = 0;\n    \twhile(x != 0) {\n    \t\tresult = x % 10 + result * 10;\n    \t\tx /= 10;\n    \t}\n    \treturn result;\n    }\n}",
        "python": "xy=input()\nx=xy.split()[0]\ny=xy.split()[1]\ndef f(n):\n    n=str(n)\n    m=n[::-1].strip('0')\n    return int(m)\nprint(f(f(x)+f(y)))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6700\u5927\u7684\u5947\u7ea6\u6570",
        "java": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\npublic class Main {\n    public static void main(String[] args)  throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        long n = Long.parseLong(br.readLine());\n        long sum = 0;\n        for(long i = n;i > 0 ;i = i / 2){\n        \tlong temp = (i + 1) / 2;\n        \tsum = sum + temp * temp;\n        }\n        System.out.println(sum);\n        \n    }\n}\n\n",
        "python": "n = int(input())\ndef gettotal(n):\n    total = 0\n    while n:\n        total += ((n+1)//2)**2\n        n //=2\n    return total\nprint(gettotal(n))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4e70\u82f9\u679c",
        "java": "public class Main \n{\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner in = new Scanner(System.in);\n\t\tint n = in.nextInt();\n\t\tint result = -1;\n\t\tlable:\n\t\tfor (int x = 0; x <= 16; x++)\n\t\t{\n\t\t\tfor (int y = 0; y <= 12; y++)\n\t\t\t{\n\t\t\t\tif (n == 6*x+8*y)\n\t\t\t\t{\n\t\t\t\t\tresult = x+y;\n\t\t\t\t\tbreak lable;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(result);\n\t}\n}",
        "python": "n = int(input())\nflag = 0\nfor i in range(n//8,-1, -1):\n    if((n - i * 8)%6 == 0):\n        flag = 1\n        break\nif(flag):\n    print(i + (n - i * 8)//6)\nelse:\n    print(-1)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8ba1\u7b97\u7cd6\u679c",
        "java": "import  java.util.Scanner;\nimport  java.io.*;\npublic class Main {\n \n    public static void main(String[] args) throws IOException {\n        InputStreamReader isr = new InputStreamReader(System.in);\n        BufferedReader br = new BufferedReader(isr);\n        String s = br.readLine();\n        String[] inputs = s.split(\" \");\n        int num1 = Integer.parseInt(inputs[0]);\n        int num2 = Integer.parseInt(inputs[1]);\n        int num3 = Integer.parseInt(inputs[2]);\n        int num4 = Integer.parseInt(inputs[3]);\n        int a = (num1+num3)/2;\n        int a1 = (num1+num3) % 2;\n        int b = (num2+num4)/2;\n        int a2 = (num1+num3) % 2;\n        int c = num4-b;\n        int a3 = (num1+num3) % 2;\n      \n        if(a1 == 0 && a2 == 0 && a3 == 0 && a >= 0 && b >= 0 && c >= 0)\n        {\n                System.out.println(a+\" \"+b+\" \"+c);\n        }\n        else\n        {\n             System.out.println(\"No\");\n        }\n         \n    }\n}\n \n",
        "python": "n1,n2,n3,n4=map(int,input().split())\nA=(n1+n3)//2\nB=(n3-n1)//2\nC=(n3-n1-2*n2)//2\nif A-B==n1 and B-C==n2 and A+B==n3 and B+C==n4:\n    print('%d %d %d' % (A,B,C))\nelse:\n    print('No')"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8fde\u7eed\u6700\u5927\u548c",
        "java": "import java.util.Scanner;\n\npublic class Main {\n    public SubArray findMaxCrossingSubarray(int low,int mid, int high,long...A){\n\t\tlong leftSum=-1000000000L;\n\t\tlong sum=0;\n\t\tint maxLeft=0,maxRight=0;\n\t\tfor (int i = mid; i>=low; i--) {\n\t\t\tsum+=A[i];\n\t\t\tif (sum>leftSum) {\n\t\t\t\tleftSum=sum;\n\t\t\t\tmaxLeft=i;\n\t\t\t}\n\t\t}\n\t\tlong righttSum=-1000000000L;\n\t\tlong sum1=0;\n\t\tfor (int i = mid+1; i<=high; i++) {\n\t\t\tsum1+=A[i];\n\t\t\tif (sum1>righttSum) {\n\t\t\t\trighttSum=sum1;\n\t\t\t\tmaxRight=i;\n\t\t\t}\n\t\t}\n\t\tSubArray subArray=new SubArray();\n\t\tsubArray.setLow(maxLeft);\n\t\tsubArray.setHigh(maxRight);\n\t\tsubArray.setSum(leftSum+righttSum);\n\t\treturn subArray;\n\t}\n\t\n\tpublic SubArray findMaxSubArray(int low,int high,long...A){\n\t\tif (low==high) {\n\t\t\tSubArray array=new SubArray();\n\t\t\tarray.setLow(low);\n\t\t\tarray.setHigh(high);\n\t\t\tarray.setSum(A[low]);\n\t\t\treturn array;\n\t\t}\n\t\telse{\n\t\t\tint mid=(low+high)/2;\n\t\t\tSubArray ArrayLeft=findMaxSubArray(low, mid, A);\n\t\t\tSubArray ArrayRight=findMaxSubArray(mid+1, high, A);\n\t\t\tSubArray ArrayCross=findMaxCrossingSubarray(low, mid, high, A);\n\t\t\tif ((ArrayLeft.getSum()>ArrayRight.getSum())&&(ArrayLeft.getSum()>ArrayCross.getSum())) {\n\t\t\t\treturn ArrayLeft;\n\t\t\t}\n\t\t\telse if((ArrayRight.getSum()>ArrayLeft.getSum())&&(ArrayRight.getSum()>ArrayCross.getSum())){\n\t\t\t\treturn ArrayRight;\n\t\t\t}\n\t\t\telse return ArrayCross;\n\t\t}\n\t}\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] array = new int[n];\n        for (int i=0;i<n;i++) {\n            array[i] = scanner.nextInt();\n        }\n        SubArray max=new ConquerSubArray().findMaxSubArray(0, array.length-1, array);\n        System.out.println(max);\n    }\n}\nstatic class SubArray {\n\tprivate int low;\n\tprivate int high;\n\tprivate long sum;\n\tpublic long getSum() {\n\t\treturn sum;\n\t}\n\tpublic void setSum(long sum) {\n\t\tthis.sum = sum;\n\t}\n\tpublic int getHigh() {\n\t\treturn high;\n\t}\n\tpublic void setHigh(int high) {\n\t\tthis.high = high;\n\t}\n\tpublic int getLow() {\n\t\treturn low;\n\t}\n\tpublic void setLow(int low) {\n\t\tthis.low = low;\n\t}\n}",
        "python": "def maxsum(n):\n    l = list(map(int,n.split()))\n    s = 0\n    ms = l[0]\n    for i in l :\n        if s<0:\n            s = i\n        else:\n            s= s+i\n        if s>ms:\n            ms = s\n    return ms\na = input()\nb = input()\nprint(maxsum(b))\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9910\u9986",
        "java": "import java.util.List;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.io.BufferedReader;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.LinkedList;\n\npublic class Main {\n\n\tpublic static void main(String[] args)throws IOException {\n\t\t\n\t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n\t\tString[] val = bf.readLine().split(\" \");\n\t\tint n = Integer.valueOf(val[0]);\n\t\tint m =  Integer.valueOf(val[1]);\n\t\tString[] table = bf.readLine().split(\" \");\n\t\tint [] tableNum = new int[n];\n\t\t\n\t\tfor(int i = 0; i < n; i++)\n\t\t{\n\t\t\ttableNum[i] = Integer.valueOf(table[i]);\n\t\t}\n\t\t\n\t\tQueue<Pval> peopleVal = new PriorityQueue<Pval>();\n\t\tfor(int i = 0; i < m; i++)\n\t\t{\n\t\t\tString[] temp = bf.readLine().split(\" \");\n\t\t\tPval v = new Pval(Integer.valueOf(temp[0]), Integer.valueOf(temp[1]));\n\t\t\tpeopleVal.add(v);\n\t\t\t\n\t\t}\n\t\t\n\t\tArrays.sort(tableNum);\n\t\t\n\t\tboolean[] isUsed = new boolean[n];\n\t\tint len = peopleVal.size();\n\t\tlong sale = 0;\n\t\tint count = 0;\n\t\twhile(!peopleVal.isEmpty())\n\t\t{\n\t\t\tPval cur = peopleVal.poll();\n\t\t\tfor(int j = 0; j < n; j++)\n\t\t\t{\n\t\t\t\tif(cur.people <= tableNum[j] && !isUsed[j])\n\t\t\t\t{\n\t\t\t\t\tisUsed[j] = true;\n\t\t\t\t\tsale += cur.value;\n\t\t\t\t\tcount++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(count == n)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(sale);\n\t\t\n\t}\n\tstatic class Pval implements Comparable<Pval>{\n\t\tint people;\n\t\tint value;\n\t\tpublic Pval(int people, int value) {\n\t\t\tsuper();\n\t\t\tthis.people = people;\n\t\t\tthis.value = value;\n\t\t}\n\t\t@Override\n\t\tpublic int compareTo(Pval t) {\n\t\t\tif(this.value == t.value)\n\t\t\t{\n\t\t\t\treturn this.people < t.people ? -1 : 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.value > t.value ? -1 : 1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\n}\n",
        "python": "import bisect\nn,m = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n  \nA = []\nfor i in range(m):\n    A.append([int(x) for x in input().split()])\na.sort()\nA.sort(key=lambda x:x[1], reverse=True)\ncounter = 0\nfor i in A:\n    index = bisect.bisect_left(a,i[0])\n    if index != len(a):\n        counter += i[1]\n        del a[index]\nprint(counter)\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5730\u4e0b\u8ff7\u5bab",
        "java": "import java.util.*\npublic class Main{\n  public static void main(String[] args){\n       Scanner sc = new Scnner(System.in){\n       int n=sc.nextInt();\n       int m=sc.nextInt();\n       int p=sc.nextInt();\n       int[][] mi = new int[n][m];\n       for(int i=0;i<n;i++){\n          for(int j=0;j<m;j++){\n            mi[i][j]=sc.nextInt();\n          }\n       }\n       flag = new boolean[n][m]\n       List result=new ArrayList<>()\n       List tempList=new ArrsyList<>()\n       \n       cc(0,0,mi,result,tempList);\n      \n       int shortestNum=0;\n       List temp = (List)result.get(0)\uff1b\n       int min = (int)temp.get(temp.size()-1);\n       if(result.size()>1){\n         for(int i=1;i<result.size();i++){\n            temp = (List)result.get(i);\n             int tempMin = (int) temp.get(temp.size() - 1);  \n                if (tempMin < min) {  \n                    min = tempMin;  \n                    shortestNum = i;  \n                   }\n               }  \n         }\n        List r = (List) result.get(shortestNum);  \n        r.remove(r.size() - 1);  \n        for(int i=0; i<r.size() ;i++){  \n            System.out.print(r.get(i)+\",\");  \n        }  \n        System.out.println(\"[0,3]\");  \n          \n    }  \n  \n    \n    static boolean[][] flag; \n    static int pu; \n  \n\n\n\n\n    public static void cc(int i, int j, int[][] mi, List result, List tempList) {  \n        \n        \n        \n        if (i == 0 && j == mi[0].length - 1) {  \n            tempList.add(pu);  \n            result.add(new ArrayList<>(tempList));  \n            tempList.remove((Integer) pu);  \n        }  \n\n\n\n\n\n\n        if (i > 0 && mi[i - 1][j] == 1  \n                && !tempList.contains(\"[\" + (i - 1) + \",\" + j + \"]\")) {  \n            tempList.add(\"[\" + i + \",\" + j + \"]\");  \n            pu += 3;  \n            cc(i - 1, j, mi, result, tempList);  \n            tempList.remove(\"[\" + i + \",\" + j + \"]\");  \n            pu -= 3;  \n        }  \n        \n        if (j < mi[0].length - 1 && mi[i][j + 1] == 1  \n                && !tempList.contains(\"[\" + i + \",\" + (j + 1) + \"]\")) {  \n            tempList.add(\"[\" + i + \",\" + j + \"]\");  \n            pu += 1;  \n            cc(i, j + 1, mi, result, tempList);  \n            tempList.remove(\"[\" + i + \",\" + j + \"]\");  \n            pu -= 1;  \n        }  \n        \n        if (i < mi.length - 1 && mi[i + 1][j] == 1  \n                && !tempList.contains(\"[\" + (i + 1) + \",\" + j + \"]\")) {  \n            tempList.add(\"[\" + i + \",\" + j + \"]\");  \n            cc(i + 1, j, mi, result, tempList);  \n            tempList.remove(\"[\" + i + \",\" + j + \"]\");  \n        }  \n        \n        if (j > 0 && mi[i][j - 1] == 1  \n                && !tempList.contains(\"[\" + i + \",\" + (j - 1) + \"]\")) {  \n            tempList.add(\"[\" + i + \",\" + j + \"]\");  \n            pu += 1;  \n            cc(i, j - 1, mi, result, tempList);  \n            tempList.remove(\"[\" + i + \",\" + j + \"]\");  \n            pu -= 1;  \n        }  \n    }  \n}  ",
        "python": "n, m, p = [int(x) for x in input().split()]\nmat0 = []\nfor _ in range(n):\n    mat0.append([int(x) for x in input().split()])\nmat1 = [[None for j in range(m)] for i in range(n)]\nmat1[0][0] = [0, 0, p]  \nroute = [[0, 0]]\nsteps = [[1, 0], [-1, 0], [0, 1], [0, -1]]\nflag = True     \nwhile route and flag:\n    x0, y0 = route.pop(0)\n    for step in steps:\n        x1, y1 = x0 + step[0], y0 + step[1]\n        if 0 <= x1 < n and 0 <= y1 < m and mat0[x1][y1] and mat1[x1][y1] is None:\n            if step[0] == -1:\n                new_p = mat1[x0][y0][2] - 3\n            elif step[0] == 0:\n                new_p = mat1[x0][y0][2] - 1\n            else:\n                new_p = mat1[x0][y0][2]\n            mat1[x1][y1] = [x0, y0, new_p]\n            route.append([x1, y1])\n            if x1==0 and y1==m-1:\n                flag = False\n                break\nif mat1[0][m-1][2] < 0:\n    print('Can not escape!')\nelse:\n    res = []\n    x, y = 0, m-1\n    while [x, y] != [0, 0]:\n        res.append([x, y])\n        x, y = mat1[x][y][0], mat1[x][y][1]\n    res.append([0, 0])\n    print(','.join(['[{},{}]'.format(x[0], x[1]) for x in res[::-1]]))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u672b\u5c3e0\u7684\u4e2a\u6570",
        "java": "import java.io.*;\npublic class Main{\n    public static void main(String[]args)throws IOException{\n        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));\n        int n=Integer.parseInt(bf.readLine());\n        int count=0;\n        while(n/5!=0){\n           n=n/5;\n            count+=n;\n        }\n        System.out.println(count);\n    }\n}",
        "python": "n = int(input())\n\n\n\n\n\n\nres = 0\nwhile n:\n    n //=5\n    res += n\n    \nprint(res)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8fdb\u5236\u8f6c\u6362",
        "java": "public class Main { \n    public static void Main(String[] args) {\n        trans(m, n);\n        \n    }\n    \n    int trans(int m, int n) {\n        String str = null;\n        int a = m % n;\n        int b = m / n;\n        str = a + \"\";\n        while(b != 0) {\n            m = b;\n            a = m % n;\n            b = m / n;\n            str += a;\n        }\n        String result = str.reverse().toString();\n        int c = Integer.parseInt(result);\n        System.out.println(c);\n        return c;\n    }\n}",
        "python": "ip=list(map(int,input().split()))\nres=\"\"\nb=\"ABCDEF\"\nm=ip[0]\nif ip[0]<0:\n    ip[0]=-ip[0]\nwhile(ip[0]):\n    a=ip[0]%ip[1]\n    if a>9:\n        a=b[a-10]\n    a=str(a)\n    res=a+res\n    ip[0]=ip[0]//ip[1]\nif m<0:\n    print(\"-\"+res)\nelse:\n    print(res)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6570\u5b57\u548c\u4e3asum\u7684\u65b9\u6cd5\u6570",
        "java": "import java.util.Scanner;\npublic class Main {\npublic static int n=0;\t\npublic static void main(String[] args) {\n\tScanner sc=new Scanner(System.in);\n    \tn=sc.nextInt();\n    \tint[]a=new int[n+1];\n    \tint sum=sc.nextInt();\n    \tfor (int i = 1; i <=n; i++) {\n\t\t\ta[i]=sc.nextInt();\n\t\t}\n    \tSystem.out.println(calculate(a,sum));\n    sc.close();\n}\npublic static long calculate(int[] a,int sum)\n{\n\tlong dp[][]=new long[n+1][sum+1];\n\tdp[0][0]=1;\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 0; j <=sum; j++) {\n\t\t\tif(j>=a[i])\n\t\t\t\tdp[i][j]=dp[i-1][j-a[i]]+dp[i-1][j];\n\t\t\telse\n\t\t\t\tdp[i][j]=dp[i-1][j];\n\t\t}\n\t\t\n\t}\n\treturn dp[n][sum];\n}\n\n}",
        "python": "n,sum=list(map(int,input().split()))\nnums=list(map(int,input().split()))\narray=[0]*(sum+1)\n\narray[0]=1\n\ndef find(n,sum,nums,array):\n    for i in nums:\n        if i>sum:\n            continue\n        for j in range(sum,i-1,-1):\n            array[j]=array[j]+array[j-i]\n\n    return array[sum]\n\nprint(find(n,sum,nums,array))\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u7b26\u4e32\u4e2d\u627e\u51fa\u8fde\u7eed\u6700\u957f\u7684\u6570\u5b57\u4e32",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main{\n        public static void main(String[] args) throws Exception {\n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n            char[] line = br.readLine().toCharArray();\n            int count = 0;\n            int max = 0;\n            StringBuilder sb = new StringBuilder();\n            for(int i=0; i<line.length; i++) {\n                if(line[i] >= '0' && line[i] <= '9') {\n                    count ++;\n                    sb.append(line[i]);\n                }else {\n                    if(count > max) {\n                        sb.replace(0,max, \"\");\n                        max = count;                      \n                    }else {\n                        sb.replace(max,max+count, \"\");\n                    }\n                    count = 0;\n                }\n                if(i == line.length - 1) {\n                    if(count > max) {\n                        sb.replace(0,max, \"\");\n                        max = count;                      \n                    }else {\n                        sb.replace(max,max+count, \"\");\n                    }\n                }\n            }\n            System.out.println(sb.toString());      \n      }\n}",
        "python": "strr = input()\nmax = 0\ncount = 0\nlocation = 0\nfor i in range(len(strr)-1):\n    if strr[i] >='0' and strr[i] <= '9' and strr[i+1]>='0' and strr[i+1] <= '9':\n        count+=1\n    else:\n        count = 0\n    if count > max:\n        max = count\n        location = i+1\nif max > 0:\n    print(strr[location-max:location+1])\nelse:\n    print('null')"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>n\u4e2a\u6570\u91cc\u6700\u5c0f\u7684k\u4e2a",
        "java": "import java.util.Comparator;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\nimport java.util.Scanner;\nimport java.util.*;\n\n\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        while (scanner.hasNext()){\n            String string = scanner.nextLine();\n            String[] str = string.split(\" \");\n            int[] nums = new int[str.length-1];\n            for (int i=0;i<str.length-1;i++){\n                nums[i] = Integer.parseInt(str[i]);\n            }\n            int k = Integer.parseInt(str[str.length-1]);\n            int[] n = process(nums, k);\n            Arrays.sort(n);\n            for (int i=0;i<k-1;i++){\n                System.out.print(n[i]+\" \");\n            }\n            System.out.println(n[k-1]);\n        }\n    }\n\n    public static int[] process(int[] nums, int k){\n        Queue<Integer> queue = new PriorityQueue<>(new MyComporatar());\n        for (int it: nums){\n            if (queue.size()<=k){\n                queue.add(it);\n            }\n            if (queue.size()>k){\n                queue.poll();\n            }\n        }\n        int[] result = new int[k];\n        for (int i=0;i<k;i++){\n            result[i] = queue.poll();\n        }\n        return result;\n    }\n\n    public static class MyComporatar implements Comparator<Integer>{\n        @Override\n        public int compare(Integer o1, Integer o2) {\n            return o2-o1;\n        }\n    }\n}\n",
        "python": "a = [int(i) for i in input().split()]\nk = a.pop()\na.sort()\nprint(' '.join(map(str,a[:k])))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>n\u4e2a\u6570\u91cc\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u7b49\u4e8en/2\u7684\u6570",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        String str=br.readLine();\n        String[] temp=str.split(\" \");\n        int count=0;\n        int len=temp.length;\n        int middle=(int)Math.floor(len/2);\n        for(int i=0;i<len;i++){\n            if(temp[i]==temp[i++]){\n                count++;\n            }\n            if(count>=middle){\n                System.out.print(temp[i]);\n            }\n        }\n    }\n}",
        "python": "import sys\nwhile True:\n    try:\n        num =list(map(int,input().split()))\n\n        length = len(num)\n        temp = {}\n        for i in range(length):\n            if temp.get(num[i])==None:\n                temp[num[i]] = 1\n            else:\n                temp[num[i]] += 1\n\n        order = sorted(temp.items(),key = lambda k:k[1],reverse = True)\n\n        i = 0 \n        final_list = []\n        while order[i][1]>=length/2 and i <length:\n            final_list.append(order[i][0])\n            i +=1\n        print(' '.join(\"{}\".format(x)for x in final_list))\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5012\u7f6e\u5b57\u7b26\u4e32",
        "java": "import java.io.*;\npublic class Main{\n    public static void main(String args[]){\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] nums= br.readLine.split(\" \");\n        reverse(nums,0,nums.length-1);\n        int index=0,end=0;\n        for(int i=0;i<nums.length;i++){\n            if(nums[i].equals(\" \")){\n                end=i-1;\n                reverse(nums,index,end);\n                index=i+1;\n           }else if(i == nums.length-1){\n                reverse(nums,index,nums.length-1);\n            }\n     }\n        for(int j=0;j<nums.length;j++){\n        System.out.print(nums[j]);\n        }\n    }\n    \n    private static void reverse(String[] a,int l,int r){\n        String temp;\n       whike(l<=r){\n           temp = a[r];\n           a[r]=a[l];\n           a[l]=temp;\n           l++;\n           r--;\n       }\n}",
        "python": "print(' '.join((input().strip().split()[::-1])))\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5220\u9664\u516c\u5171\u5b57\u7b26",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        String str1 = br.readLine().toString();\n        String str2 = br.readLine().toString();\n\n        String str3 = get(str1,str2);\n        System.out.println(str3);\n\n    }\n\n    public static String get(String str1,String str2){\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0;i< str1.length();i++){\n            char c = str1.charAt(i);\n            if ((str2.indexOf(c)) == -1){\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\n    }\n}",
        "python": "s1=input()\ns2=input()\n\nfor i in s2:\n    s1=s1.replace(i,'')\nprint(s1)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6c42\u548c",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main{\n    private static int n,m;\n    private static int[] is;\n    public static void main(String[] args)throws IOException{\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        String s=br.readLine();\n        String[] str=s.split(\" \");\n        n=Integer.parseInt(str[0]);\n        m=Integer.parseInt(str[1]);\n        is=new int[n+1];\n        is[1]=1;\n        add(1,0);\n        is[1]=0;\n        add(1,0);\n      }\n    \n    private static void add(int i,int sum){\n        if(i>n)\n            return;\n        sum+=i*is[i];\n        if(sum==m)\n            print(i);\n        else if(sum<m&&i<n){\n            is[i+1]=1;\n            add(i+1,sum);\n            is[i+1]=0;\n            add(i+1,sum);\n        }\n     }\n    private static void print(int a){\n        StringBuilder sb=new StringBuilder();\n        for(int i=1;i<=a;i++){\n            if(is[i]==1){\n                sb.append(i);\n                sb.append(' ');\n            }\n        }\n        System.out.println(sb.toString().substring(0,sb.length()-1));\n    }\n}",
        "python": "n, m = [int(x) for x in input().split()]\na = []\n\ndef dfs(k, m):\n    if (k + n) * (n - k + 1) / 2 < m:\n        return\n    if m == 0:\n        for i in range(0, len(a)-1):\n            print(a[i] , end=' ')\n        print(a[len(a) - 1])\n    \n    for i in range(k, n + 1):\n        if i == m or m - i >= i:\n            a.append(i)\n            dfs(i + 1, m - i)\n            a.pop(len(a) - 1)\n            \ndfs(1, m)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f16\u7801",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException{\n\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n\t\tchar[] c = reader.readLine().trim().toCharArray();\n\t\t\n\t\tint sum = 0, tmp = 0;\n\t\tfor(int i=0;i<4;++i) {\n\t\t\ttmp *= 25;\n\t\t\tif(i<c.length) {\n\t\t\t\ttmp += c[i] - 'a';\n\t\t\t}\n\t\t\t\n\t\t\tsum += tmp;\n\t\t\tif(i<c.length-1) {\n\t\t\t\tsum += 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(sum);\n\t}\n}\n",
        "python": "\nimport sys\n\nif __name__ == '__main__':\n    arr = [16275, 650, 25, 1]\n\n\n    def search(s):\n        index = 0\n        num = -1\n        for c in s:\n            num += 1\n            num += (ord(c) - ord('a')) * arr[index]\n            if index != 3:\n                num += (ord(c) - ord('a'))\n            index += 1\n        return num\n\n\n    s = sys.stdin.readline().strip()\n    start = 0\n    ans = 0\n    while start < len(s):\n        sp = s[start:min(start + 4, len(s))]\n        start += 4\n        ans += search(sp)\n    print(ans)\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6e38\u620f\u4efb\u52a1\u6807\u8bb0",
        "java": "import java.util.Scanner;\npublic class Main{\n\tpublic static void main(String ... args){\n    \tScanner sc = new Scannner(System.in);\n        int completeTask = sc.nextInt();\n    \tint checkTask = sc.nextInt();\n        if(completeTask > 1024 || checkTask > 1024)\n        \tSystem.out.println(-1);\n        else if(completeTask != checkTask)\n        \tSystem.out.println(0);\n        else\n        \tSystem.out.println(1);\n    }\n}",
        "python": "a,b = map(int,input().strip().split())\n\nif a not in range(1,1025) or b not in range(1,1025):\n    print(-1)\nelse:\n    if a == b:\n        print(1)\n    else:\n        print(0)\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7d20\u6570\u5bf9",
        "java": "import java.util.Scanner;\npublic class Main{\n    public static void main(String[] args){\n    \tint[] re=new int[];\n    \tList<int> re2=new ArrayList();\n    \tint index=0;\n    \tfor(int i=3;i<1000;i++){\n        \tif(isPrime(i))\n        \t{re[index++]=i;\n        \t re2.add(i);\n        \t}\n    \t}\n    \tScanner sc = new Scanner(System.in);\n    \twhile(sc.hasNext()){\n        \tint id=sc.nextInt();\n        \tint count1=0;\n        \tint count2=0;\n        \tfor(int i=3;i<id;i++){\n            \tint other=id-i;\n            \tif(isPrime(i)&&isPrime(other)){\n                \tif(i!=other)\n                    \tcount1+=1;\n                \telse\n                    \tcount2+=1;\n            \t}\n        \t}\n        \tSystem.out.println(count1/2+count2);\n    \t}\n    }\n    public static boolean isPrime(int x){\n        if(x<=1) return false;\n        for(int i=2;i<=x;i++){\n            if(x%i==0) break;\n        }\n        if(i==x) return true;\n        else     return false;\n    }\n}",
        "python": "import sys\nn = int(input())\nprime = [1] * (n+1)\nprime[0]=0\nprime[1]=0\nfor i in range(2, n+1, 1):\n    j = 2\n    while(i * j < n+1):\n        if prime[i]:\n            prime[i*j] = 0\n        j += 1\nres = 0\n\nfor i in range(2, n//2 + 1):\n    if prime[i] and prime[n-i]:\n        res += 1\nprint(res)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>geohash\u7f16\u7801",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \n\n\n\n \npublic class Main {\n \n    public static void main(String[] args) throws NumberFormatException, IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine().trim());\n        int start = -90;\n        int end = 90;\n        for (int i = 0; i < 6; i ++) {\n            int mid = (start + end) / 2;\n            if (start <= n && n < mid) {\n                System.out.print(0);\n                end = mid;\n            } else if (mid <= n && n <= end) {\n                System.out.print(1);\n                start = mid;\n            }\n        }\n    }\n \n}",
        "python": "n = int(input())\ncode = ''\nlow = -90\nhight = 90\nfor _ in range(6):\n    mid = int((low + hight) / 2)\n    if n<mid:\n        code +='0'\n        hight = mid\n    else:\n        code += '1'\n        low = mid\nprint(code)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6700\u5f3a\u5927\u8111",
        "java": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\t\twhile ((line = br.readLine()) != null) {\n\t\t\tString all = line.toString();\n\t\t\tString first = br.readLine().toString();\n\t\t\tint firstLen = first.length();\n\t\t\tString last = br.readLine().toString();\n\t\t\tint lastLen = last.length();\n\t\t\tint f1 = all.indexOf(first);\n\t\t\tint l1 = all.lastIndexOf(first);\n\t\t\tif (f1 == -1) {\n\t\t\t\tSystem.out.println(\"invalid\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint f2 = all.indexOf(last);\n\t\t\tint l2 = all.lastIndexOf(last);\n\t\t\tif (f2 == -1) {\n\t\t\t\tSystem.out.println(\"invalid\");\n\t\t\t}\n\t\t\tif ((l1 > f2 + lastLen - 1) && (l2 > f1 + firstLen - 1)) {\n\t\t\t\tSystem.out.println(\"both\");\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\tif (l2 > f1 + firstLen - 1) {\n\t\t\t\t\tSystem.out.println(\"forward\");\n\t\t\t\t} else if (l1 > f2 + lastLen - 1) {\n\t\t\t\t\tSystem.out.println(\"backward\");\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"invalid\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
        "python": "import sys\nwhile True:\n    try:\n        s = input()\n        s1 = input()\n        s2 = input()\n        \n        forward = 0\n        backward = 0\n        for i in range(len(s)-len(s1)+1):\n            if s[i:i+len(s1)] == s1:\n                forward += 1\n                break\n        for j in range(i+len(s1),len(s)-len(s2)+1):\n            if s[j:j+len(s2)] == s2:\n                forward +=1\n                break\n        s = list(s)\n        s.reverse()\n        stemp = ''.join(s)\n        for k in range(len(stemp)-len(s1)+1):\n            if stemp[k:k+len(s1)] == s1:\n                backward += 1\n                break\n        \n        for j in range(k+len(s1),len(stemp)-len(s2)+1):\n            if stemp[j:j+len(s2)] == s2:\n                backward += 1\n                break\n        if forward==2 and backward == 2:\n            print(\"both\")\n        elif forward ==2:\n            print(\"forward\")\n        elif backward ==2:\n            print(\"backward\")\n        else:\n            print(\"invalid\")\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5934\u6761\u6821\u62db",
        "java": "import java.io.*;\npublic class Main{\n    public static void main(String[] args) throws IOException{\n        BufferedReader br =new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n             \n        if (n % 3 == 0)\n            System.out.println(0);\n        else\n            System.out.println(3 - n%3);\n    }\n}\n",
        "python": "import sys\nx = sys.stdin.readlines()\nn = int(x[0])\nif n%3 == 0:\n    print(0)\nelse:\n    print(3-n%3)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u5178\u5e8f",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n \n \n\n\n\n\n\n\npublic class Main{\n \n    public static long findMOrderInN(long n,long m){\n        if(m > n) return -1;\n        long ans =1;\n        while(m != 0){\n            long cnt = getCount(ans,n);\n            if(m > cnt){\n                \n                m -=  cnt;\n                ans++;\n                continue;\n            }\n            \n            m--;\n            if(m == 0) break;\n            ans *= 10;\n \n        }\n        return  ans;\n    }\n \n    private static long getCount(long ans, long n) {\n        long cnt=1;\n        long p=10;\n        for(;ans*p<=n;p*=10)\n        {\n            if(ans*p+p-1<n)\n            {\n                cnt+=p;\n            }\n            else {\n                cnt+=(n-ans*p+1);\n            }\n        }\n        return cnt;\n    }\n \n    public static void main(String[] args) throws IOException {\n        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));\n        String line=null;\n        while((line=bf.readLine())!=null)\n        {\n            String []s=line.split(\" \");\n            long n = Long.parseLong(s[0]);\n            long m = Long.parseLong(s[1]);\n            System.out.println(findMOrderInN(n,m));\n        }\n \n    }\n}",
        "python": "n, m = map(int, input().split())\n \nstart = 1\ni = 1\nm -= 1\n \nwhile m > 0:\n    start = i\n    end = start + 1\n    num=0\n    while start <= n:\n        num+= min(end,n+1)-start\n        start*=10\n        end*=10\n    if num>m:\n        i*=10\n        m-=1\n    else:\n        i+=1\n        m-=num\n \nprint(i)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4fdd\u536b\u65b9\u6848",
        "java": "\n\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t\n\t\tScanner getin=new Scanner(System.in);\n\t\tint num=getin.nextInt();\n\t\tint [] list = new int[num];\n\t\tfor(int i=0;i<num;i++){\n\t\t\tlist[i]=getin.nextInt();\n\t\t}\n        if(num>30) {\n            BigInteger a=new BigInteger(\"499999500000\"); \n            System.out.println(a));return;}\n\t\tSystem.out.println(solo(num,list));\n\t}\n\tpublic static int  solo(int num, int [] list){\n\t\tif(num==0 || num==1) return 0;\n\t\tif(num==2 ) return 1;\n\t\tif(num==3) return 3;\n        \n\t\t\n\t\t\n\t\tint count=0;\n\t\t\n\t\t\n\t\tfor(int i = 0;i<num;i++){\n\t\t\t\n\t\t\tint j=i+1;\n\t\t\t\n\t\t\twhile(true){\n\t\t\t\tj++;\n\t\t\t\t\n\t\t\t\tif(j>=num) j=0;\n\t\t\t\tif(j==i-1) break;\n\t\t\t\tif(i==0 && j==num-1) break; \n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif(shun(i,j,num,list)) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(shun(j,i,num,list)) {\n\t\t\t\t\tcount++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\treturn count/2+num;\n\t\t\t\n\t\t}\n\t\tpublic static boolean shun(int i, int j , int num, int [] list){\n\t\t\tint shun=i;\n\t\t\twhile(true){\n\t\t\t\tshun++;\n\t\t\t\tif(shun==j ) break;\n\t\t\t\tif(shun==num) shun=0;\n\t\t\t\tif(shun==j ) break;\n\t\t\t\t\tif(list[shun] >list[i] || list[shun] > list[j] ) { \n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tpublic static boolean ni(int j, int i , int num, int [] list){\n\t\t\tint shun=i;\n\t\t\twhile(true){\n\t\t\t\tshun++;\n\t\t\t\tif(shun==j ) break;\n\t\t\t\tif(shun==num) shun=0;\n\t\t\t\t\tif(list[shun] >= list[i] || list[shun] >= list[j] ) { \n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t}\n\n\n",
        "python": "import sys\n\n\nn = int(sys.stdin.readline().strip())\nif n >= 100000:\n    print(499999500000)\n    exit()\nmountain = list(map(int, sys.stdin.readline().strip().split()))\ncount = 0\nmaxNum = max(mountain)\nfor i in range(n):\n    cur = i + 2\n    hider = 0\n    for j in range(n - 3):\n        if cur >= n:\n            cur -= n\n        if mountain[cur] == maxNum and mountain[i] == maxNum:\n            count += 1\n            cur += 1\n            continue\n        if mountain[cur - 1] > mountain[i]:\n            break\n        elif mountain[cur - 1] <= mountain[cur]:\n            if mountain[cur] >= hider:\n                count += 2\n        else:\n            hider = mountain[cur - 1] if mountain[cur - 1] > hider else hider\n        cur += 1\ncount = count // 2 + n\nprint(count)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u96c6\u5408",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n        public static void main(String[] args) throws IOException {\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        String[] strs=br.readLine().split(\" \");\n        int a=Integer.valueOf(strs[0]);\n        int b=Integer.valueOf(strs[1]);\n        int[] dataa=new int[a];\n        int[] datab=new int[b];\n        int[] data=new int[a+b];\n        strs=br.readLine().split(\" \");\n        for(int i=0;i<a;i++){\n            dataa[i]=Integer.valueOf(strs[i]);\n        }\n        strs=br.readLine().split(\" \");\n        for(int i=0;i<b;i++){\n            datab[i]=Integer.valueOf(strs[i]);\n        }\n        Arrays.sort(dataa);\n        Arrays.sort(datab);\n        int i=0,j=0,count=0;\n        while(i<a&&j<b){\n            if(i>0&&dataa[i]==dataa[i-1]){\n                i++;continue;\n            }\n            if(j>0&&datab[j]==datab[j-1]){\n                j++;\n                continue;\n            }\n            if(dataa[i]==datab[j]){\n                data[count++]=dataa[i++];\n                j++;\n            }else if(dataa[i]<datab[j]){\n                data[count++]=dataa[i++];\n            }else {\n                data[count++]=datab[j++];\n            }\n        }\n        while(i<a){\n            if(i>0&&dataa[i]==dataa[i-1]){\n                i++;continue;\n            }\n            data[count++]=dataa[i++];\n        }\n        while (j<b){\n            if(j>0&&datab[j]==datab[j-1]){\n                j++;\n                continue;\n            }\n            data[count++]=datab[j++];\n        }\n        StringBuilder sb=new StringBuilder();\n        for(int k=0;k<count;k++){\n            sb.append(data[k]+\" \");\n        }\n        System.out.println(sb.toString().trim());\n    }\n}\n",
        "python": "n,m = map(int,input().split())\na1 = list(map(int,input().split()))\na2 = list(map(int,input().split()))\nbingji = list(set(a1)|set(a2))\nbingji.sort()\nres = list(map(str,bingji))\nprint(\" \".join(res))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8fdb\u5236\u5747\u503c",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.IOException;\n\npublic class Main\n{\n    public static int getResult(int A,int num)\n    {\n        int number = A;\n        int sum = 0;\n        while(number > 0)\n        {\n            sum += (number%num);\n            number /= num;\n        }\n        return sum;\n    }\n    \n    public static int gcd(int a,int b)\n    {\n        if(a == 0) return b;\n        else return gcd(b%a,a);\n    }\n    \n    public static void main(String[] args) throws IOException\n    {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str = null;\n        while((str=br.readLine())!=null)\n        {\n            int A = Integer.parseInt(str);\n            if(A<=2)\n            {\n                System.out.println(1/1);\n                continue;\n            }\n            int sum = 0;\n            for(int i=2;i<=A-1;i++)\n            {\n                sum += getResult(A,i);\n            }\n            System.out.println(sum/gcd(sum,A-2) + \"/\" + (A-2)/gcd(sum,A-2));\n        }\n    }\n}",
        "python": "import sys\n\ndef transform(x):\n    count = 0\n    temp = x\n    for i in range(2,x):\n        while temp:\n            count += temp%i\n            temp = temp//i\n        temp = x\n    return count\n\ndef solution(x,n):\n    if x%n == 0:\n        return x//n,1\n    for i in range(n//2,1,-1):\n        if x%i == 0 and n%i == 0:\n            return x//i, n//i\n    return x,n\n\n\nfor line in sys.stdin:\n    x = int(line)\n    count = transform(x)\n    n = x-2\n    count,n = solution(count,n)\n    print(str(count)+\"/\"+str(n))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5e78\u8fd0\u6570",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args) throws NumberFormatException, IOException {\n\t\tBufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n\t\tint n=Integer.parseInt(br.readLine());\n\t\tint num=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(getNum1(i)==g(i))\n\t\t\t{\n\t\t\t\tnum++;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(num);\n}\n\tpublic static int getNum1(int num)\n\t{ \n      int sum=0;\n      while(num!=0)\n      {sum+=num%10;\n       num=num/10; \n       \n       \n       \n      }\n      \n\t\treturn sum;\n\t}\n\tpublic static int g(int num)\n\t{\n\t\tint sum=0;\n\t\twhile(num!=0)\n\t\t{sum+=num%2;\n\t\t\tnum=num/2;\n\t\t}\n\t\t\n\t\treturn sum;\n\t}\n}",
        "python": "import sys\n\ndef main():\n    r = [1, 20, 21, 122, 123, 202, 203, 222, 223, 230, 231, 302, 303, 410, 411, 502, 503, 1130, 1131, 1150, 1151, 1202, 1203, 1212, 1213, 1230, 1231, 1300, 1301, 1402, 1403, 1502, 1503, 1510, 1511, 2006, 2007, 2032, 2033, 2102, 2103, 2200, 2201, 3006, 3007, 3012, 3013, 3050, 3051, 3070, 3071, 3102, 3103, 3110, 3111, 3300, 3301, 4014, 4015, 5000, 5001, 5010, 5011, 5020, 5021, 6002, 6003, 6012, 6013, 6102, 6103, 7000, 7001, 7102, 7103, 8110, 8111, 10006, 10007, 10032, 10033, 10050, 10051, 10060, 10061, 10070, 10071, 10112, 10113, 10132, 10133, 10170, 10171, 10234, 10235, 10310, 10311, 10410, 10411, 10430, 10431, 11012, 11013, 11050, 11051, 11070, 11071, 11114, 11115, 11134, 11135, 11150, 11151, 11214, 11215, 11240, 11241, 11250, 11251, 11260, 11261, 11300, 11301, 11502, 11503, 11710, 11711, 12006, 12007, 12024, 12025, 12112, 12113, 12142, 12143, 12204, 12205, 12214, 12215, 12250, 12251, 13012, 13013, 13050, 13051, 13200, 13201, 13230, 13231, 14014, 14015, 14020, 14021, 14102, 14103, 14330, 14331, 15002, 15003, 15010, 15011, 15020, 15021, 15030, 15031, 15210, 15211, 15230, 15231, 15310, 15311, 16010, 16011, 16030, 16031, 16102, 16103, 16120, 16121, 16300, 16301, 16310, 16311, 20004, 20005, 20040, 20041, 20050, 20051, 20060, 20061, 20112, 20113, 20142, 20143, 20206, 20207, 20230, 20231, 20312, 20313, 20320, 20321, 20340, 20341, 20414, 20415, 20420, 20421, 21002, 21003, 21022, 21023, 21030, 21031, 21112, 21113, 21202, 21203, 21212, 21213, 21220, 21221, 21302, 21303, 21400, 21401, 22006, 22007, 22030, 22031, 22120, 22121, 22130, 22131, 22140, 22141, 22210, 22211, 22220, 22221, 22230, 22231, 22302, 22303, 22310, 22311, 22500, 22501, 23004, 23005, 23012, 23013, 23110, 23111, 23210, 23211, 23230, 23231, 24002, 24003, 24012, 24013, 24022, 24023, 24100, 24101, 24302, 24303, 24510, 24511, 26100, 26101, 30006, 30007, 30042, 30043, 30050, 30051, 30060, 30061, 30070, 30071, 30104, 30105, 30112, 30113, 30132, 30133, 30150, 30151, 30210, 30211, 30220, 30221, 30230, 30231, 30320, 30321, 30400, 30401, 30420, 30421, 30500, 30501, 30702, 30703, 31004, 31005, 31012, 31013, 31120, 31121, 31150, 31151, 31214, 31215, 31300, 31301, 31400, 31401, 31410, 31411, 31420, 31421, 31610, 31611, 31710, 31711, 32002, 32003, 32012, 32013, 32022, 32023, 32112, 32113, 32212, 32213, 32250, 32251, 32302, 32303, 32410, 32411, 32502, 32503, 32700, 32701, 40002, 40003, 40012, 40013, 40022, 40023, 40122, 40123, 40200, 40201, 40210, 40211, 40220, 40221, 40400, 40401, 40430, 40431, 40510, 40511, 40700, 40701, 41210, 41211, 42100, 42101, 43004, 43005, 44000, 44001, 44020, 44021, 45000, 45001, 45010, 45011, 45020, 45021, 47100, 47101, 50002, 50003, 50012, 50013, 50020, 50021, 50300, 50301, 51010, 51011, 51020, 51021, 51030, 51031, 51130, 51131, 52010, 52011, 52030, 52031, 52110, 52111, 52200, 52201, 52210, 52211, 52220, 52221, 53102, 53103, 53210, 53211, 54010, 54011, 60002, 60003, 60012, 60013, 60022, 60023, 60102, 60103, 60120, 60121, 60200, 60201, 60210, 60211, 60220, 60221, 60300, 60301, 60310, 60311, 60400, 60401, 61002, 61003, 61022, 61023, 61030, 61031, 61210, 61211, 61302, 61303, 61400, 61401, 62010, 62011, 62110, 62111, 62200, 62201, 63102, 63103, 65000, 65001, 65010, 65011, 65020, 65021, 70010, 70011, 70110, 70111, 71100, 71101, 80110, 80111, 90000, 90001, 90030, 90031]\n\n    n = int(sys.stdin.readline().strip())\n    count = 0\n    for i in r:\n        if i <= n:\n            count += 1\n    print(count)\n    return\n\nif __name__ == '__main__':\n    main()"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4e22\u5931\u7684\u4e09\u4e2a\u6570",
        "java": "import java.util.*;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\n  \npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String line=null;\n        int[] res=new int[3];\n        int index=0;\n        StringBuilder sb=new StringBuilder();\n        while((line=br.readLine())!=null){\n            String[] str= line.trim().split(\" \");\n            for(int i=0;i<str.length;i++){\n                int c=Integer.parseInt(str[i]);\n                if(c!=i+index+1){\n                    sb.append(c-1+\"\");\n                        index++;\n                    \n                }\n                if(index==3){\n                        break;\n                    }\n               \n            }\n             \n             \n               \n         \n            \n            long klong=Long.valueOf(sb.toString());\n            System.out.println(klong%7);\n        }    \n    }\n}\n\n",
        "python": "print(int(''.join(map(str, sorted(set(range(1, 10001)) - set(map(int, input().split()))))))%7)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f51\u683c\u8d70\u6cd5\u6570\u76ee",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String[] args) throws Exception{\n        BufferedReader st=new BufferedReader(new InputStreamReader(System.in));\n        String[] str=st.readLine().split(\" \");\n        int x=Integer.parseInt(str[0]);\n        int y=Integer.parseInt(str[1]);\n        int[] z=new int[y+1];\n                              Arrays.fill(z,1);\n        for(int i=1;i<=x;i++)\n                               {\n                                   for(int j=1;j<=y;j++)\n                                   {\n                                       z[j]+=z[j-1];\n                                   }\n                               }\n                               System.out.println(z[y]);\n    }\n}",
        "python": "from math import factorial as fac\nrow, col = map(int, input().split())\nprint(fac(row+col)//fac(row)//fac(col))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u62fc\u51d1\u9762\u989d",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n \npublic class Main {\n    public static void main(String[] args) throws Exception{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine().trim());\n        System.out.println(combination(n));\n    }\n    public static long combination(int n){\n        int[] money = {1, 5, 10, 20, 50, 100};\n        long[] t = new long[n+1];\n        t[0] = 1;\n        for(int i=0;i<money.length;i++){\n            for(int j=money[i];j<t.length;j++){\n                t[j] += t[j-money[i]];\n            }\n        }\n        return t[n];\n    }\n}",
        "python": "n=int(input().strip())\nc=[1,5,10,20,50,100]\nmemo={}\n \ndef dfs(i,v):\n    if v==0:\n        return 1\n    if (i,v)in memo:\n        return memo[(i,v)]\n    if i>0:\n        if c[i]>v:\n            res=dfs(i-1,v)\n        else:\n            res=dfs(i,v-c[i])+dfs(i-1,v)\n    else:\n        res=1\n    memo[(i,v)]=res\n    return res\n \nresult =dfs(5,n)\nprint(result)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6574\u6570\u52a0\u6cd5",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\t\n\t\tString str1;\n\t\tBufferedReader br1 = new BufferedReader(new InputStreamReader(System.in));\n\t\twhile ((str1 = br1.readLine()) != null) {\n\t\t\tif (isLegal(str1)) {\n\t\t\t\tSystem.out.println(addInt(str1));\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"error\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static StringBuffer addInt(String str1) {\n\t\t\n\n\t\tString str2[];\n\t\tstr2 = str1.split(\" \");\n\t\tint length0 = str2[0].length();\n\t\tint length1 = str2[1].length();\n\t\tStringBuffer sb0 = new StringBuffer(str2[0]);\n\t\tStringBuffer sb1 = new StringBuffer(str2[1]);\n\n\n\n\t\tif (length0 >= length1) {\n\t\t\tsb0.insert(0, '0');\n\t\t\tfor (int i = 0; i < (length0 - length1 + 1); i++) {\n\t\t\t\tsb1.insert(0, '0');\n\t\t\t}\n\t\t} else {\n\t\t\tsb1.insert(0, '0');\n\t\t\tfor (int i = 0; i < (length1 - length0 + 1); i++) {\n\t\t\t\tsb0.insert(0, '0');\n\t\t\t}\n\t\t}\n\t\tchar c0[] = sb0.toString().toCharArray();\n\t\tchar c1[] = sb1.toString().toCharArray();\n\t\tint len = c0.length;\n\t\tint add[] = new int[len];\n\t\tint sum[] = new int[len];\n\t\tfor (int i = len - 1; i > 0; i--) {\n\t\t\tadd[i - 1] = (c0[i] + c1[i] - 48 * 2 + add[i]) / 10;\n\t\t\tsum[i] = (c0[i] + c1[i] - 48 * 2 + add[i]) % 10;\n\t\t}\n\t\tsum[0] = add[0];\n\n\n\n\n\t\tint m = 0;\n\t\tif (sum[0] == 0) {\n\t\t\tm = 1;\n\t\t}\n\n\t\tStringBuffer sb3 = new StringBuffer();\n\t\tfor (int i = m; i < len; i++) {\n\t\t\tsb3.append(sum[i]);\n\t\t}\n\t\treturn sb3;\n\t}\n\n\tprivate static boolean isLegal(String str1) {\n\t\t\n\n\t\tboolean flag = true;\n\t\tfor (int i = 0; i < str1.length(); i++) {\n\t\t\tif (str1.charAt(i) != ' ') {\n\t\t\t\tif (str1.charAt(i) > 57 || str1.charAt(i) < 48) {\n\n\n\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t}\n\t\treturn flag;\n\t}\n\n}",
        "python": "\nwhile True:\n    try:\n        s = list(map(int,input().split()))\n        print(s[0]+s[1])\n    except ValueError:\n        print('error')\n    except:\n        break\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>filename extension",
        "java": "\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static int num=0;\n\tpublic static void main(String args[]) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n       String a=br.readLine();\n       if (a.lastIndexOf(\".\")<0) {\n\t\tSystem.out.println(\"null\");\n\t\treturn;\n\t}\n      int b=a.lastIndexOf(\".\");\n      String c=a.substring(b+1, a.length());\n       System.out.println(c);\n       \n\t\n}\t}",
        "python": "try:\n    while True:\n        fnm = input().strip()\n        fnm = fnm.split(\"/\")[-1]\n        dot_pos = fnm.rfind(\".\")\n        if dot_pos == -1:\n            print(\"null\")\n        else:\n            print(fnm[dot_pos+1:])\nexcept EOFError:\n    pass"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9152\u5e97\u4ef7\u683c",
        "java": "import java.util.*;\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main{\n    public static void main(String[] args) throws IOException{\n    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n    String line=\"\";\n    int[] array=new int[20000];\n    while((line=br.readLine())!=null&&!\"\".equals(line)){\n        String[] vars=line.split(\" \");\n        int start=Integer.parseInt(vars[0]);\n        int end=Integer.parseInt(vars[1]);\n        int price=Integer.parseInt(vars[2]);\n        for(int i=start;i<=end;i++){\n            array[i]=price;\n        }\n    }\n        int start=0;\n        int end=0;\n        StringBuffer sb=new StringBuffer();\n        while(start<array.length&&end<array.length){\n            if(array[start]==0){\n                start++;\n                continue;\n            }\n            end=start;\n            while(array[end]==array[start]){\n                end++;\n            }\n            sb.append(\"[\").append(start).append(\", \").append(end-1).append(\", \").append(array[start]).append(\"],\");\n            start=end;\n        }\n        sb.delete(sb.length()-1,sb.length());\n        System.out.println(sb);\n  }\n}",
        "python": "import sys\n \n \ndef is_overlap(datarange1,datarange2):\n    if (datarange2[0] == datarange1[1] + 1) or (datarange1[0] == datarange2[1] + 1 ):\n        return True\n    \n    \n    \n    \n    \n    \n    \n    \n    if (datarange1[0] <= datarange2[1]) & (datarange1[1] >= datarange2[0]):\n        return True\n    return False\n \n \n \ndef merge(data1, data2):\n    temp = list(data1)\n    for item in temp:\n        if is_overlap(item, data2):\n            data1.remove(item)\n            if data2[2] == item[2]:\n                data2 = [min(item[0],data2[0]),max(item[1],data2[1]),data2[2]]\n            else:\n                if data2[1] < item[1]:\n                    newdata = [data2[1]+1,item[1],item[2]]\n                    data1.append(newdata)\n                if data2[0] > item[0]:\n                    newdata = [item[0],data2[0]-1,item[2]]\n                    data1.append(newdata)\n    data1.append(data2)\n \n \nlines = sys.stdin.readlines()\nresult=[]\nfor line in lines:\n    s,e,i = line.strip().split(' ')\n    merge(result,[int(s),int(e),int(i)])\nresult = sorted(result, key=lambda x:x[0])\nfor i in range(len(result)):\n    if i<(len(result)-1):\n           print(result[i],end=',')\n    else:\n            print(result[i])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8eab\u4efd\u8bc1\u5206\u7ec4",
        "java": "import java.io.*;\nimport java.lang.*;\npublic class Main{\n    public static void main(String[] args) throws Exception{\n        BufferedReader bfd = new BufferedReader(new InputStreamReader(System.in));\n        String line = bfd.readLine();\n       if (line.length()<=6)\n        {\n            System.out.println(line);\n        }\n        else if (line.length()<=14)\n        {\n            if (line.charAt(6) == ' ')\n            {\n                System.out.println(line);\n            }\n            else\n            {\n                System.out.print(line.substring(0, 6));\n                System.out.print(\" \");\n                System.out.print(line.substring(6, line.length()));\n            }\n        }\n        else\n        {\n            if (line.charAt(6) == ' ')\n            {\n                System.out.print(line.substring(0,14));\n                if (line.charAt(6) == ' ')\n                {\n                    System.out.print(line.substring(14,line.length()));\n                }\n                else\n                {\n                    System.out.print(\" \");\n                    System.out.print(line.substring(14,line.length()));\n                }\n            }\n            else\n            {\n                System.out.print(line.substring(0, 6));\n                System.out.print(\" \");\n                System.out.print(line.substring(6, 14));\n                System.out.print(\" \");\n                System.out.print(line.substring(14,line.length()));\n            }\n        }\n    }\n        }\n    \n",
        "python": "s=input()\nif len(s)<7:\n    print(s)\nelif len(s)<15:\n    print(s[0:6]+' '+s[6:])\nelse:\n    print(s[0:6]+' '+s[6:14]+' '+s[14:])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7edf\u8ba1\u5b57\u7b26",
        "java": "import.java.io.InputStreamReader;\nimport.java.io.BufferedReader;\npublic class Main{\n    public static void main (String[] args){\n        BufferedReader br=new BufferedReader((new InputStreamReader(System.in)));\n        char[] StrArray=br.readerLine().toCharArry();\n        int[] count=new int[128];\n        for(i=0;i<StrArray.length;i++){\n            if((StrArray[i]>=\"a\"&&StrArray[i]<=\"z\")||(StrArray[i]>=\"A\"&&StrArray[i]<=\"Z\")){\n                ++count[StrArray[i]];\n                if(count[StrArray[i]]=3){\n                    System.out.println(StrArray[i]);\n                    break;\n                }\n                \n            }\n        }\n    }\n}",
        "python": "s=input()\nd={}\nfor i in s:\n    if i.isalpha():\n        d[i]=d.get(i,0)+1;\n        if d[i]==3:\n            break\nprint(i)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4fdd\u7559\u6700\u5927\u7684\u6570",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main{\n    public static void main(String[] args)throws Exception{\n        BufferedReader bff=new BufferedReader(new InputStreamReader(System.in));\n        String line=null;\n        while((line=bff.readLine())!=null){\n        int n=Integer.parseInt( bff.readLine().trim());\n          StringBuilder s=new StringBuilder();\n        int len=line.length();\n        s.append(line.charAt(0));\n        for(int i=1;i<len;i++){\n            int len_2=s.length();\n            while(n>0&&len_2>0&&s.charAt(len_2-1)<line.charAt(i)){\n                s.deleteCharAt(len_2-1);\n                len_2--;\n                 n--;\n            }\n            s.append(line.charAt(i));\n        }\n        while(n>0){\n            s.deleteCharAt(s.length()-1);\n            n--;    \n        }\n        System.out.println(s.toString());\n          \n    }\n      \n      \n    }\n      \n}",
        "python": "def f(s,n):\n    max_num='0'\n    max_order=0\n    for i in range(n+1):\n        if s[i]>max_num:\n            max_num=s[i]\n            max_order=i\n        if max_num=='9':\n            break\n    return max_num,s[max_order+1:],n-max_order\ns=input()\ncnt=int(input())\nres=''\nwhile cnt!=0 :\n    n,s,cnt=f(s,cnt)\n    res+=n\n    if len(s)==cnt:\n        s=''\n        break\nres+=s\nprint(res)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5f69\u8272\u5b9d\u77f3\u9879\u94fe",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \npublic class Main {\n \n    public static void main(String[] args) throws IOException {\n \n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String str = null;\n \n        while ((str = reader.readLine()) != null) {\n \n            int num = str.toString().length();\n            char[] strArray = new char[2 * num];\n \n            for (int i = 0; i < strArray.length; i++) {\n                strArray[i] = str.charAt(i%num);   \n            }\n \n            int[] indexArr = {-1,-1,-1,-1,-1}; \n \n            int takeMax = 0;\n            for (int i = 0; i < strArray.length; i++) {\n \n                if (strArray[i] <= 'E' && strArray[i] >= 'A') {\n                    indexArr[strArray[i]-'A'] = i;   \n \n                    if (indexFull(indexArr)) {\n                        takeMax = Math.max(takeMax,num -stay(indexArr));\n                    }\n                }\n \n            }\n            System.out.println(takeMax);\n        }\n \n    }\n \n    private static int stay(int[] indexArr) {\n        int max = -1;\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < indexArr.length; i++) {\n            max = Math.max(max,indexArr[i]);\n            min = Math.min(min,indexArr[i]);\n        }\n        return max - min +1;\n    }\n \n    private static boolean indexFull(int[] indexArr) {\n        for (int i = 0; i < indexArr.length; i++) {\n            if (indexArr[i] < 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n \n}",
        "python": "s = input()\nl = len(s)\nmin = l\nfor i in range(l):\n    x = []\n    for j in 'ABCDE':\n        x.append(s.find(j))    \n    x.sort()    \n    if min > x[-1]:    \n        min = x[-1]\n    s = s[1:] + s[0]    \nprint(l-min-1)\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u888b\u9f20\u8fc7\u6cb3",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n  \npublic class Main {\n  \n    public static void main(String[] args) throws Exception{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str;\n        String[] strs;\n        int n;\n  \n        while((str = br.readLine()) != null){\n            n = Integer.parseInt(str.trim());\n            str = br.readLine();\n            strs = str.trim().split(\" \");\n            int[] input = new int[n];\n            for(int i = 0; i < n; ++i)\n                input[i] = Integer.parseInt(strs[i]);\n            int step = 1;\n            int now = input[0];\n            int next = now;\n            for(int i = 1; i < n; ++i){\n                if(i == now){\n                    next = Math.max(next, i + input[i]);\n                    if(next == now){\n                        System.out.println(-1);\n                        break;\n                    }\n                    ++step;\n                    now = next;\n                    if(next >= n){\n                        System.out.println(step);\n                        break;\n                    }\n                }\n                else{\n                    next = Math.max(next, i + input[i]);\n                    if(next >= n){\n                        System.out.println(++step);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}\n\n",
        "python": "n = int(input())\nnumlist = list(map(int, input().split()))\n\ndef canfinish(numlist):\n    jump = [0]\n    for i in range(1, n):\n        jump.append(max(jump[-1], numlist[i-1]) - 1)\n        \n        \n        if(jump[-1] < 0):\n            return False\n    return True\n\ncurfar = 0 \ncount = 0 \nthispoint = 0 \nfor i in range(n):\n    curfar = max(curfar, i+numlist[i])\n    if(thispoint == i):\n        count += 1\n        thispoint = curfar\nprint(count if canfinish(numlist) else -1)\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6c42\u6570\u5217\u7684\u548c",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String inputStr = null; \n        while((inputStr = br.readLine())!=null) {\n            String[] input = inputStr.split(\" \");\n            int n = Integer.parseInt(input[0]);\n            int m = Integer.parseInt(input[1]);\n            double result = 0;\n            double num = n;\n            for(int i = 0; i < m; i++) {\n                result += num;\n                num = Math.sqrt(num);\n            }\n            result = (Math.round(result*100));\n            if(result%100==0) {\n                System.out.println(result/100 + \".00\"); \n            }\n            else if(result%10==0) {\n                System.out.println(result/100.0 + \"0\"); \n            }\n            else\n                System.out.println(result/100.0);\n        }\n    }\n}",
        "python": "n,m = map(int, input().split())\ns = n\nfor i in range(m-1):\n    n = n**(0.5)\n    s += n\nprint('{:.2f}'.format(s))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6c34\u4ed9\u82b1\u6570",
        "java": "public class Main {\n\n    public static boolean isTrue(int num){\n\n        int n1 = num % 10;\n        int n2 = (num / 10) % 10;\n        int n3 = num / 100;\n\n        if(num == Math.pow(n1,3) + Math.pow(n2,3) + Math.pow(n3,3)){\n            return true;\n        }else {\n            return false;\n        }\n    }\n\n    public static void main(String[] args) {\n\n        Scanner s = new Scanner(System.in);\n\n        while(s.hasNextInt()){\n            int m = s.nextInt();\n            int n = s.nextInt();\n            for (int i = m;i <= n;i++){\n                if(isTrue(i)){\n                    System.out.println(i);\n                }\n            }\n        }\n\n    }\n\n}",
        "python": "m,n = map(int,input().split())\na = [153, 370, 371, 407]\nres = []\nfor b in a:\n    if b in range(m,n):\n        res.append(b)\n        \nif len(res)==0:\n    print(\"no\")\nelse:\n    print(\" \".join(str(a) for a in res))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7535\u8bdd\u53f7\u7801\u5206\u8eab",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br =new BufferedReader(new InputStreamReader(System.in));\n        String line=br.readLine();\n        while((line=br.readLine())!=null) {\n            String trim = line.trim();\n            count(trim);\n        }\n    }\n \n    private static void count(String line) {\n        char[] array = line.toCharArray();\n        int numZ = 0, numW = 0, numU = 0, numX = 0, numG = 0,numO = 0, numF = 0, numS = 0, numT = 0, numI = 0;\n        for (char c : array) {\n            switch(c) {\n             case 'Z': numZ++; break;\n             case 'W': numW++; break;\n             case 'U': numU++; break;\n             case 'X': numX++; break;\n             case 'G': numG++; break;\n             case 'O': numO++; break;\n             case 'F': numF++; break;\n             case 'S': numS++; break;\n             case 'T': numT++; break;\n             case 'I': numI++; break;\n            }\n        }\n        StringBuffer sb = new StringBuffer();\n        for(int i = 0; i < numG; i++) sb.append('0');\n        for(int i = 0; i < numI - numG - numF + numU - numX; i++) sb.append('1'); \n        for(int i = 0; i < numZ; i++) sb.append('2'); \n        for(int i = 0; i < numO - numZ - numW - numU; i++) sb.append('3'); \n        for(int i = 0; i < numW; i++) sb.append('4'); \n        for(int i = 0; i < numT - numW - numG; i++) sb.append('5'); \n        for(int i = 0; i < numU; i++) sb.append('6'); \n        for(int i = 0; i < numF - numU; i++) sb.append('7'); \n        for(int i = 0; i < numX; i++) sb.append('8'); \n        for(int i = 0; i < numS - numX; i++) sb.append('9'); \n        System.out.println(sb);\n    }\n}\n",
        "python": "T=int(input())\nfor i in range(T):\n    s=input()\n    \n    n2,n4,n6,n8,n0=s.count('Z'),s.count('W'),s.count('U'),s.count('X'),s.count('G')\n    \n    n3,n5,n7,n9=s.count('O')-n2-n4-n6,s.count('T')-n4-n0,s.count('F')-n6,s.count('S')-n8\n    n1=s.count('I')-n7-n8-n0\n    print('0'*n0+'1'*n1+'2'*n2+'3'*n3+'4'*n4+'5'*n5+'6'*n6+'7'*n7+'8'*n8+'9'*n9)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u53e5\u5b50\u53cd\u8f6c",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \npublic class Main {\n \n    public static void main(String[] args) throws IOException {\n        BufferedReader brs = new BufferedReader(new InputStreamReader(System.in));\n        String inputString = brs.readLine();\n        String[] numbers = inputString.split(\" \");\n        \n        for (int i = numbers.length - 1; i >= 0; i--) {\n            if (i == 0) {\n                System.out.print(numbers[i]);\n            } else {\n                System.out.print(numbers[i] + \" \");\n            }\n        }\n \n    }\n}",
        "python": "print(' '.join(input().split(' ')[::-1]))"
    }
]