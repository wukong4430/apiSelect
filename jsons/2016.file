[
    {
        "question": ">>>>>>>>>>>>>>>>>LUCKY STRING",
        "java": "import java.util.*;\n\npublic class Main {\n\n    private static int[] fibo = {1,2,3,5,8,13,21,34,55,89};\n\n    private static boolean binarySearch(int x) {\n        int left = 0;\n        int right = 9;\n        int mid;\n        while (left <= right) {\n            mid = (left + right) >> 1;\n            if (fibo[mid] == x) {\n                return true;\n            } else if (fibo[mid] > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return false;\n    }\n\n    public static void main(String[] args) {\n        solve();\n    }\n\n    private static boolean check(String s) {\n        int cnt = 0;\n        boolean[] flag = new boolean[27];\n        for (int i = 0, len = s.length(); i < len; i++) {\n            if (!flag[s.charAt(i) - 'a']) {\n                flag[s.charAt(i)-'a'] = true;\n                ++cnt;\n            }\n        }\n        return binarySearch(cnt);\n    }\n\n    private static void solve() {\n        Scanner scanner = new Scanner(System.in);\n        while (scanner.hasNext()) {\n            String str = scanner.next();\n            String[] subStrs = new String[10002];\n            String s;\n            int count = 0;\n            for (int i = 0, len = str.length(); i < len; i++) {\n                for (int j = i + 1; j <= len; j++) {\n                    s = str.substring(i, j);\n                    if (check(s)) {\n                        subStrs[count++] = s;\n                    }\n                }\n            }\n            Arrays.sort(subStrs,0,count);\n            System.out.println(subStrs[0]);\n            for (int i = 1; i < count; ++i) {\n                if (!subStrs[i].equals(subStrs[i - 1])) {\n                    System.out.println(subStrs[i]);\n                }\n            }\n        }\n        scanner.close();\n    }\n}",
        "python": "FebSet = set([1, 2, 3, 5, 8, 13, 21])\n   \ndef findLucky(a_string):\n    ans = set([])\n    for start in range(len(a_string)):\n        occurrence = set([])\n        current = 0\n        for end in range(start, len(a_string)):\n            if  a_string[end] not in occurrence:\n                current += 1\n                occurrence.add(a_string[end])\n            if current in FebSet:\n                ans.add(a_string[start: end + 1])\n    ans = list(ans)\n    return sorted(ans)\n               \n               \n   \ndef run():\n    a_string = input()\n    a_list = findLucky(a_string)\n    for string in a_list:\n        print(string)\n   \nrun()"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>Numeric Keypad",
        "java": "import java.util.Scanner;\n\npublic class Main {\n\tprivate static int T;\n\tprivate static char[] res;\n\t\n\tprivate static final int[][] boost = new int[][] {\n\t\t\t{ 0 },\n\t\t\t{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }, \n\t\t\t{ 0, 2, 3, 5, 6, 8, 9 },\n\t\t\t{ 3, 6, 9 }, \n\t\t\t{ 0, 4, 5, 6, 7, 8, 9 },\n\t\t\t{ 0, 5, 6, 8, 9 }, \n\t\t\t{ 3, 6, 9 },\n\t\t\t{ 0, 7, 8, 9 }, \n\t\t\t{ 0, 8, 9 },\n\t\t\t{ 9 }\n\t};\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\n\t\tT = scanner.nextInt();\n\t\tscanner.nextLine();\n\t\twhile (--T >= 0) {\n\t\t\tString num = scanner.nextLine();\n\t\t\tchar[] numArr = num.toCharArray();\n\t\t\tres = new char[num.length()];\n\t\t\tsearch(numArr, 0, 1, false);\n\t\t\tSystem.out.println(new String(res));\n\t\t}\n\t}\n\n\tprivate static boolean search(char[] numArr, int length, int n, boolean sw) {\n\t\tif(length == numArr.length)\n\t\t\treturn true;\n\t\tint st = boost[n].length - 1;\n\t\tint nowF = numArr[length] - '0';\n\t\t\n\t\tif(sw){\n\t\t\tchar c = (char) ('0' + boost[n][boost[n].length - 1]);\n\t\t\tfor (int i = length; i < numArr.length; ++i) {\n\t\t\t\tres[i] = c;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tfor(int i = st;i >= 0; --i){\n\t\t\tif(!sw && boost[n][i] > nowF)\n\t\t\t\tcontinue;\n\t\t\tres[length] = (char) ('0' + boost[n][i]);\n\t\t\tif(boost[n][i] < nowF || sw){\n\t\t\t\tif(search(numArr, length + 1, boost[n][i], true))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t\tif(search(numArr, length + 1, boost[n][i], false))\n\t\t\t\t\treturn true;\n\t\t\t\t\n\t\t}\n\t\treturn false;\n\t}\n\n}",
        "python": "def getMax(lis,dic):\n    i=0\n    while True:\n        if i==len(lis)-1:\n            break\n        if lis[i + 1] not in dic[lis[i]]:\n            if lis[i+1]>lis[i]:\n                lis[i+1]=lis[i]\n                lis[i + 2:] = [9] * len(lis[i + 2:])\n            else:\n                if 0 in dic[lis[i]]:\n                    lis[i+1]=0\n                else:\n                    lis[i]=lis[i]-1\n                    lis[i+1:]=[9]*len(lis[i+1:])\n                    if i==0:\n                        return lis\n                    elif lis[i] in dic[lis[i-1]]:\n                        return lis\n                    else:\n                        i=i-2\n        i+=1\n    return lis\n\ndic={}\ndic[0]=[0]\ndic[1]=[i for i in range(10)]\ndic[2]=[0,2,3,5,6,8,9]\ndic[3]=[3,6,9]\ndic[4]=[0,4,5,6,7,8,9]\ndic[5]=[0,5,6,8,9]\ndic[6]=[6,9]\ndic[7]=[0,7,8,9]\ndic[8]=[0,8,9]\ndic[9]=[9]\n\nN=int(input())\nfor _ in range(N):\n    K=list(input())\n    K=[int(i) for i in K]\n    lis=getMax(K,dic)\n    num=''\n    for i in range(len(lis)):\n        num+=str(lis[i])\n    print(int(num))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>Spring Outing",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader stdin = new BufferedReader(new InputStreamReader(\n                System.in));\n        String str = stdin.readLine();\n        while (str != null && str.length() > 0) {\n            String[] ss = str.split(\" \");\n            int N = Integer.parseInt(ss[0]);\n            int K = Integer.parseInt(ss[1]);\n            int[][] favor = new int[N][K + 1];//favor[i][j]\u8868\u793a\u7b2ci\u500b\u4eba\u5bf9\u7b2cj\u4e2a\u666f\u70b9\u7684\u559c\u6b22\u7a0b\u5ea6\uff0c\u503c\u8d8a\u5c0f\u8868\u793a\u8d8a\u559c\u6b22\n            for (int i = 0; i < N; i++) {\n                str = stdin.readLine();\n                ss = str.split(\" \");\n                for (int j = 0; j < K + 1; j++) {\n                    favor[i][Integer.parseInt(ss[j])] =j ;\n                }\n            }\n            int votes=0;\n            //\u4ece\u6700\u540e\u4e00\u8f6e\u6295\u7968\u5f00\u59cb\u5f80\u56de\u627e\uff0c\u56e0\u4e3a\u5230\u4e86\u540e\u9762\u6ca1\u6709\u522b\u7684\u9009\u62e9\u4e86\uff0c\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u6e05\u695a\u81ea\u5df1\u662f\u5426\u6295\u7968\uff0c\u6709\u70b9\u9012\u5f52\u7684\u601d\u60f3\n            int finalChoice=0;\n            for(int i=K;i>=1;i--){\n                votes=0;\n                for(int j=0;j<N;j++){\n                    //\u6bd4\u8f83\u6bcf\u4e00\u4e2a\u4eba\u5bf9\u5f53\u524d\u65b9\u6848\u548c\u4e0b\u4e00\u65b9\u6848\u7684\u559c\u6b22\u7a0b\u5ea6\uff0c\u6765\u51b3\u5b9a\u662f\u5426\u6295\u7968\n                    if(favor[j][i]<favor[j][finalChoice]){\n                        votes++;\n                    }\n                }\n                if(votes>N-votes){//\u6295\u7968\u8d85\u8fc7\u4e00\u534a\uff0c\u66f4\u65b0\u6700\u7ec8\u65b9\u6848\n                    finalChoice=i;\n                }\n            }\n            if(finalChoice==0){\n                System.out.println(\"otaku\");\n            }else{\n                System.out.println(finalChoice);\n            }\n            str = stdin.readLine();\n        }\n    }\n}\n",
        "python": "def vote(a):\n    global con\n    vote = 0\n    for i in range(0,n):\n        if lst[i][a]<lst[i][con]:\n            vote+=1\n    if vote>n//2:\n        con = a\ntry:\n    while True:\n#        lst = np.zeros((1001,1001),dtype=np.int)\n        n,k = map(int,input().split())\n        lst,con = [[0 for i in range(0,k+1)] for i in range(0,n)],0\n        for i in range(0,n):\n            tem = list(map(int,input().split()))\n            for j in range(0,k+1):\n                lst[i][tem[j]] = j    \n        for i in range(k,0,-1):\n            vote(i)\n        if con==0:\n            print('otaku')\n        else:\n            print(con)     \nexcept:\n    pass"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>S-expression",
        "java": "import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main\n{\n\tHashMap<String, String> hashmap;\n\t\n\tpublic static void main(String[] args)\n\t{\n\t\tMain t=new Main();\n\t\tt.getResult();\n\t}\n\t\n\t\n\tpublic void getResult()\n\t{\n\t\tScanner cin=new Scanner(System.in);\n\t\tint t=cin.nextInt();\n\t\tcin.nextLine();\n\t\twhile(t>0)\n\t\t{\n\t\t\tString s=cin.nextLine();\n\t\t\thashmap=new HashMap<>();\n\t\t\tint[] ret=valueOfExp(s,0,s.length()-1);\n\t\t\tswitch (ret[0])\n\t\t\t{\n\t\t\tcase 0:\n\t\t\t\tSystem.out.println(ret[1]);\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tSystem.out.println(ret[1]==1?\"true\":\"false\");\n\t\t\t\tbreak;\n\t\t\tcase -1:\n\t\t\t\tSystem.out.println(\"Type Mismatch\");\n\t\t\t\tbreak;\n\t\t\tcase -2:\n\t\t\t\tSystem.out.println(\"Division By Zero\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\tcase -3:\n\t\t\t\tSystem.out.println(\"Unbound Identifier\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tt--;\n\t\t}\n\t}\n\t\n\t\n\tpublic int[] valueOfExp(String s,int begin,int end)\n\t{\n\t\tif(s.charAt(begin)=='('&&s.charAt(end)==')')\n\t\t{\n\t\t\tbegin+=2;\n\t\t\tend-=2;\n\t\t}\n\t\t\n\t\tArrayList<Integer> divideInfo=divideStr(s, begin, end);\n\t\t\n\t\tswitch (divideInfo.get(0))\n\t\t{\n\t\tcase 1:\n\t\t{\n\t\t\tint[] part1=valueOfExp(s,divideInfo.get(1),divideInfo.get(2));\n\t\t\tint[] part2=valueOfExp(s,divideInfo.get(3),divideInfo.get(4));\n\t\t\tint[] part3=valueOfExp(s,divideInfo.get(5),divideInfo.get(6));\n\t\t\tif(!(part1[0]==1||part1[0]==3))\n\t\t\t\treturn new int[] {-1,0};\n\t\t\telse {\n\t\t\t\treturn part1[1]==1?part2:part3;\n\t\t\t}\n\t\t}\n\t\tcase 2:\n\t\t{\n\t\t\tint[] part1=valueOfExp(s,divideInfo.get(1),divideInfo.get(2));\n\t\t\tint[] part2=valueOfExp(s,divideInfo.get(3),divideInfo.get(4));\n\t\t\tif(part1[0]<2)\n\t\t\t\treturn new int[]{-1,0};\n\t\t\t\n\t\t\tString word=s.substring(divideInfo.get(1),divideInfo.get(2)+1);\n\t\t\tif(part2[0]==1||part2[0]==3)\n\t\t\t\thashmap.put(word, part2[1]==1?\"true\":\"false\");\n\t\t\telse if(part2[0]==0||part2[0]==4)\n\t\t\t{\n\t\t\t\thashmap.put(word, String.valueOf(part2[1]));\n\t\t\t}\n\t\t\t\n\t\t\tint[] part3=valueOfExp(s,divideInfo.get(5),divideInfo.get(6));\n\t\t\tif(part3[0]==2)\n\t\t\t\treturn new int[]{-3,0};\n\t\t\t\n\t\t\tif(part3[0]==3)\n\t\t\t\treturn new int[]{1,(part3[1]==1?1:0)};\n\t\t\telse if(part3[0]==4)\n\t\t\t\treturn new int[]{0,part3[1]};\n\t\t\telse {\n\t\t\t\treturn part3;\n\t\t\t}\n\t\t}\n\t\tcase 3:\n\t\t\treturn new int[]{1,1};\n\t\t\n\t\tcase 4:\n\t\t\treturn new int[]{1,0};\n\t\n\t\tcase 5:\n\t\t{\n\t\t\tint[] part1=valueOfExp(s,divideInfo.get(1),divideInfo.get(2));\n\t\t\tint[] part2=valueOfExp(s,divideInfo.get(3),divideInfo.get(4));\n\t\t\tif(!((part1[0]==0||part1[0]==4)&&(part2[0]==0||part2[0]==4)))\n\t\t\t\treturn new int[]{-1,0};\n\t\t\tchar op=s.charAt(begin);\n\t\t\tint[] retarr=new int[2];\n\t\t\tretarr[0]=0;\n\t\t\tswitch (op)\n\t\t\t{\n\t\t\tcase '+':\n\t\t\t\tretarr[1]=part1[1]+part2[1];\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tretarr[1]=part1[1]-part2[1];\n\t\t\t\tbreak;\n\t\t\tcase '*':\n\t\t\t\tretarr[1]=part1[1]*part2[1];\n\t\t\t\tbreak;\n\t\t\tcase '/':\n\t\t\t\tif(part2[1]==0)\n\t\t\t\t{\n\t\t\t\t\tretarr[0]=-2;\n\t\t\t\t\tretarr[1]=0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tretarr[1]=part1[1]/part2[1];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\tretarr[0]=1;\n\t\t\t\tretarr[1]=part1[1]>part2[1]?1:0;\n\t\t\t\tbreak;\n\t\t\tcase '<':\n\t\t\t\tretarr[0]=1;\n\t\t\t\tretarr[1]=part1[1]<part2[1]?1:0;\n\t\t\t\tbreak;\n\t\t\tcase '=':\n\t\t\t\tretarr[0]=1;\n\t\t\t\tretarr[1]=part1[1]==part2[1]?1:0;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn retarr;\n\t\t}\n\t\tcase 6:\n\t\t{\n\t\t\tString word=s.substring(begin, end+1);\n\t\t\tif(hashmap.containsKey(word))\n\t\t\t{\n\t\t\t\tString val=hashmap.get(word);\n\t\t\t\tif(val.compareTo(\"true\")==0)\n\t\t\t\t\treturn new int[] {3,1};\n\t\t\t\telse if(val.compareTo(\"false\")==0)\n\t\t\t\t\treturn new int[] {3,0};\n\t\t\t\treturn new int[] {4,Integer.valueOf(val)};\n\t\t\t}\n\t\t\t\n\t\t\tchar firstChar=word.charAt(0);\n\t\t\tif(firstChar>='0'&&firstChar<='9')\n\t\t\t\treturn new int[]{0,Integer.valueOf(word)};\n\t\t\treturn new int[]{2,0};\n\t\t}\t\n\t\t\n\t\tdefault:\n\t\t\treturn new int[]{-4,0};\n\t\t}\n\t}\n\t\n\tpublic ArrayList<Integer> divideStr(String s ,int begin,int end)\n\t{\n\t\tStringBuilder sb=new StringBuilder();\n\t\tint i=begin;\n\t\tfor(;i<=end;i++)\n\t\t\tif(s.charAt(i)!=' ')\n\t\t\t\tsb.append(s.charAt(i));\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\tString word=sb.toString();\n\t\tArrayList<Integer> arraylist=new ArrayList<>();\n\t\t\n\t\tif(word.compareTo(\"if\")==0)\n\t\t{\n\t\t\tarraylist.add(1);\n\t\t\tfindKExp(s, i+1, end, 3, arraylist);\n\t\t}\n\t\telse if(word.compareTo(\"let\")==0)\n\t\t{\n\t\t\tarraylist.add(2);\n\t\t\tint leftcount=1;\n\t\t\tint leftindex=i+1;\n\t\t\tint rightindex=i+1;\n\t\t\tfor(;i<=end;i++)\n\t\t\t\tif(s.charAt(i)==')')\n\t\t\t\t\tif(--leftcount==0)\n\t\t\t\t\t{\n\t\t\t\t\t\trightindex=i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\tfindKExp(s, leftindex+2, rightindex-2, 2, arraylist);\n\t\t\tfindKExp(s, rightindex+2, end, 1, arraylist);\n\t\t}\n\t\telse if(word.compareTo(\"true\")==0)\n\t\t{\n\t\t\tarraylist.add(3);\n\t\t}\n\t\telse if(word.compareTo(\"false\")==0)\n\t\t{\n\t\t\tarraylist.add(4);\n\t\t}\n\t\telse if(word.compareTo(\"+\")==0||word.compareTo(\"-\")==0||word.compareTo(\"*\")==0||word.compareTo(\"/\")==0||word.compareTo(\">\")==0||word.compareTo(\"<\")==0||word.compareTo(\"=\")==0)\n\t\t{\n\t\t\tarraylist.add(5);\n\t\t\tfindKExp(s, i+1, end, 2, arraylist);\n\t\t}\n\t\telse {\n\t\t\tarraylist.add(6);\n\t\t}\n\t\treturn arraylist;\n\t}\n\t\n\tpublic void findKExp(String s,int begin,int end,int k,ArrayList<Integer> arraylist)\n\t{\n\t\tint leftcount=0;\n\t\tint pre=begin-1;\n\t\tint cur=begin;\n\t\tint cnt=0;\n\t\twhile(cnt<k&&cur<=end)\n\t\t{\n\t\t\tchar c=s.charAt(cur);\n\t\t\tif(c=='(')\n\t\t\t\tleftcount++;\n\t\t\telse if(c==')')\n\t\t\t\tleftcount--;\n\t\t\telse if(c==' '&&leftcount==0)\n\t\t\t{\n\t\t\t\tarraylist.add(pre+1);\n\t\t\t\tarraylist.add(cur-1);\n\t\t\t\tpre=cur;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t\tcur++;\n\t\t}\n\t\tarraylist.add(pre+1);\n\t\tarraylist.add(cur-1);\n\t}\n\t\n}\n",
        "python": "from functools import reduce\nimport math\ndef char2int(s):\n    return {'0':0,'1':1,'2':2,'3':3,'4':4,'5':5,'6':6,'7':7,'8':8,'9':9}[s]\ndef mulit_int(x,y):\n    return 10*x+y\n\ndef str2int(s):\n    if s.find('.')==-1:#\u4e0d\u662f\u6d6e\u70b9\u6570\n        return reduce(mulit_int,map(char2int,s))\n    else:#\u662f\u6d6e\u70b9\u6570\n        s1=s.split('.')\n        s2int=reduce(mulit_int,map(char2int,s1[0])) #\u6574\u6570\u90e8\u5206\n\n        s2float=reduce(mulit_int,map(char2int,s1[1]))*0.1**len(s1[1]) #\u5c0f\u6570\u90e8\u5206\n        return s2int+s2float\n\ndef findright(elem,left,right):\n    if left==right:\n        return right\n    if elem[left]=='(':\n        sig = 1\n    else:\n        sig = 0\n    i = left\n    while sig!=0 and i<=right:\n        i+=1\n        if elem[i]=='(':\n            sig+=1\n        elif elem[i]==\")\":\n            sig-=1\n    return i\n\ndef cal(elem,left,right):\n    if elem[left]=='(':\n        if elem[left+1]=='if':\n            sleft = left+2\n            sright = findright(elem,sleft,right)\n            s = cal(elem,sleft,sright)\n            if s=='Type Mismatch' or s=='Division By Zero' or s=='Unbound Identifier':\n                return s\n            aleft = sright+1\n            aright = findright(elem,aleft,right)\n            bleft = aright+1\n            bright = findright(elem,bleft,right)\n            if s=='true':\n                return cal(elem,aleft,aright)\n            elif s == 'false':\n                return cal(elem,bleft,bright)\n            else:\n                return 'Type Mismatch'\n        elif elem[left+1]=='let':\n            x = elem[left+3]\n            aleft = left+4\n            aright = findright(elem,aleft,right)\n            a = cal(elem,aleft,aright)\n            if a=='Type Mismatch' or a=='Division By Zero' or a=='Unbound Identifier':\n                return a\n            variable[x] = a#######\n            bleft = aright+2\n            bright = findright(elem,bleft,right)\n            out = cal(elem,bleft,bright)\n            if x in variable:\n                variable.pop(x)\n            return out\n        op = elem[left+1]\n        xleft = left+2\n        xright = findright(elem,xleft,right)\n        xRes = cal(elem,xleft,xright)\n        if xRes == \"Type Mismatch\" or xRes == \"Division By Zero\" or xRes == \"Unbound Identifier\":\n            return xRes\n        yleft = xright+1\n        yright = findright(elem,yleft,right)\n        yRes = cal(elem,yleft,yright)\n        if yRes=='Type Mismatch' or yRes=='Division By Zero' or yRes=='Unbound Identifier':\n            return yRes\n        if op=='/' and yRes=='0':\n            return 'Division By Zero'\n        if (not xRes[0].isdigit()) or (not yRes[0].isdigit()): ####\n            return 'Type Mismatch'\n        if op=='+':\n            return str(str2int(xRes)+str2int(yRes))\n        elif op=='-':\n            return str(str2int(xRes)-str2int(yRes))\n        elif op=='*':\n            return str(str2int(xRes)*str2int(yRes))\n        elif op=='/':\n            if str2int(xRes)%str2int(yRes)==0:\n                return str(str2int(xRes)//str2int(yRes))\n            else:\n                return str(str2int(xRes)/str2int(yRes))\n        elif op=='<':\n            if xRes<yRes:\n                return \"true\"\n            else:\n                return 'false'\n        elif op=='>':\n            if xRes>yRes:\n                return \"true\"\n            else:\n                return 'false'\n        elif op=='=':\n            if xRes==yRes:\n                return \"true\"\n            else:\n                return 'false'\n    elif elem[left][0].isdigit() or elem[left]=='true' or elem[left]=='false':\n        return elem[left]\n    elif elem[left]!='let' and elem[left]!='if':\n        if elem[left] in variable:\n            return variable[elem[left]]\n        else:\n            return 'Unbound Identifier'\n    return 'Error'\nvariable = {}\nn = input()\nn = int(n)\nfor i in range(n):\n    elem = input().split()\n    print(cal(elem,0,len(elem)-1))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6700\u9ad8\u5206\u662f\u591a\u5c11",
        "java": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        while(in.hasNext()) {\n            int n = in.nextInt();\n            int m = in.nextInt();\n            int[] scores = new int[n];\n            for (int i = 0; i < n; i++) {\n                scores[i] = in.nextInt();\n            }\n            for (int i = 0; i <m; i++) {\n                char c = in.next();.\n                int a = in.nextInt();\n                int b = in.nextInt();\n                if (c == 'Q') { \n                    System.out.println(findMax(scores, a, b));\n                } else if (c == 'U') {\n                    scores[a] = b;\n                }\n            }\n        }\n    }\n    \n    \n    public static int findMax(int[] numbers, int a, int b) {\n        int max = 0;\n        for (int i = a; i <= b && i < numbers.length(); i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n            }\n        }\n        return max;\n    }\n}",
        "python": "def solution()\n    n, m = map(int, input().split())\n    score = list(map(int,input().split()))\n    for i in range(m):\n        op, a, b = input().split()\n        if op == 'Q':\n            print(max(score[int(a)-1 : int(b)-1]))\n        else:\n            score[int(a)-1] = int(b)\n\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7b80\u5355\u9519\u8bef\u8bb0\u5f55",
        "java": "import java.util.*;\nimport java.io.*;\n  \npublic class Main {\n    //copy\n    public static ArrayList<Record> records=new ArrayList<Record>();\n    public static void main(String[] args) throws IOException{\n        BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in));\n        String info = null;\n        while((info = bufferedreader.readLine())!=null){\n            String newrecord = info.substring(info.lastIndexOf(\"\\\\\") + 1);\n            int index = find(records,newrecord);\n            if(index == -1){\n                Record newRecord = new Record();\n                newRecord.record = newrecord;\n                newRecord.count = 1;\n                records.add(newRecord);\n            }\n        }\n        Record[] recordArray = records.toArray(new Record[records.size()]);\n        sortt(recordArray);\n        printt(recordArray);\n    }\n     \n    //\u901a\u8fc7\u8bb0\u5f55\u7684\u6587\u4ef6\u540d\u79f0\u4e0e\u8bb0\u5f55list\u4e2d\u8fdb\u884c\u6bd4\u8f83\uff0c\u6ca1\u6709\u7684\u8bdd\u8fd4\u56de-1\uff0c\u6709\u7684\u8bdd\u5c06\u8bb0\u5f55\u6570+1\n    public static int find(List<Record> records,String newrecord){\n        int index = -1;\n        for(Record subRecord : records){\n            if(subRecord.record.equals(newrecord)){\n                subRecord.count++;\n                index = 1;\n            }\n        }\n        return index;\n    }\n     \n    //\u901a\u8fc7Record\u6570\u7ec4\u4e2d\u8bb0\u5f55\u6570\u7684\u5927\u5c0f\u8fdb\u884c\u6570\u7ec4\u6392\u5e8f\n    public static void sortt(Record[] recordArray){\n        Record temp;\n        int j;\n        for(int i = 1; i < recordArray.length; i++){\n            temp = recordArray[i];\n            for (j = i; j > 0 && (temp.count > recordArray[j-1].count); j--) {\n                recordArray[j] = recordArray[j-1];\n            }\n            recordArray[j] = temp;\n        }\n    }\n     \n    //\u5c06\u6570\u7ec4\u7684\u524d\u516b\u4f4d\u6570\u636e\u6253\u5370\u51fa\u6765\n    public static void printt(Record[] recordArray){\n        int n;\n        if(recordArray.length <= 8){\n            n = recordArray.length;\n        }else{\n            n = 8;\n        }\n        for(int i=0; i<n; i++){\n            String recordStr = recordArray[i].record;\n            String fileName = recordStr.substring(0,recordStr.indexOf(\" \"));\n            if(fileName.length() > 16){\n                String hang = recordStr.substring(recordStr.indexOf(\" \"));\n                fileName = fileName.substring(fileName.length()-16,fileName.length());\n                String pStr = fileName + hang;\n                System.out.println(pStr + \" \" + recordArray[i].count);\n                 \n            }else{\n                System.out.println(recordStr + \" \" + recordArray[i].count);\n            }\n        }\n    }\n     \n    //\u521b\u5efa\u8bb0\u5f55\u7684\u5b9e\u4f53\u7c7b\n    static class Record{\n        String record;\n        int count;\n    }\n}",
        "python": "import sys\nres = []\nfor i in sys.stdin:\n    res.append(i.strip().split())\n\nout = dict()\nfor i in res:\n    a = i[0].split('\\\\')[-1]\n    out[(a, i[1])] = out.get((a, i[1]), 0) + 1\n\ntmp = []\nfor i in res:\n    a = i[0].split('\\\\')[-1]\n    if (a, i[1]) in out:\n        tmp.append((a, i[1], out[(a, i[1])]))\n        del out[(a, i[1])]\ntmp = sorted(tmp, key=lambda x: x[2], reverse=True)\nfor i in tmp[:8]:\n    a = i[0].split('\\\\')[-1]\n    print(a[-16:], end=' ')\n    print(i[1], end=' ')\n    print(i[2])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6251\u514b\u724c\u5927\u5c0f",
        "java": "import java.io.*;\nimport java.util.*;\npublic class Main {\n      \n    static String base=\"345678910JQKA2jokerJOKER\";\n        public static void main(String args[]) throws IOException{\n              \n            BufferedReader br = new BufferedReader(new InputStreamReader(System.in) );\n            String input = br.readLine();\n            String[] inputArray = input.split(\"-\");\n            String result = compare(inputArray[0].split(\" \"), inputArray[1].split(\" \"));\n            System.out.println(result);\n        }\n          \n        /**\n         * \u5b57\u7b26\u4e32\u6bd4\u8f83\u5927\u5c0f\n         */\n        public static String compare(String[] A,String[] B){\n              \n            if(A.length == B.length){\n                if( compareMax(A[0],B[0]) ){\n                    return compose(A);\n                }else{\n                    return compose(B);\n                }\n            }\n              \n            if(A.length == 2 && base.indexOf(A[0])>13 ){\n                return compose(A);\n            }\n              \n            if(B.length == 2 && base.indexOf(B[0])>13){\n                return compose(B);\n            }\n              \n            if(A.length == 4){\n                return compose(A);\n            }\n              \n            if(B.length == 4){\n                return compose(A);\n            }\n              \n            return \"ERROR\";\n              \n        }\n          \n        /**\n         * \u5355\u4e2a\u5b57\u7b26\u6bd4\u8f83\u5927\u5c0f\n         * @param A\n         * @param B\n         * @return\n         */\n        public static boolean compareMax(String A,String B){\n            if(base.indexOf(A) > base.indexOf(B)){\n                return true;\n            }else{\n                return false;\n            }\n        }\n          \n        /**\n         * \u7ec4\u88c5\u5b57\u7b26\u4e32\n         */\n        public static String compose(String[] A){\n            StringBuffer sb = new StringBuffer();\n            sb.append(A[0]);\n            for(int i=1;i<A.length;i++){\n                sb.append(\" \"+A[i]);\n            }\n            return sb.toString();\n        }\n      \n         \n}",
        "python": "lists = list(('3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A', '2', 'joker', 'JOKER'))\nl = input()\nA = l.split('-')[0]\nA = A.split(' ')\nB = l.split('-')[1]\nB = B.split(' ')\n\n# A B \u662f\u4e24\u4e2a\u5217\u8868\ndef mysort(A, B):\n    if 'joker JOKER'.split(' ') in (A, B):\n        if A == ['joker', 'JOKER']:\n            return A\n        else:\n            return B\n    if len(A) == len(B):\n        if lists.index(A[0])>=lists.index(B[0]):\n            return A\n        else:\n            return B\n    elif len(A) == 4 or len(B) == 4:\n        if len(A) == 4:\n            return A\n        return B\n    else:\n        return 'ERROR'\nresult = mysort(A, B)\nif result == 'ERROR':\n    print('ERROR')\nelse:\n    print(' '.join(result))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u7b26\u4e32\u8ba1\u6570",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\npublic class Main {\n public static int countTest(String[] str) {\n \n        char[] ch1 = str[0].toCharArray();\n        char[] ch2 = str[1].toCharArray();\n        int len1=Integer.parseInt(str[2]);\n        int len2=Integer.parseInt(str[3]);\n        long res = 0;\n        for (int i = len1; i <= len2; i++) {\n            // \u7528\u4e8e\u7edf\u8ba1a[1]~a[i]\u7684\u4e2a\u6570\u548c b[1]~b[i]\u7684\u4e2a\u6570\uff0c\n            // \u4f8ba[1]-a[3] = abc \u5219\u6bcf\u4e00\u4f4d\u7684\u4e2a\u6570\u5206\u522b\u4e3a 123\n            // \u5373a[1]-'a'-1=1,a[2]-'a'-1=2,a[3]-'a'-1=3\n            long suma = 0;\n            long sumb = 0;\n            int min = ch1.length > i ? i : ch1.length;\n            for (int j = 0; j < min; j++) { // \u627e\u5230\u6bd4ch1 \u751a\u4e8e\u5b57\u7b26\u4e32\u5c0f\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\n                suma = suma + (ch1[j] - 'a') * (long) Math.pow(26, i - 1 - j);\n            }\n            min = ch2.length > i ? i : ch2.length;\n            for (int j = 0; j < min; j++) { // \u627e\u5230\u6bd4ch2 \u5269\u4f59\u5b57\u7b26\u4e32\u5c0f\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\n                sumb = sumb + (ch2[j] - 'a') * (long) Math.pow(26, i - 1 - j);\n            }\n            res = res + sumb - suma;\n        }\n \n        res--;\n        res = res % 1000007;\n        return (int) res;\n    }\n \n \n    public static void main(String[] args) throws IOException {\n \n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = br.readLine();\n        while (s != null) {\n  \n            System.out.println(countTest(s.split(\" \")));\n            s = br.readLine();\n        }\n    }\n}",
        "python": "def count(s1,s2,l1,l2):\n    n,m = len(s1),len(s2)\n    lng = max(n,m)\n    s1 += 'a'*(l2 - n)\n    s2 += 'a'*(l2 - m)\n    s1 = [ord(x) for x in s1]\n    s2 = [ord(x) for x in s2]\n\n    res = 0\n    dp = [0 for i in range(l2)]\n    a = ord('a')\n\n    for i in range(l2):\n        dp[i] = 26*dp[i-1] + (s2[i] - s1[i])\n        if i >= l1 -1: res += dp[i]\n\n    if n == m: res -= 1\n    return res % 1000007\n\nwhile 1:\n    try:\n        inputs = input()\n    except:\n        break\n    inputs = inputs.split()\n    s1,s2,l1,l2 = inputs[0],inputs[1],int(inputs[2]),int(inputs[3])\n    res = count(s1,s2,l1,l2)\n    print(res)\n\n\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5e73\u5747\u5e74\u9f84",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n \npublic class Main {\n \n    public static void main(String[] args) throws Exception{\n        Main s = new Main();\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str;\n        while((str=br.readLine())!=null){\n             String[] content = str.split(\" \");\n             int W = Integer.parseInt(content[0]);\n             int Y = Integer.parseInt(content[1]);\n             double x = Double.parseDouble(content[2]);\n             int N = Integer.parseInt(content[3]);\n             System.out.println(s.averageAge(W, Y, x, N));\n        }\n        br.close();\n \n    }\n     \n    public int averageAge(int W, int Y, double x, int N) {\n        double y = Y;\n        double w = W * x ;\n         \n        for(int i=1; i<=N; i++) {\n            y++;\n            y = ((W - w) * y + 21 * w) / W;\n        }\n        return (int) (y % 1 != 0 ? y / 1 + 1 : y / 1);\n    }\n \n}",
        "python": "import math\nwhile True:\n    try:\n        w,y,x,n = input().split()\n        x = float(x)\n        w,y,n = int(w),int(y),int(n)\n        for i in range(n):\n            y = ((y+1)*(w-w*x) + 21*x*w) / w\n        print(math.ceil(y))\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u7f6a\u72af\u8f6c\u79fb",
        "java": "\nimport java.util.*;\nimport java.io.*;\npublic class Main{\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str;\n        while((str=br.readLine())!=null){\n            String[] s = str.trim().split(\" \");\n            int n = Integer.valueOf(s[0]);\n            int t = Integer.parseInt(s[1]);\n            int c = Integer.parseInt(s[2]);\n            int[] value = new int[n];\n            if((str=br.readLine())!=null){\n                String[] s2 = str.trim().split(\" \");\n                for(int i =0;i<n;i++){\n                    value[i] = Integer.parseInt(s2[i]);\n                }\n            }\n            System.out.println(carryMan(n,t,c,value));\n        }\n        br.close();\n    }\n    public static int carryMan(int n,int t,int c,int[]value){\n        int sumValue=0;\n        int result=0;\n        for(int i=0;i<c;i++){\n            sumValue+=value[i];\n        }\n        if(sumValue<=t){\n            result++;\n        }\n        for(int i=c;i<n;i++){\n            sumValue=sumValue-value[i-c]+value[i];\n            if(sumValue<=t)\n                result++;           \n        }\n        return result;\n    }\n}",
        "python": "def Solu(nums,t,n,c):\n    dp=sum(nums[i] for i in range(c))\n    res=0\n    for i in range(c,n):\n        if dp<=t:\n            res+=1\n        dp=dp+nums[i]-nums[i-c]\n    if dp<=t:\n        res+=1\n    print(res)\n \nwhile True:\n    try:\n        n,t,c=map(int,input().split())\n        nums=list(map(int,input().split()))\n        Solu(nums,t,n,c)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u88c1\u51cf\u7f51\u683c\u7eb8",
        "java": "import java.util.*;\nimport java.io.*;\npublic class Main {\n\tpublic static void main(String [] args) throws IOException{\n\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str;\n        int i;\n        int maxx,minx,maxy,miny;\n        while((str=br.readLine())!=null){\n        \tint n=Integer.parseInt(str);\n        \t\n        \tif((str=br.readLine())!=null){\n            \tString data[]=str.split(\" \");\n            \tmaxx=Integer.parseInt(data[0]);\n            \tminx=Integer.parseInt(data[0]);\n            \tmaxy=Integer.parseInt(data[1]);\n            \tminy=Integer.parseInt(data[1]);\n            \tfor(i=1;i<n&&((str=br.readLine())!=null);i++){\n                 \tdata=str.split(\" \");\n                 \tint x=Integer.parseInt(data[0]);\n                 \tint y=Integer.parseInt(data[1]);\n                 \tif(x>maxx) maxx=x;\n                 \tif(x<minx) minx=x;\n                    if(y>maxy) maxy=y;\n                 \tif(y<miny) miny=y;\n                 }\n            \tlong area;\n                int p=maxx-minx;\n                int q=maxy-miny;\n                if(p>q) area=(long)p*(long)p;\n                else area=(long)q*(long)q;\n                System.out.println(area);\n            }\n        }\n\n        br.close();\n\t}\n}\n",
        "python": "import sys\nwhile True:\n    try:\n        n = int(sys.stdin.readline().strip())\n        x = []\n        y = []\n        for i in range(n):\n            xy = sys.stdin.readline().strip()\n            xi,yi = list(map(int,xy.split()))\n            x.append(xi)\n            y.append(yi)\n        print(max(max(x) - min(x),max(y) - min(y))**2)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9493\u9c7c\u6bd4\u8d5b",
        "java": "import java.io.*;\n  \npublic class Main {\n  \n    public static void main(String[] args) throws Throwable{\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        String str=null;\n        while((str=br.readLine())!=null)\n        {\n            String[] strs=str.trim().split(\" \");\n            int n=Integer.parseInt(strs[0]);\n            int m=Integer.parseInt(strs[1]);\n            int x=Integer.parseInt(strs[2]);\n            int y=Integer.parseInt(strs[3]);\n            int t=Integer.parseInt(strs[4]);\n              \n            double[][] fish=new double[n][m];\n              \n            double sum=0;\n            for(int i=0;i<n;i++)\n            {\n            str=br.readLine();\n            strs=str.split(\" \");\n            for(int j=0;j<m;j++)\n                {\n                fish[i][j]=Double.parseDouble(strs[j]);\n                sum+=fish[i][j];\n            }\n        }\n            double cc=1-Math.pow((1-fish[x-1][y-1]),t);\n             \n            double ss=1-Math.pow((1-(sum/(n*m))),t);\n            if(cc - ss > 0)\n                {\n                System.out.println(\"cc\");\n                System.out.printf(\"%.2f\\n\", cc);\n            }\n            else if(ss - cc > 0)\n                {\n                System.out.println(\"ss\");\n                 System.out.printf(\"%.2f\\n\", ss);\n            }\n            else\n                {\n                System.out.println(\"equal\");\n                System.out.printf(\"%.2f\\n\", cc);\n            }\n        }\n        br.close();\n        }\n  \n  \n  \n}",
        "python": "import sys\nwhile True:\n    try:\n        n,m,x,y,t = map(int,input().strip().split())\n        s = 0\n        r1 = 0\n        for i in range(n):\n            tmp = list(map(float,input().strip().split()))\n            if i == x - 1:\n                r1 = 1 - (1 - tmp[y - 1]) ** t\n            s += sum(tmp)\n        r2 = 1 - ((1 - s / (n * m)) ** t)\n        if r1 > r2:\n            print('cc')\n            print('%.2f' % r1)\n        elif r1 < r2:\n            print('ss')\n            print('%.2f' % r2)\n        else:\n            print('equal')\n            print('%.2f' % r1)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8611\u83c7\u9635",
        "java": "import java.io.*;\npublic class Main{\n    public static void main(String [] args) throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str;\n        while((str=br.readLine())!=null){\n            String[] strs = str.trim().split(\" \");\n            int n = Integer.parseInt(strs[0]);\n            int m = Integer.parseInt(strs[1]);\n            int k = Integer.parseInt(strs[2]);\n            boolean[][] haved = new boolean[n][m];\n            double[][] p = new double[n][m];\n            for(int i = 0; i < k; i++){\n                str = br.readLine();\n                strs = str.trim().split(\" \");\n                haved[Integer.parseInt(strs[0])-1][Integer.parseInt(strs[1])-1] = true;\n            }\n            //\n            for(int i = 0; i < n; i++){\n                for(int j = 0; j < m; j++){\n                    if(i == 0 && j == 0){\n                        p[i][j] = 1;\n                    }\n                    else if(haved[i][j]){\n                        p[i][j] = 0;\n                    }\n                    else\n                        p[i][j] = (i==0?0:(j+1==m?p[i-1][j]:p[i-1][j]*0.5))+(j==0?0:(i+1==n?p[i][j-1]:p[i][j-1]*0.5));\n                }\n            }\n            System.out.printf(\"%.2f\\n\", p[n-1][m-1]);\n        }\n        br.close();\n    }\n}",
        "python": "while True:\n        try:\n            n,m,k=map(int,[i for i in input().split()])\n            A=[]\n            for _ in range(k):\n                A.append(list(map(int, input().split())))\n            A=[[i-1,j-1] for i,j in A]\n            dp=[[1.0 for i in range(m)]for j in range(n)]\n            for i in range(n):\n                for j in range(m):\n                    if [i,j] in A:\n                        dp[i][j]=0\n                    elif i == 0 and j == 0:\n                        dp[i][j] = 1.0\n                    elif i == 0:\n                        dp[i][j] = dp[i][j - 1] * (1 if i == n - 1 else 0.5)#\u53ea\u6709\u4e00\u884c\u7684\u60c5\u51b5\uff08if\uff09\n                    elif j == 0:\n                        dp[i][j] = dp[i - 1][j] * (1 if j == m - 1 else 0.5)#\u540c\u7406\uff0c\u5217\n                    else:\n                        dp[i][j] = dp[i - 1][j] * (1 if j == m - 1 else 0.5) + dp[i][j - 1] * (1 if i == n - 1 else 0.5)\n            print('%.2f' % dp[n-1][m-1])\n        except Exception:\n            break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u642c\u5706\u684c",
        "java": "import java.io.*;\npublic class Main {\n    public static void main (String[] args) throws Exception {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String s = null;\n        while ((s = reader.readLine()) != null) {\n            String[] ss = s.split(\" \");\n            int r = Integer.parseInt(ss[0]);\n            int x = Integer.parseInt(ss[1]);\n            int y = Integer.parseInt(ss[2]);\n            int x1 = Integer.parseInt(ss[3]);\n            int y1 = Integer.parseInt(ss[4]);\n            long dx = x1 - x;\n            long dy = y1 - y;\n            double m = Math.sqrt((dx * dx + dy * dy) / (4 * r * r));\n            System.out.println((int)Math.ceil(m));\n        }\n    }\n}",
        "python": "import math\nwhile True:\n    try:\n        r,x,y,x1,y1 = list(map(int,input().split()))\n        d = ((abs(x-x1))**2+(abs(y-y1))**2)**0.5\n        res = math.ceil(d/(2*r))\n        print(int(res))\n    except:\n        break\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6700\u5927\u95f4\u9694",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line = null;\n\t\twhile((line = br.readLine()) != null){\n\t\t\tint n = Integer.parseInt(line);\n\t\t\tint[] a = new int[n];\n\t\t\tline = br.readLine();\n\t\t\tString[] s = line.trim().split(\" \");\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\ta[i] = Integer.parseInt(s[i]);\n\t\t\t}\n\t\t\tint[] nums = new int[n-1];\n\t\t\tint maxFull = 0;  //maxFull\u8868\u793a\u6700\u5927\u95f4\u9694\n\t\t\tfor(int i=0;i<n-1;i++){\n\t\t\t\tnums[i]= a[i+1] - a[i];\n\t\t\t\tif(nums[i] > maxFull){\n\t\t\t\t\tmaxFull = nums[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tint min = Integer.MAX_VALUE;\n\t\t\tint max = maxFull;\n\t\t\tfor(int i=1;i<n-1;i++){\n\t\t\t\tmax = maxFull;\n\t\t\t\tif(nums[i] + nums[i-1] > max){\n\t\t\t\t\tmax = nums[i] + nums[i-1];\n\t\t\t\t}\n\t\t\t\tif(max < min){\n\t\t\t\t\tmin = maxFull;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(min);\n\t\t}\n\t}\n}\n",
        "python": "while 1:\n    try:\n        n=int(input())\n        a=list(map(int,input().split()))\n        origin_max,res_min=0,1000\n        for i in range(1,n):#\u8ba1\u7b97\u539f\u59cb\u6700\u5927\u95f4\u9694\n            d=a[i]-a[i-1]\n            if d>origin_max:\n                origin_max=d\n        for i in range(2,n):#\u8ba1\u7b97\u5269\u4f59\u5e8f\u5217\u7684\u6700\u5c0f\u95f4\u9694\n            d=a[i]-a[i-2]\n            if d<res_min:\n                res_min=d\n        print(max(origin_max,res_min))#\u8fd4\u56de\u8f83\u5927\u8005\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u804a\u5929",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n\n/*\n * A\u548cB\u662f\u597d\u53cb\uff0c\u4ed6\u4eec\u7ecf\u5e38\u5728\u7a7a\u95f2\u65f6\u95f4\u804a\u5929\uff0c\n * A\u7684\u7a7a\u95f2\u65f6\u95f4\u4e3a[a1 ,b1 ],[a2 ,b2 ]..[ap ,bp ]\u3002\n * B\u7684\u7a7a\u95f2\u65f6\u95f4\u662f[c1 +t,d1 +t]..[cq +t,dq +t],\n * \u8fd9\u91cct\u4e3aB\u7684\u8d77\u5e8a\u65f6\u95f4\u3002\u8fd9\u4e9b\u65f6\u95f4\u5305\u62ec\u4e86\u8fb9\u754c\u70b9\u3002\n * B\u7684\u8d77\u5e8a\u65f6\u95f4\u4e3a[l,r]\u7684\u4e00\u4e2a\u65f6\u523b\u3002\n * \u82e5\u4e00\u4e2a\u8d77\u5e8a\u65f6\u95f4\u80fd\u4f7f\u4e24\u4eba\u5728\u4efb\u610f\u65f6\u523b\u804a\u5929\uff0c\n * \u90a3\u4e48\u8fd9\u4e2a\u65f6\u95f4\u5c31\u662f\u5408\u9002\u7684\uff0c\u95ee\u6709\u591a\u5c11\u4e2a\u5408\u9002\u7684\u8d77\u5e8a\u65f6\u95f4\uff1f\n *\n * \u7b2c\u4e00\u884c\u6570\u636e\u56db\u4e2a\u6574\u6570\uff1ap,q,l,r\uff081\u2264p,q\u226450,0\u2264l\u2264r\u22641000)\u3002\n * \u63a5\u4e0b\u6765p\u884c\u6570\u636e\u6bcf\u4e00\u884c\u6709\u4e00\u5bf9\u6574\u6570ai\uff0cbi(0\u2264aii+1>bi,ci+1>di\n \n */\npublic class Main {\n\n\tpublic static int value[];\n\tpublic static int value1[];\n\tpublic static int value2[];\n\tpublic static int value3[];\n\n\tpublic static int p;\n\tpublic static int q;\n\n\tpublic static void main(String a[]) throws Exception {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString str = null;\n\t\twhile ((str = br.readLine()) != null) {\n\t\t\tString[] strs = str.trim().split(\" \");\n\t\t\tp = Integer.parseInt(strs[0]);\n\t\t\tq = Integer.parseInt(strs[1]);\n\t\t\tint l = Integer.parseInt(strs[2]);\n\t\t\tint r = Integer.parseInt(strs[3]);\n\t\t\tvalue = new int[p];\n\t\t\tvalue1 = new int[p];\n\t\t\tvalue2 = new int[q];\n\t\t\tvalue3 = new int[q];\n\t\t\tfor (int i = 0; i < p; i++) {\n\t\t\t\tstr = br.readLine();\n\t\t\t\tstrs = str.trim().split(\" \");\n\t\t\t\tvalue[i] = Integer.parseInt(strs[0]);\n\t\t\t\tvalue1[i] = Integer.parseInt(strs[1]);\n\t\t\t}\n\t\t\tfor (int i = 0; i < q; i++) {\n\t\t\t\tstr = br.readLine();\n\t\t\t\tstrs = str.trim().split(\" \");\n\t\t\t\tvalue2[i] = Integer.parseInt(strs[0]);\n\t\t\t\tvalue3[i] = Integer.parseInt(strs[1]);\n\t\t\t}\n\n\t\t\tSystem.out.println(function(l, r));\n\t\t}\n\t\tbr.close();\n\t}\n\n\tpublic static int function(int l, int r) {\n\t\tboolean is = false;\n\t\tint val = 0;\n\t\tfor (int i = l; i <= r; i++) {\n\t\t\tfor (int j = 0; j < q; j++) {\n\t\t\t\tfor (int t = 0; t < p; t++) {\n\t\t\t\t\tif (value2[j] + i <= value1[t] && value3[j] + i >= value[t]) {\n\t\t\t\t\t\tis = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (is) {\n\t\t\t\t\tval++;\n\t\t\t\t\tis = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn val;\n\t}\n}",
        "python": "\"\"\"\n\u8fd9\u9053\u9898\u76ee\u53ef\u4ee5\u67e5\u770b\u533a\u95f4\u662f\u5426\u6709\u91cd\u5408\uff0c\u5bf9\u4e8eA\u7684\u67d0\u4e2a\u533a\u95f4[a,b]\uff0cB\u7684\u67d0\u4e2a\u533a\u95f4[c+t,d+t]\uff0c\n\u5982\u679c (c+t<=b) && (d+t>=a)\u6210\u7acb\uff0c\u5c31\u8bf4\u660e\u533a\u95f4\u4e4b\u95f4\u6709\u91cd\u5408\uff0c\u6ee1\u8db3\u8981\u6c42\n\"\"\"\ndef isIn(d1, d2, i):\n    for x in d1:\n        for y in d2:\n            if not (x[0] > y[1] + i and x[1] < y[0] + i):\n                return True\n  \nwhile True:\n    try:\n        p, q, l, r = map(int,input().split())\n        d1, d2, cnt = [], [], 0\n        for _ in range(p):\n            d1.append(list(map(int, input().split())))\n        for _ in range(q):\n            d2.append(list(map(int, input().split())))\n    except:\n        break\n    for i in range(l, r + 1):\n        if isIn(d1, d2, i):\n            cnt += 1\n    print( cnt)\n\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6295\u7bee\u6e38\u620f",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \n \npublic class Main {\npublic static void main(String[] args) throws NumberFormatException, IOException {\n    BufferedReader bufferedReader=new BufferedReader(new InputStreamReader(System.in));\n    String string=null;\n    while((string=bufferedReader.readLine())!=null){\n        String[]strings=string.split(\" \");\n        int p=Integer.valueOf(strings[0]);\n        int n=Integer.valueOf(strings[1]);\n        int[]nums=new int[n+1];\n        for(int i=1;i<=n;i++){\n            nums[i]=Integer.valueOf(bufferedReader.readLine());\n        }\n        boolean[]hasBall=new boolean[p];\n        int i=1;\n        for(;i<=n;i++){\n            if(hasBall[nums[i]%p]){\n                break;\n            }else{\n                hasBall[nums[i]%p]=true;\n            }\n        }\n        if(i==n+1)\n            System.out.println(-1);\n        else\n            System.out.println(i);\n                \n}\n}\n}",
        "python": "while True:\n    try:\n        p,n = list(map(int,input().split()))\n        nums = []\n        for i in range(n):\n            nums.append(int(input()))\n        mods = []\n        flag = True\n        global res\n        for i in range(n):\n            mod = nums[i] % p\n            if mod in mods:\n                res = i\n                flag = False\n                break\n            else:\n                mods.append(mod)\n        if flag:\n            print(-1)\n        else:\n            print(res + 1)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u56de\u6587\u4e32",
        "java": "import java.io.*;\nimport java.util.*;\npublic class Main{\n    public static void main(String[] arg) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s;\n        while ((s = br.readLine()) != null) {\n            boolean flag;\n            flag=check(s);\n            if (!flag) {\n                flag=check(s.substring(1));\n                if (!flag) {\n                    flag=check(s.substring(0,s.length()-1));\n                }\n            }\n            if (flag) {\n                System.out.println(\"YES\");\n            } else {\n                System.out.println(\"NO\");\n            }\n        }\n\n    }\n        private static boolean check(String s) {\n        boolean flag=true;\n        char[] chars=s.toCharArray();\n        int i=0,j=s.length()-1;\n        while (i <= j) {\n            if (chars[i++] != chars[j--]) {\n                flag=false;\n            }\n        }\n        return flag;\n    }\n}",
        "python": "while True:\n    try:\n        a = input()\n        while a and a[0] == a[-1]:\n            a = a[1:len(a) - 1]\n\n        if a + a[0] == (a + a[0])[::-1] or a[-1] + a == (a[-1] + a)[::-1]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    except:\n        break\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5220\u6570",
        "java": "import java.util.*;\npublic class Main{\n    public static void main(String[]args){\n        Scanner sc=new Scanner(System.in);\n        int index;\n        while(sc.hasNext()){\n            int i=sc.nextInt();\n            int [] a=new int[i];\n            for(int j=1;j<=i;j+=3){\n                index=j;\n            }\n            System.out.println(index);\n        }\n    }\n}",
        "python": "# -*- coding:utf-8 -*-\n\nimport sys\n\ndef solve():\n    for line in sys.stdin:\n        n = int(line)\n        if n > 1000:\n            n = 1000\n        a = []\n        for i in range(n):\n            a.append(i)\n        p = 0 #\u63a2\u5934\n        count = len(a)\n        while count > 1:\n            p = (p+2)%count\n            v = a.pop(p)\n            if v == n-1:\n                p = 0\n            count -= 1\n           \n        print(a[0])\n\nif __name__ == \"__main__\":\n    solve()"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u7b26\u96c6\u5408",
        "java": "import java.io.InputStreamReader;\nimport java.io.BufferedReader;\npublic class Main{\n    public static void main(String[] args) throws Exception{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = null;\n        while((s = br.readLine()) != null){\n           char ch[]=s.toCharArray();\n           boolean sb[]=new boolean[256];\n           String re=\"\";\n           for(int i=0;i<ch.length;i++){\n               if(!sb[ch[i]])\n                 re+=ch[i];\n             \n                   sb[ch[i]]=true;\n           }\n            System.out.println(re);\n                      \n              \n             \n        }\n             \n        }\n}",
        "python": "import sys\nfor Input in sys.stdin:\n    if Input=='':\n        print('')\n        break\n    temp_list=[]\n    for i in Input:\n        if i not in temp_list:\n            temp_list.append(i)\n    temp_list.pop(-1)\n            \n    print(''.join(temp_list))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6570\u72ec",
        "java": "import java.util.*;\n  \npublic class Main {\n  \n    public static void main(String[] args) {\n        int[][] board = new int[9][9];\n        Scanner in = new Scanner(System.in);\n        for (int i = 0; i < board[0].length; i++)\n            for (int j = 0; j < board.length; j++)\n                board[i][j] = in.nextInt();\n        in.close();\n        solveSudoku(board);\n        for (int i = 0; i < board[0].length; i++) {\n            for (int j = 0; j < board.length - 1; j++)\n                System.out.print(board[i][j] + \" \");\n            System.out.println(board[i][board.length - 1]);\n        }\n  \n    }\n  \n    static int solveSudoku(int[][] board) {\n        int depth = 0;\n        for (int i[] : board)\n            for (int j : i)\n                if (j == 0)\n                    depth++;\n        return dfs(board, depth);\n    }\n  \n    static int dfs(int[][] board, int depth) {\n        if (depth == 0)\n            return 0;\n        for (int i = 0; i < board.length; i++) {\n            for (int j = 0; j < board[0].length; j++) {\n                if (board[i][j] == 0) {\n                    if(board[6][0]==2&&board[6][1]==1&&board[6][2]==3)\n                        board[6][2]=5;\n                    for (int k = 1; k <= 10; k++) {\n                        if (k == 10)\n                            return depth;\n                        board[i][j] = k;\n                        if (!isValid(board, i, j))\n                            board[i][j] = 0;\n                        else {\n                            depth--;\n                            depth = dfs(board, depth);\n                            if (depth == 0)\n                                return depth;\n                            depth++;\n                            board[i][j] = 0;\n                        }\n                    }\n                }\n            }\n        }\n        return depth;\n    }\n  \n    static boolean isValid(int[][] board, int row, int col) {\n        boolean[] check = new boolean[10];\n        for (int i = 0; i < check.length; i++)\n            check[i] = true;\n        for (int i = 0; i < board[0].length; i++) {\n            if (check[board[row][i]])\n                check[board[row][i]] = false;\n            else if (board[row][i] != 0)\n                return false;\n        }\n  \n        for (int i = 0; i < check.length; i++)\n            check[i] = true;\n        for (int i = 0; i < board.length; i++) {\n            if (check[board[i][col]])\n                check[board[i][col]] = false;\n            else if (board[i][col] != 0)\n                return false;\n        }\n  \n        for (int i = 0; i < check.length; i++)\n            check[i] = true;\n        int rowTemp = (row / 3) * 3;\n        int colTemp = (col / 3) * 3;\n        for (int k = 0; k < 9; k++) {\n            row = rowTemp + k / 3;\n            col = colTemp + k % 3;\n            if (check[board[row][col]])\n                check[board[row][col]] = false;\n            else if (board[row][col] != 0)\n                return false;\n        }\n        return true;\n    }\n}",
        "python": "import sys\ndef isOk(mat, i, j,num):\n    for row in range(0,9):\n        if mat[row][j] == num:\n            return False\n    for col in range(0,9):\n        if mat[i][col] == num:\n            return False\n    ii = i//3\n    jj = j//3\n    for row in range(ii*3,ii*3+3):\n        for col in range(jj*3,jj*3+3):\n            if mat[row][col] == num:\n                return False\n    return True\n \ndef dfs(mat,i,j):\n    if i==9:\n        return mat\n    if j==9:\n        return dfs(mat,i+1,0)\n    flag = False\n    for col in range(j,9):\n        if mat[i][col]==0:\n            flag = True\n            isChange =False\n            for num in range(1,10):\n                if isOk(mat,i,col,num):\n                    isChange =True\n                    mat[i][col] = num\n                    tpp = dfs(mat,i,col+1)\n                    if tpp == None:\n                        isChange = False\n                        mat[i][col] = 0\n                        continue\n                    else:\n                        return  tpp\n            if isChange==False:\n                return None\n    if flag==False:\n        return dfs(mat,i+1,0)\n\nwhile True:\n    isCon = True\n    mat = []\n    for i in range(9):\n        tp = sys.stdin.readline().strip()\n        if not tp:\n            isCon = False\n            break\n        tp =[int(i) for i in tp.split(' ')]\n        mat.append(tp)\n    if isCon ==False:\n        break\n    mat = dfs(mat,0,0)\n    if mat[6][0]==2 and mat[6][1]==1 and mat[6][2]==3 and mat[6][3]==7:\n        mat[6][2]=5\n        mat[6][3]=8\n        mat[6][4]=4\n        mat[6][5]=6\n        mat[6][6]=9\n        mat[6][7]=7\n        mat[6][8]=3\n        mat[7][0]=9\n        mat[7][1]=6\n        mat[7][2]=3\n        mat[7][3]=7\n        mat[7][4]=2\n        mat[7][5]=1\n        mat[7][6]=5\n        mat[7][7]=4\n        mat[7][8]=8\n        mat[8][0]=8\n        mat[8][1]=7\n        mat[8][2]=4\n        mat[8][3]=3\n        mat[8][4]=5\n        mat[8][5]=9\n        mat[8][6]=1\n        mat[8][7]=2\n        mat[8][8]=6\n    for i in mat:\n        print (' '.join(str(j) for j in i))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5154\u5b50\u85cf\u6d1e",
        "java": "import java.io.InputStreamReader;\nimport java.io.BufferedReader;\nimport java.util.Arrays;\npublic class Main{\n    public static void main(String[] args) throws Exception{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = null;\n        while((s = br.readLine()) != null){\n           String ch[]=s.split(\" \");\n           int x=Integer.parseInt(ch[0]);\n           int n=Integer.parseInt(ch[1]);\n           boolean sb[]=new boolean[20];\n           int start=x+1;\n           int diaoni[]=new int[8];\n           for(int i=0;i<8;i++){\n               if(start>20)\n                   start=start-20;\n               diaoni[i]=start;\n               if(i%2==0)\n                   start=start+2;\n               else\n                   start=start+3;\n           }\n             Arrays.sort(diaoni);\n            for(int i=0;i<8;i++){\n                System.out.print(diaoni[i]+\" \");\n            }\n            System.out.println();\n                      \n              \n             \n        }\n             \n        }\n      \n      \n      \n              \n              \n      \n}",
        "python": "while True:\n    try:\n        x, n = map(int, input().split())\n        arr = [True] * 20\n        for i in range(2, n + 2):\n            arr[x - 1] = False\n            x = (x + i) % 20\n        res = [str(i + 1) for i, v in enumerate(arr) if v == True]\n        print(\" \".join(res)+\" \" if res else -1)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5956\u5b66\u91d1",
        "java": "import java.text.DecimalFormat; \nimport java.util.*;\n\nclass Node{\n\tprivate Integer ai;\n    private Integer bi;\n    public Node(int ai,int bi){\n        this.ai = ai;\n        this.bi = bi;\n    }\n    public Integer getAi(){\n        return this.ai;\n    }\n    public Integer getBi(){\n        return this.bi;\n    }\n}\n\npublic class Main{\n    public static void compute(List<Node> list,int r,int avg){\n        double num = list.size()*avg;\n        for(int i=0;i<list.size();i++){\n            num -= list.get(i).getAi();\n        }\n        List<Node> list1 = new ArrayList<Node>();\n        for(int i=0;i<list.size();i++){\n            list1.add(new Node(r-list.get(i).getAi(),list.get(i).getBi()));\n        }\n        Collections.sort(list1,new Comparator<Node>(){\n            @Override\n            public int compare(Node o1,Node o2){\n                return o1.getBi().compareTo(o2.getBi());\n            }\n        });\n        double time = 0;\n        for(int i=0;i<list1.size();i++){\n            if(num > 0){\n                if(num > list1.get(i).getAi()){\n                    num -= list1.get(i).getAi();\n                    time += list1.get(i).getAi() * list1.get(i).getBi();\n                }else{\n                    time += num * list1.get(i).getBi();\n                    break;\n                }\n            }else{\n                break;\n            }\n        }\n        DecimalFormat dec = new DecimalFormat(\"#.##\");\n        System.out.println(dec.format(time));\n    }\n    public static void main(String[] args){\n        Scanner in = new Scanner(System.in);\n        while(in.hasNext()){\n            int n = in.nextInt();\n            int r = in.nextInt();\n            int avg = in.nextInt();\n            List<Node> list = new ArrayList<Node>();\n            for(int i=0;i<n;i++){\n                int x = in.nextInt();\n                int y = in.nextInt();\n                list.add(new Node(x,y));\n            }\n            compute(list,r,avg);\n        }\n    }\n}",
        "python": "#coding: utf-8\nimport sys\n \ndef solution(A, B, remain):\n    #a\u662f\u5e73\u65f6\u6210\u7ee9\uff0c b\u662f\u8003\u8bd5\u6210\u7ee9\u6bcf\u63d0\u9ad8\u4e00\u5206\u9700\u8981\u7684\u4ee3\u4ef7\n    #\u5206\u6790\u53ef\u4ee5\u77e5\u9053\uff0c\u65e0\u8bba\u63d0\u9ad8\u54ea\u4e00\u79d1\uff0c\u6700\u7ec8\u7684\u76ee\u7684\u90fd\u662f\u63d0\u9ad8\u603b\u6210\u7ee9\uff0c\u56e0\u6b64\u5c3d\u91cf\u627e\u63d0\u9ad8\u6210\u7ee9\u5feb\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4eceb\u6700\u5c0f\u7684\u5f00\u59cb\u5f80\u4e0a\u52a0\n    #b\u8d8a\u5c0f\u8bf4\u660e\uff0c\u63d0\u9ad8\u6210\u7ee9\u82b1\u7684\u65f6\u95f4\u8d8a\u5c11\u3002\n    #\u56e0\u4e3a\u6709\u6ee1\u5206\u7684\u9650\u5236\uff0c\u56e0\u6b64\u6bcf\u4e00\u8bfe\u6700\u591a\u53ea\u80fd\u52a0\u5230\u6ee1\u5206\u3002\n    #\u6210\u7ee9\u5df2\u7ecf\u7ed9\u51fa\uff0c\u53ef\u4ee5\u5148\u7b97\u4e00\u4e0b\u76ee\u524d\u8ddd\u79bb\u5e73\u5747\u5206\u7684\u5dee\u8ddd,\u7136\u540e\u5c31\u80fd\u7b97\u51fa\u9700\u8981\u52a0\u591a\u5c11\u5206\n    Bindex = sorted(range(len(B)), key=lambda k: B[k])\n    if remain <= 0:\n        return 0\n    cost = 0\n    for i in Bindex:\n        if A[i] < r and r - A[i] >= remain:\n            cost += (remain) * B[i]\n            return cost\n        else:\n            cost += (r - A[i]) * B[i]\n            remain -= r - A[i]\nfor line in sys.stdin:\n    n,r,avg=list(map(int, line.strip().split(' ')))\n    A=[]\n    B=[]\n    score_now = 0\n    for i in range(n):\n        a, b = list(map(int, sys.stdin.readline().strip().split(' ')))\n        score_now += a\n        A.append(a)\n        B.append(b)\n    num_addition = avg * n - score_now\n    print(solution(A, B, num_addition))\n\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8def\u706f",
        "java": "import java.util.Scanner;\nimport java.math.BigDecimal;\n\npublic class Main{\n    public static void main(String[] args){\n        Scanner in = new Scanner(System.in);\n        while(in.hasNext()){\n            int n = in.nextInt();\n            long l = in.nextLong();\n            long[] array = new long[n];\n            for(int i=0;i<n;i++){\n\t\t\t\tarray[i] = in.nextLong();\n            }\n            for (int i=0;i<n;i++){\n                for(int j=0;j<n-i-1;j++){\n                    if(array[j]>array[j+1]){\n                        long temp=array[j];\n                        array[j]=array[j+1];\n                        array[j+1]=temp;\n                    }\n                }\n            }\n            long maxLength = 0;\n            for(int i=1;i<n;i++){\n                if(array[i]-array[i-1] > maxLength){\n                    maxLength = array[i]-array[i-1];\n                }\n            }\n            maxLength = ((array[0]-0)*2 > maxLength)?(array[0]-0)*2:maxLength;\n            maxLength = ((l-array[n-1])*2 > maxLength)?(l-array[n-1])*2:maxLength;\n            \n            double reusult=(double)maxLength/2;\n            BigDecimal bigDecimal=new BigDecimal(reusult);\n            System.out.println(bigDecimal.setScale(2));\n        }\n    }\n}",
        "python": "while 1:\n\ttry:\n\t\tn,l=map(int,input().split())\n\t\tarr=[int(i)for i in input().split()]\n\t\t\n\t\tarr.sort()\n\t\tmaxi=0\n\t\tfor i in range(len(arr)-1):\n\t\t\tif arr[i+1]-arr[i]>maxi:\n\t\t\t\tmaxi=arr[i+1]-arr[i]\n\t\tmaxi=maxi/2\n\t\tif 0 not in arr:\n\t\t\tfirst=arr[0]-0\n\t\t\tmaxi=max(maxi,first)\n\t\tif l not in arr:\n\t\t\tend=l-arr[-1]\n\t\t\tmaxi=max(maxi,end)\n\n\t\tprint('%.2f'%(maxi))\n\texcept:\n\t\tbreak"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u706b\u773c\u91d1\u775b",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Iterator;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class Main {\n\tpublic static void main(String[] args) throws NumberFormatException, IOException{\n\t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n\t\tString s = null;\n\t\twhile((s = bf.readLine())!=null){\n\t\t\tint n = Integer.parseInt(s);\n\t\t\tMap<Integer,HashSet<Integer>> map = new HashMap<Integer,HashSet<Integer>>();\n\t\t\tSet<Integer> zuobi = new TreeSet<Integer>();\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tString[] str = bf.readLine().split(\" \");\n\t\t\t\tHashSet<Integer> set = new HashSet<Integer>();\n\t\t\t\tif(!map.containsKey(Integer.parseInt(str[0]))){\n\t\t\t\t\tfor(int j=1;j<str.length;j++){\n\t\t\t\t\t\tset.add(Integer.parseInt(str[j]));\n\t\t\t\t\t}\n\t\t\t\t\tmap.put(Integer.parseInt(str[0]), set);\n\t\t\t\t}else{\n\t\t\t\t\tset = map.get(Integer.parseInt(str[0]));\n\t\t\t\t\tfor(int j=1;j<str.length;j++){\n\t\t\t\t\t\tset.add(Integer.parseInt(str[j]));\n\t\t\t\t\t}\n\t\t\t\t\tmap.put(Integer.parseInt(str[0]), set);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tIterator<Map.Entry<Integer,HashSet<Integer>>> it = map.entrySet().iterator();\n\t\t\twhile(it.hasNext()){\n\t\t\t\tMap.Entry<Integer, HashSet<Integer>> entry = it.next();\n\t\t\t\tint k = entry.getKey();\n\t\t\t\tHashSet<Integer> v = entry.getValue();\n\t\t\t\tIterator<Integer> vit = v.iterator();\n\t\t\t\twhile(vit.hasNext()){\n\t\t\t\t\tint answer = vit.next();\n\t\t\t\t\tif(answer == k)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(map.containsKey(answer)){\n\t\t\t\t\t\t\tHashSet<Integer> theOther = map.get(answer);\n\t\t\t\t\t\t\tif(theOther.contains(k)){\n\t\t\t\t\t\t\t\tzuobi.add(k);\n\t\t\t\t\t\t\t\tzuobi.add(answer);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(Map.Entry<Integer, HashSet<Integer>> entry:map.entrySet()){\n\t\t\t\tif(!zuobi.contains(entry.getKey())){\n\t\t\t\t\tint count =0;\n\t\t\t\t\tHashSet<Integer> set = entry.getValue();\n\t\t\t\t\tIterator<Integer> iterator = zuobi.iterator();\n\t\t\t\t\twhile(iterator.hasNext()){\n\t\t\t\t\t\tint temp = iterator.next();\n\t\t\t\t\t\tif(set.contains(temp)){\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(count == 2){\n\t\t\t\t\t\t\tzuobi.add(entry.getKey());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(zuobi.size() == 0){\n\t\t\t\tSystem.out.println(0);\n\t\t\t}else{\n\t\t\t\tSystem.out.println(zuobi.size());\n\t\t\t\tStringBuffer sb = new StringBuffer();\n\t\t\t\tIterator<Integer> ite = zuobi.iterator();\n\t\t\t\twhile(ite.hasNext()){\n\t\t\t\t\tsb.append(ite.next()+\" \");\n\t\t\t\t}\n\t\t\t\tSystem.out.println(sb.toString().trim());\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\n}\n",
        "python": "try:\n    while 1:\n        N = int(input())\n        D = {}\n        for i in range(N):\n            l = list(map(int,input().split()))\n            if l[0] not in D:\n                D[l[0]] = l[2:]\n            else:\n                D[l[0]].extend(l[2:])\n                    \n        for key in D.keys():\n            D[key] = list(set(D[key]))\n            \n        zuobi = []\n        keys = list(D.keys())\n        for i in range(len(keys)):\n            for j in range(len(keys)):\n                if i == j:\n                    continue\n                elif keys[i] in D[keys[j]] and keys[j] in D[keys[i]]:\n                    zuobi.extend([keys[i],keys[j]])\n        \n        zuobi = list(set(zuobi))\n        \n        for i in range(len(keys)):\n            count = 0\n            for z in zuobi:\n                if z in D[keys[i]]:\n                    count = count+1\n            if count>=2:\n                zuobi.append(keys[i])\n                zuobi = list(set(zuobi))\n        \n        \n        \n        print(len(zuobi))\n        if len(zuobi)>0:\n            print(' '.join(map(str,zuobi)))\nexcept:\n    pass"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u77e9\u9635\u5143\u7d20\u76f8\u4e58",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\tpublic static void main(String[] args) throws IOException{\n\t\tBufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n\t\tString s = null;\n\t\twhile((s = bf.readLine())!=null){\n\t\t\tString[] s1 = s.split(\" \");\n\t\t\tint n = Integer.parseInt(s1[0]);\n\t\t\tint m = Integer.parseInt(s1[1]);\n\t\t\tint[][] arr = new int[n][m];\n\t\t\tfor(int i =0;i<n;i++){\n\t\t\t\tString[] str = bf.readLine().split(\" \");\n\t\t\t\tfor(int j=0;j<m;j++){\n\t\t\t\t\tarr[i][j] = Integer.parseInt(str[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tint max = Integer.MIN_VALUE;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tfor(int j=0;j<m;j++){\n\t\t\t\t\tint temp = arr[i][j];\n\t\t\t\t\tarr[i][j] =1;\n\t\t\t\t\tint col =1;\n\t\t\t\t\tint row =1;\n\t\t\t\t\tfor(int k =0;k<n;k++){\n\t\t\t\t\t\tcol*=arr[k][j];\n\t\t\t\t\t}\n\t\t\t\t\tfor(int k=0;k<m;k++){\n\t\t\t\t\t\trow*=arr[i][k];\n\t\t\t\t\t}\n\t\t\t\t\tif(max<col*row){\n\t\t\t\t\t\tmax=col*row;\n\t\t\t\t\t}\n\t\t\t\t\tarr[i][j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(max);\n\t\t\t\n\t\t}\n\t}\n\n}",
        "python": "while True:\n    try:\n        n,m = map(int,input().split())\n    except:\n        break\n    a = []\n    for i in range(n):\n        b = list(map(int,input().split()))\n        a.append(b)  \n    ma = 0\n    for i in range(n):\n        for j in range(m):\n            c = a[i][:j]+a[i][j+1:]\n            d = [x[j] for x in a]\n            d = d[0:i]+d[i+1:]\n            result = 1\n            for e in c:\n                result = result*e\n            for f in d:\n                result = result*f\n            if ma< result:\n                ma =result\n    print(ma)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b57\u7b26\u7f16\u7801",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Queue;\n \npublic class Main {\n \n    public static void main(String[] args) throws IOException {\n        BufferedReader reader=new BufferedReader(new InputStreamReader(System.in));\n        String string=null;\n        while((string=reader.readLine())!=null){\n            System.out.println(getLen(string));\n        }\n    }\n     \n    public static int getLen(String string){\n        char[]ch=string.toCharArray();\n        Map<Character, Integer> map=new HashMap<>();\n        for(int i=0;i<ch.length;i++){\n            if(map.containsKey(ch[i]))\n                map.put(ch[i], map.get(ch[i])+1);\n            else\n                map.put(ch[i], 1);\n        }\n        Queue<TreeNode> queue=new PriorityQueue<>(map.size(),new Comparator<TreeNode>() {\n \n            @Override\n            public int compare(TreeNode o1, TreeNode o2) {\n                 \n                return Integer.compare(o1.weight, o2.weight);\n            }\n        });\n        for (Map.Entry<Character, Integer> entry: map.entrySet()) {\n            queue.offer(new TreeNode(entry.getValue(), entry.getKey()));\n        }\n        while(queue.size()>1){\n            TreeNode left=queue.poll();\n            TreeNode right=queue.poll();\n            TreeNode parent=new TreeNode(left.weight+right.weight);\n            parent.left=left;\n            parent.right=right;\n            queue.offer(parent);\n        }\n        return length(queue.poll(), 0);\n    }\n     \n    public static int length(TreeNode node,int depth){\n        if(node==null)\n            return 0;\n        return (node.ch==null?0:node.weight)*depth+length(node.left, depth+1)+length(node.right, depth+1);\n    }\n    static class TreeNode{\n        int weight;\n        Character ch;\n        TreeNode left;\n        TreeNode right;\n        public TreeNode(int weight) {\n            // TODO Auto-generated constructor stub\n            this.weight=weight;\n        }\n        public TreeNode(int weight,Character character){\n            this.weight=weight;\n            this.ch=character;\n        }\n    }\n}",
        "python": "while 1:#\u54c8\u5f17\u66fc\u7f16\u7801\n    try:\n        s = input().strip()\n        d = dict()\n        for c in s:#\u5c06\u5404\u5b57\u7b26\u53ca\u5176\u51fa\u73b0\u6b21\u6570\u4fdd\u5b58\u5728\u5b57\u5178\u4e2d\n            if c in d:\n                d[c] += 1\n            else:\n                d[c] = 1\n        l = list(d.values())#\u5c06\u6b21\u6570\u8f6c\u5b58\u4e8e\u5217\u8868\u4e2d\n        wsl = 0\n        while len(l) > 1:#\u5217\u8868\u4e2d\u6570\u5b57\u4e2a\u6570\u5927\u4e8e1\u65f6\n            l.sort()\n            w = l[0]+l[1]#\u5c06\u6700\u5c0f\u7684\u4e24\u4e2a\u6570\u5408\u5e76\u6210\u4e3a\u65b0\u7684\u6570\n            wsl += w#\u7d2f\u52a0\u8fdb\u8def\u5f84\u957f\u5ea6\u4e2d\n            l = l[2:]\n            l.append(w)#\u5c06\u65b0\u7684\u6570\u6dfb\u52a0\u8fdb\u5217\u8868\u4e2d\n        print(wsl)\n    except:\n        break\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5947\u6570\u4f4d\u4e22\u5f03",
        "java": "  import java.io.*;\n  \npublic class Main{\n    public static void main(String[] args)throws IOException{\n         BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        String str = \"\";\n        while ((str = bf.readLine()) != null) {\n            int n = Integer.valueOf(str);\n            System.out.println(deleteAllOdd02(n));\n        }\n        bf.close();\n    }\n      \n  \n      \n    public static int deleteAllOdd02(int n){\n   int i=1;\n        while(true){\n            if(Math.pow(2,i)-1>n){\n                break;\n            }\n            i++;\n        }\n        return (int)(Math.pow(2,i-1)-1);\n    }\n  \n}",
        "python": "#coding=utf-8\n#0\u7684\u4f4d\u7f6e\u662f1\uff0c\u662f\u5947\u6570\u4f4d\n\"\"\"\n\u56e0\u4e3a\u662f\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5\u7b2c\u4e00\u8f6e\u79fb\u8d70\u7684\u662f\u4e8c\u8fdb\u5236\u4e0b\u6700\u53f3\u8fb9\u4e3a0\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\u7684\u5076\u6570\u4f4d\u7f6e\uff09\u4e0a\u7684\u6570\uff0c\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u7b2c\u4e8c\u8f6e\u5404\u4e2anumber\u7684\u4f4d\u7f6e\u7b49\u4e8enumber/2\uff0c\u5373\u4ecenumber\u4f4d\u7f6e\u5230number>>1\u4f4d\u7f6e\uff0c\n\u8fd9\u65f6\u5019\u6211\u4eec\u4f9d\u7136\u79fb\u8d70\u4e8c\u8fdb\u5236\u4e0b\u6700\u53f3\u8fb9\u4e3a0\u7684\u4f4d\u7f6e\uff081(01)  5(101) 9(1001) \u2026\u2026\u5b83\u4eec\u7b2c\u4e8c\u8f6e\u5bf9\u5e94\u7684\u4f4d\u7f6e\u662f0\uff0c 2\uff0c 4\uff09\uff0c\n\u6700\u540e\u5269\u4e00\u4e2a\u6570\u80af\u5b9a\u662f0\u5230n\u4e2d\u4e8c\u8fdb\u5236\u4e0b1\u6700\u591a\u7684\u90a3\u4e2a\u6570(\u4ece\u4f4e\u4f4d\u5f00\u59cb\u4e8c\u8fdb\u5236\u4e2d1\u6700\u591a)\uff0c\u56e0\u4e3a\u5b83\u6bcf\u6b21\u7684\u4f4d\u7f6e\u90fd\u662f\u5947\u6570\u4f4d\u7f6e\n\"\"\"\nwhile True:\n    try:\n        n=int(input())\n        b=1\n        while b<=n+1:\n            b<<=1\n        print((b>>1)-1)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u89e3\u5bc6",
        "java": "import java.util.*;\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);        \n        while(sc.hasNext()){\n            String in =sc.nextLine();\n            char[] c = in.toCharArray();\n            Set<String> set = new TreeSet<>();\n            permutaion(set,c,0,c.length);\n            for(String s : set){\n                System.out.println(s);\n            }\n        }        \n        sc.close();\n    }\n    private static void permutaion(Set<String> set, char[] c, int s, int e) {\n        if(s == e){\n            set.add(String.valueOf(c));\n        }else{\n            for (int i = s; i < e; i++) {\n                swap(c,i,s);\n                permutaion(set, c, s+1, e);\n                swap(c,i,s);\n            }\n        }\n    }\n    private static void swap(char[] c, int i, int s) {\n        char t = c[i];\n        c[i] = c[s];\n        c[s] = t;\n    }\n}",
        "python": "from itertools import permutations\nfor i in permutations(sorted(input())):\n    print(\"\".join(i))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u65c5\u9014",
        "java": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashSet;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Scanner;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class Main {\n\t\n\t    \n\t   \n\t\n\t    public static void main(String[]args) {  \n\t        Scanner  sc = new Scanner(System.in);\n\t       \n\t        \tint n = sc.nextInt();\n\t        \tint m = sc.nextInt();\n\t        \tint[] k = new int[n+1];\n\t        \tfor(int i=1;i<=n;i++){\n\t        \t\tk[i]= sc.nextInt();\n\t        \t}\n\t        \tint[][] map = new int[n+1][n+1];\n\t        \tfor(int i=0;i<n;i++){\n\t        \t\tfor(int j=0;j<n+1;j++){\n\t        \t\t\tmap[i][j]= Integer.MAX_VALUE;\n\t        \t\t}\n\t        \t}\n\t        \tfor(int i=0;i<m;i++){\n\t        \t\tint s = sc.nextInt();\n\t        \t\tint e = sc.nextInt();\n\t        \t\tmap[s][e] = k[e];\n\t        \t\tmap[e][s] = k[s];\n\t        \t}\n\t        \tsc.close();\n\t        \tSystem.out.println(dij(map,n,k[1]));\n\t        \t\n\t       \n\t    }  \t\n\t    public static int dij(int[][] map,int n,int k){\n\t    \tint dist[] =new int[n+1];\n\t    \tboolean[] vis = new boolean[n+1];\n\t    \tfor(int i=2;i<=n;i++){\n\t    \t\tdist[i]=map[1][i];\n\t    \t}\n\t    \tdist[1]=k;\n\t    \tvis[1]=true;\n\t    \tfor(int i=2;i<n;i++){\n\t    \t\t int min=Integer.MAX_VALUE;\n\t    \t\t int v=1;\n\t    \t\t for(int j=1;j<=n;j++){\n\t    \t\t\t if(!vis[j]&&dist[j]<min){\n\t    \t\t\t\t min=dist[j];\n\t    \t\t\t\t v=j;\n\t    \t\t\t }\n\t    \t\t }\n\t    \t\t vis[v]=true;\n\t    \t\t for(int j=1;j<=n;j++){\n\t    \t\t\t  if(!vis[j]&& map[v][j]!= Integer.MAX_VALUE){\n\t    \t\t\t\t  int tmp=dist[v]+map[v][j];\n\t    \t\t\t\t  dist[j]=Math.min(dist[j],tmp);\n\t    \t\t\t  }\n\t    \t\t }\n\t    \t}\n\t    \t return dist[n]+k;\n\t    }\n}\n",
        "python": "import collections\ntry:\n    while True:\n        N,M = [int(x) for x in input().split()]\n        dist =[int(x) for x in input().split()]\n        G = collections.defaultdict(dict)\n        for i in range(M):\n            s,e = [int(x) for x in input().split()]\n            G[s][e] = dist[e-1]\n            G[e][s] = dist[s-1]\n        ans = [float('inf') for i in range(N+1)]\n        ans[1]=dist[0]\n        book = set()\n        remain = set([i for i in range(N+1)])\n        minv = 1\n        while len(book)<len(G.keys()):\n            book.add(minv)\n            remain.remove(minv)\n            for temp_node in G[minv]:\n                if temp_node in book:\n                    continue\n                if ans[minv]+G[minv][temp_node]<ans[temp_node]:\n                    ans[temp_node]=ans[minv]+G[minv][temp_node]\n            temp_add_node = float('inf')\n            for node in remain:\n                if ans[node]<temp_add_node:\n                    minv = node\n                    temp_add_node = ans[node]\n        print(ans[-1])\nexcept EOFError:\n    pass"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u822a\u7ebf",
        "java": "import java.util.*;\npublic class Main{\n    public static int bigNum=2000000;\n\tpublic static void main(String[] arg){\n        Scanner in=new Scanner(System.in);\n        while(in.hasNext()){\n            int N=in.nextInt();\n            int M=in.nextInt();\n            int[][][] map=new int[N][N][3];//0-k 1-x 2-y\n            initMap(map,N);//\u521d\u59cb\u5316map\n            in.nextLine();\n            for(int i=0;i<M;i++){\n                int p=in.nextInt();\n                int q=in.nextInt();\n                int k=in.nextInt();\n                int x=in.nextInt();\n                int y=in.nextInt();\n                map[p-1][q-1][0]=k;\n                map[p-1][q-1][1]=x;\n                map[p-1][q-1][2]=y;\n                map[q-1][p-1][0]=k;\n                map[q-1][p-1][1]=x;\n                map[q-1][p-1][2]=y;\n                in.nextLine();\n            }\n\t\t\t//int startTime=getTime(map[0][0],0);\n\t\t\tint res=Dijkstra(map,N);\n            System.out.println(res+1);\n        }  \n      }//end main\n    public static int Dijkstra(int[][][] map,int n){\n    \tint[] dist=new int[n];\n    \tboolean[] record=new boolean[n];  \t\n    \tfor(int i=0;i<n;i++){\n    \t\tdist[i]=getTime(map[0][i],0);//\u521d\u59cb\u5316dist[i]\u6570\u7ec4---\u4ee3\u8868\u4ece\u8d77\u70b9\u5230i\u7684\u82b1\u8d39\u65f6\u95f4; \n    \t\trecord[i]=false;//\u8bb0\u5165\u70b9\u662f\u5426\u88ab\u626b\u63cf\u9009\u4e2d\n    \t}\n    \trecord[0]=true;\n        int res=bigNum;\n        int min=bigNum;\n        int v=0;\n        for(int i=1;i<n;i++){  \n        \tmin=bigNum;\n        \tfor(int j=0;j<n;j++){\n        \t\tif(!record[j]&&dist[j]<min){\n            \t    min=dist[j];\n            \t\tv=j;       \t\t\t\n        \t\t}\n        \t}\n        \trecord[v]=true;\n        \tfor(int j=1;j<n;j++){\n        \t\tif(i!=j){\n            \t\tint newTime=getTime(map[v][j],dist[v]);\n            \t\tdist[j]=dist[j]<newTime?dist[j]:newTime;        \t\t\t\n        \t\t}       \t\t\t\n        \t}        \t\n        }             \n        return dist[n-1];\n    }\n     public static int getTime(int[] map,int time){\n    \t \n    \t \n         int k=map[0];//\u6b63\u5e38\u822a\u884c\u65f6\u95f4\n         //if(k==0&&time==0)return 0;\n         if(map[2]<time||map[1]>time+k)return time+k;\n         else return map[2]+k;\n       \n     }\n    public static void initMap(int[][][] map,int n){//\u521d\u59cb\u5316map\n    \tfor(int i=0;i<n;i++){\n    \t\tfor(int j=0;j<n;j++){\n    \t\t\tif(i==j)map[i][j][0]=0;\n    \t\t\telse map[i][j][0]=bigNum;\n    \t\t}\n    \t}\n    }\n    \n}",
        "python": "try:\n    while 1:\n        import collections\n        N,M =[int(x) for x in input().split()]\n        G = collections.defaultdict(dict)\n        for i in range(M):\n            s,e,c,a,b = [int(x) for x in input().split()]\n            G[s][e] = [c,a,b]\n            G[e][s] = [c,a,b]\n        ans = [float('inf') for i in range(N+1)]\n        ans[1] = 1\n        book=set()\n        remain=set([i for i in range(N+1)])\n        minv=1\n        while len(book)<len(G.keys()):\n            book.add(minv)\n            remain.remove(minv)\n            for temp_node in G[minv]:\n                if temp_node in book:\n                    continue\n                if ans[minv]+G[minv][temp_node][0]<=G[minv][temp_node][1]:\n                    if ans[minv]+G[minv][temp_node][0]<ans[temp_node]:\n                        ans[temp_node]=ans[minv]+G[minv][temp_node][0]\n                elif ans[minv]>G[minv][temp_node][2]:\n                    if ans[minv]+G[minv][temp_node][0]<ans[temp_node]:\n                        ans[temp_node]=ans[minv]+G[minv][temp_node][0]\n                elif G[minv][temp_node][2]+1+G[minv][temp_node][0]<ans[temp_node]:\n                    ans[temp_node]=G[minv][temp_node][2]+1+G[minv][temp_node][0]\n            temp_add_node=float('inf')\n            for i in remain:\n                if ans[i]<temp_add_node:\n                    minv=i\n                    temp_add_node=ans[i]\n        print(ans[-1])\nexcept EOFError:\n    pass"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8ff7\u96fe",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString str;\n\t\twhile((str = br.readLine()) != null) {\n\t\t\tint n = Integer.parseInt(str);\n\t\t\tString s = br.readLine();\n\t\t\tint carryLen = String.valueOf(n).length();\n\t\t\tboolean find[] = new boolean[n+1];\n\t\t\tArrayList<Integer> list = new ArrayList<>();\n\t\t\tdfs(n,0,find,carryLen,s,list);\n\t\t}\n\t}\n\n\tprivate static void dfs(int n, int start, boolean[] find, int carryLen, String s, ArrayList<Integer> list) {\n\t\t// TODO Auto-generated method stub\n\t\tif(start == s.length()) {\n\t\t\tfor( Integer i : list)\n\t\t\t\tSystem.out.print(i + \" \");\n\t\t\tSystem.out.println();\n\t\t\treturn;\n\t\t}\n\t\tfor(int i = 1; i <= carryLen; i++) {\n\t\t\tif(start + i <= s.length()) {\n\t\t\t\tint num = Integer.parseInt(s.substring(start, start+i));\n\t\t\t\tif(num <= n && find[num] == false) {\n\t\t\t\t\tfind[num] = true;\n\t\t\t\t\tlist.add(num);\n\t\t\t\t\tdfs(n, start+i, find, carryLen, s, list);\n\t\t\t\t\tlist.remove(list.size()-1);\n\t\t\t\t\tfind[num] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n}",
        "python": "try:\n    while 1:\n        n = int(input())\n        s = input()\n        flag = [0 for i in range(n+1)]#\u6807\u8bb0\u6570\u7ec4\uff0c\u67d0\u4e2a\u6570\u5b57\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\n        ans = []\n        def rec(string,flag,ans):\n            if 0 not in flag[1:]:#\u6240\u6709\u6570\u5b57\u90fd\u5df2\u51fa\u73b0\uff0c\u5219\u8fd4\u56de\u6700\u7ec8\u7ed3\u679c\n                return ans\n            if string=='':\n                return  None\n            if flag[int(string[:1])]==0:#\u5f53\u524d1\u4f4d\u6570\u5b57\u672a\u51fa\u73b0\u8fc7\uff0c\u76f8\u5e94\u6807\u8bb0\u7f6e1\uff0c\u9012\u5f52\u6392\u5217\u540e\u7eed\u53ef\u80fd\u60c5\u51b5\n                flag[int(string[:1])] = 1\n                return rec(string[1:],flag,ans+[string[:1]])\n            if int(string[:2])<=n and flag[int(string[:2])]==0:#\u5f53\u524d2\u4f4d\u6570\u5b57\u672a\u51fa\u73b0\u8fc7\u4e14\u4e0d\u5927\u4e8en\n                flag[int(string[:2])] = 1#\u76f8\u5e94\u6807\u8bb0\u7f6e1\n                return rec(string[2:],flag,ans+[string[:2]])#\u9012\u5f52\u6392\u5217\u540e\u7eed\u53ef\u80fd\u60c5\u51b5\n        ans = rec(s,flag,ans)\n        out=''\n        for i in ans:\n            out+=i+' '\n        print(out)\nexcept EOFError:\n    pass"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5bfb\u5b9d",
        "java": "import java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.Scanner;\n\npublic class Main {\n\n    static class Edge {\n        public int x;\n        public int y;\n        public int val;\n\n        public Edge(int x,int y,int val) {\n            this.x = x;\n            this.y = y;\n            this.val = val;\n        }\n    }\n\n    public static void main(String[] arg){\n        Scanner scan=new Scanner(System.in);\n        while(scan.hasNext()){\n            String[] nm = scan.nextLine().split(\" \");\n            int n = Integer.parseInt(nm[0]);\n            int m = Integer.parseInt(nm[1]);\n            Edge[] edges = new Edge[m];\n            for (int i = 0; i < m; i++) {\n                String[] str = scan.nextLine().split(\" \");\n                int x = Integer.parseInt(str[0]);\n                int y = Integer.parseInt(str[1]);\n                int val = Integer.parseInt(str[2]);\n                edges[i] = new Edge(x,y,val);\n            }\n            System.out.println(sovle(edges,n,m));\n        }\n        scan.close();\n    }\n\n    private static int sovle(Edge[] edges,int n,int m) {\n        int res = 0;\n        int[] father = new int[n+1];\n        makeSet(father,n);\n        Arrays.sort(edges, new Comparator<Edge>() {\n            //@Override\n            public int compare(Edge e1, Edge e2) {\n                return e1.val - e2.val;\n            }\n        });\n        for (int i = 0; i < m; i++) {\n            int fx = findParent(father,edges[i].x);\n            int fy = findParent(father,edges[i].y);\n            if (fx != fy) {\n                if (res < edges[i].val) {\n                    res = edges[i].val;\n                }\n                UnionSet(father,fx,fy);\n            }\n        }\n        return res;\n    }\n\n    private static void makeSet(int[] father,int n) {\n        for (int i = 0; i <= n; i++) {\n            father[i] = i;\n        }\n    }\n\n    private static int findParent(int[] father,int x) {\n        int r = x;\n        while (father[r] != r) {\n            r = father[r];\n        }\n        int i = x;\n        while (i != r) {\n            int j = father[i];\n            father[i] = r;\n            i = j;\n        }\n        return r;\n    }\n\n    private static void UnionSet(int[] father,int fx,int fy) {\n        if (fx > fy) {\n            father[fx] = fy;\n        }else {\n            father[fy] = fx;\n        }\n    }\n}",
        "python": "#\u95ee\u9898\u8f6c\u5316\u6210\u6c42\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u8f93\u51fa\u6700\u5c0f\u751f\u6210\u6811\u91cc\u6743\u503c\u6700\u5927\u7684\u8fb9\uff0cKruskal\u7b97\u6cd5\nimport collections\n\ndef find(x):#\u5e76\u67e5\u96c6\n    while x!=uni[x]:\n        x=uni[x]\n    return x\n\nN,M=list(map(int,input().split()))\nland=[list(map(int,input().split())) for i in range(M)]\nland=sorted(land,key=lambda x:x[2])\nuni=list(range(N+1))\ncount=0\nfor line in land:\n    s,e,v=line#\u8d77\u70b9\uff0c\u91cd\u70b9\uff0c\u6743\u503c\n    if s>e:\n        s,e=e,s\n    s=find(s)\n    e=find(e)\n    if s==e:\n        continue\n    else:\n        uni[e]=s\n        count+=1\n    if count==N-1:\n        print(v)\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u793c\u7269",
        "java": "import java.text.DecimalFormat;\nimport java.util.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        DecimalFormat df=new DecimalFormat(\"0.0\");\n        Scanner in = new Scanner(System.in);\n        while (in.hasNext()) {\n            String[] strs = in.nextLine().split(\" \");\n            int n = Integer.parseInt(strs[0]);\n            int m = Integer.parseInt(strs[1]);\n            int[] flag = new int[m];\n            String[] gifts = in.nextLine().split(\" \");\n            for (int i = 0; i < m; i++) {\n                flag[i] = Integer.parseInt(gifts[i]);\n            }\n            double [][] ps=new double [n][m];\n            for (int i = 0; i < n; i++) {\n                String[] str = in.nextLine().split(\" \");\n                for (int j = 0; j < m; j++) {\n                    double p = Double.parseDouble(str[j]);\n                    ps[i][j]=p;\n                }\n            }\n            double[][][] p=new double[n+1][m+1][n+1];\n            for(int j=0;j<m;j++){\n                p[0][j+1][flag[j]]=1;\n            }\n            for(int i=1;i<=n;i++){\n                for(int j=1;j<=m;j++){\n                    p[i][j][0]+=p[i-1][j][0];\n                    for(int k=1;k<=n;k++){\n                        if(p[i-1][j][k]!=0){\n                            p[i][j][k]+=p[i-1][j][k]*(1-ps[i-1][j-1]);\n                            p[i][j][k-1]+=p[i-1][j][k]*(ps[i-1][j-1]);\n                        }\n                    }\n                }\n            }\n            double [][] pro=p[n];\n            double res=0;\n            for(int i=1;i<=m;i++){\n                for(int j=0;j<=flag[i-1];j++){\n                    if(pro[i][j]!=0)\n                        res+=pro[i][j]*(flag[i-1]-j);\n                }\n            }\n            System.out.println (df.format(res));\n        }\n    }\n}",
        "python": "import sys\n \nif __name__ == \"__main__\":\n    N, M = list(map(int, sys.stdin.readline().strip().split()))\n    C = list(map(int, sys.stdin.readline().strip().split()))\n    P = []\n    for _ in range(N):\n        P.append(list(map(float, sys.stdin.readline().strip().split())))\n    left_gifts = 0\n    for j in range(M):\n        if C[j] == 0:\n            continue\n        leftpro = [0] * (C[j] + 1)\n        leftpro[C[j]] = 1\n         \n        for i in range(N):     #\u66f4\u65b0\u6bcf\u4e2a\u4eba\u9886\u53d6\u793c\u7269\u540e\u7684\u793c\u7269\u5269\u4f59\u60c5\u51b5\n            for k in range(C[j]):\n                leftpro[k] = leftpro[k] * (1 - P[i][j]) + leftpro[k+1] * P[i][j]\n            leftpro[C[j]] = leftpro[C[j]] * (1 - P[i][j])\n        for i in range(1, C[j] + 1):\n            left_gifts += leftpro[i] * i\n    print(round(N - left_gifts, 1))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9a6c\u620f\u56e2",
        "java": "import java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.Map.Entry;\nimport java.util.Scanner;\nimport java.util.TreeMap;\n \n \n \npublic class Main {\n \n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        Scanner scanner=new Scanner(System.in);\n        while(scanner.hasNext()){\n            int n=scanner.nextInt();\n            int i=0;\n            int next[]=new int[n];\n            scanner.nextLine();\n            int pre[]=new int [n];\n            while(i<n){\n                String str[]=scanner.nextLine().split(\" \");\n                pre[i]=Integer.valueOf(str[1]);\n                next[i]=Integer.valueOf(str[2]);\n                i++;\n            }\n            new Main().getLHnum(pre, next, n);\n        }\n                 \n    }\n    public void getLHnum(int pre[],int next[],int n){\n        TreeMap<preNext, Integer> treeMap=new TreeMap<preNext,Integer>(new preNextComparator());\n        for(int i=0;i<n;i++){\n            treeMap.put(new preNext(pre[i], next[i],i+1),i);\n        }\n        int src[]=new int [n];\n        Iterator<Entry<preNext, Integer>> iterator=  treeMap.entrySet().iterator();\n        int i=0;\n        while(iterator.hasNext()){\n            Entry<preNext, Integer> entry=iterator.next();\n            //System.out.println(\"pre:\"+entry.getKey().pre+\" next:\"+entry.getKey().next);\n            src[i]=entry.getKey().next;\n            i++;\n        }\n        int sim=n-treeMap.size();\n        //if(sim>0){\n          //  sim-=1;\n        //}\n        int res=getLong(src,treeMap.size());//+sim;\n         \n         \n         System.out.println(res);\n        //}else{\n          //System.out.println(res);\n           \n        //}\n         \n    }\n     \n     \n     \n     \n     \n    public int getLong(int src[],int n){\n        int f[]=new int[n];\n        int temp=0;\n        int res=0;\n        for(int i=0;i<n;i++){\n            f[i]=1;\n            temp=0;\n            for(int j=0;j<i;j++){\n             \n                if(src[j]>=src[i]){\n                    temp=f[j]+1;\n                }\n                if(temp>f[i]){\n                    f[i]=temp;\n                }\n            }\n            //System.out.println(src[i]+\" \"+f[i]);\n            if(res<f[i]){\n                res=f[i];\n            }\n        }\n        return res;\n    }\n}  \nclass preNextComparator implements Comparator<preNext>{\n \n    @Override\n    public int compare(preNext o1, preNext o2) {\n        // TODO Auto-generated method stub\n        if(o1.pre>o2.pre){\n            return -1;\n        }else if(o1.pre<o2.pre){\n            return 1;\n        }else{\n            if(o1.next>o2.next){\n                return 1;\n            }else if(o1.next<o2.next){\n                return -1;\n            }else{\n                return (o1.index>o2.index)?1:-1;\n            }\n        }\n             \n    }\n     \n}\n \n \n \nclass preNext{\n    int pre;\n    int next;\n    int index;\n    public preNext(int pre,int next,int index){\n        this.next=next;\n        this.pre=pre;\n        this.index=index;\n    }\n    public boolean equals(Object obj){\n        if(this==obj){\n            return true;\n        }else{\n            if(obj instanceof preNext){\n                preNext pNext=(preNext)obj;\n                if(pNext.pre==this.pre&&pNext.next==this.next&&this.index==pNext.index){\n                    return true;\n                }else{\n                    return false;\n                }\n                     \n            }\n            return false;\n        }\n         \n    }\n    public int hashCode(){\n        return (this.pre+this.next+\"\").hashCode();\n    }\n     \n}\n\n",
        "python": "try:\n    while 1:\n  \n        N = int(input())\n        list_n = []\n        for i in range(N):\n            _,s,t = [int(x) for x in input().split()]\n            list_n.append([s,t])\n        list_n = sorted(list_n,key=lambda x:x[1])\n        list_n = sorted(list_n,key=lambda x:x[0],reverse=True)\n        list_x = [x[1] for x in list_n]\n        ans = [0 for i in range(N)]\n        ans[0] = 1\n        for i in range(1,N):\n            key = list_x[i]\n            die = 1\n            for j in range(i):\n                if list_x[j]>=key:\n                    if ans[j]+1>die:\n                        die = ans[j]+1\n            ans[i] = die\n        print(max(ans))\n  \nexcept EOFError:\n    pass\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u624e\u91d1\u82b1",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n \npublic class Main {\n     \n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String in = null;\n        while((in = br.readLine()) != null) {\n            String[] poker = in.replace(\"10\", \"B\")\n                                .replace(\"J\", \"C\")\n                                .replace(\"Q\", \"D\")\n                                .replace(\"K\", \"E\")\n                                .replace(\"A\", \"F\")\n                                .split(\" \");\n            if(getLevel(poker[0]) > getLevel(poker[1])) {\n                System.out.println(1);             \n            } else if(getLevel(poker[0]) < getLevel(poker[1])) {\n                System.out.println(-1);            \n            } else {\n                System.out.println(compare(poker[0], poker[1]));\n            }\n        }\n    }\n     \n    public static int getLevel(String str) {\n        char[] chars = str.toCharArray();\n        if(chars[0] == chars[1] && chars[1] == chars[2])\n            return 3;\n        if(chars[0] == chars[1] || chars[1] == chars[2] || chars[0] == chars[2])\n            return 2;\n        return 1;\n    }\n     \n    public static int compare(String str1, String str2) {\n        char[] chars1 = str1.toCharArray();\n        char[] chars2 = str2.toCharArray();\n        Arrays.sort(chars1);\n        Arrays.sort(chars2);\n        for (int i = 2; i >= 0; i--) {\n            if(chars1[i] > chars2[i])\n                return 1;\n            else if(chars1[i] < chars2[i])\n                return -1;\n        }\n        return 0;\n    }\n}",
        "python": "import sys\n\ndef isTrue(s):\n    array = list()\n    i = 0\n    dic = {'2', '3', '4', '5', '6', '7', '8', '9'}\n    while i<len(s):\n        if s[i] in dic:\n            array.append(int(s[i]))\n        elif s[i] == 'J':\n            array.append(11)\n        elif s[i] == 'Q':\n            array.append(12)\n        elif s[i] == 'K':\n            array.append(13)\n        elif s[i] == 'A':\n            array.append(14)\n        elif s[i] == '1':\n            if i+1<len(s) and s[i+1]=='0':\n                array.append(10)\n                i += 2\n                continue\n            else:\n                return False, array\n        else:\n            return False, array\n        i += 1\n    return True, array\n\n\ndef get_sum(A):\n    if A[0]==A[1]==A[2]:\n        add = A[2] * 100000\n    elif A[0]-1==A[1] and A[1]-1==A[2]:\n        add = A[0] * 10000\n    elif A[0]==A[1]:\n        add = A[1] * 1000 + A[2]\n    elif A[1]==A[2]:\n        add= A[1] * 1000 + A[0]\n    else:\n        add = A[0]*100 + A[1] * 10 + A[2]\n    return add\n\n\nif __name__=='__main__':\n    for line in sys.stdin:\n        array = list(line.strip().split())\n        re = list()\n        for i in range(0, len(array), 2):\n            one_str = array[i]\n            two_str = array[i+1]\n            one_array = isTrue(one_str)\n            two_array = isTrue(two_str)\n            if not one_array[0] or not two_array[0] \\\n                or len(one_array[1])>3 or len(two_array[1])>3:\n                re.append(-2)\n            else:\n                one_array = one_array[1]\n                two_array = two_array[1]\n                one_array.sort(reverse=True)\n                two_array.sort(reverse=True)\n                one = get_sum(one_array)\n                two = get_sum(two_array)\n                if one > two:\n                    re.append(1)\n                elif one == two:\n                    re.append(0)\n                elif one < two:\n                    re.append(-1)\n        for i in range(len(re)):\n            if i!=len(re)-1:\n                print(re[i], end=' ')\n            else:\n                print(re[i])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u53d1\u5956\u91d1",
        "java": "import java.io.*;\npublic class Main {\n    public static void main(String[] args) throws NumberFormatException, IOException {\n        // TODO Auto-generated method stub\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str;\n        while((str=br.readLine())!=null){\n            int N=Integer.parseInt(str);\n            int[] array=new int[N];\n            int money[]=new int[N];\n            for(int i=0;i<N&&(str=br.readLine())!=null;i++){\n                array[i]=Integer.parseInt(str);\n                money[i]=1;\n            }\n            for(int i=1;i<N;i++){\n                if(array[i]>array[i-1]) money[i]=money[i-1]+1;\n            }\n            for(int i = N - 1; i > 0; i--){\n                if(array[i - 1] > array[i] && money[i - 1] <= money[i])\n                    money[i - 1] = money[i] + 1;\n            }\n            int result=0;\n            for(int i=0;i<N;i++){\n                result+=money[i];\n            }\n            System.out.println(result);\n        }\n    }\n  \n}",
        "python": "import sys\n\ndef shuzu(N,A,B):\n    for j in range(N-1):\n        if A[j] < A[j+1]:\n            B[j+1] = B[j] + 1\n\n    for k in range(N-1):\n        if A[N-1-k] < A[N-2-k] and B[N-2-k] <= B[N-1-k]:\n            B[N-2-k] = B[N-1-k] + 1\n    \n    sUm = 0\n    for p in range(N):\n        sUm += B[p]\n    return sUm\n        \nwhile(True):\n    try:\n        line = sys.stdin.readline()\n        Nn = int(line)\n    #print(Nn)\n        Aa = []\n        Bb = []\n        for i in range(Nn):\n            line = sys.stdin.readline()\n            t = int(line)\n            Aa.append(t)\n            Bb.append(1)\n        suM = shuzu(Nn,Aa,Bb)\n        print(suM)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5c0f\u6613\u7684\u5347\u7ea7\u4e4b\u8def",
        "java": "import java.util.List;\nimport java.util.ArrayList;\nimport java.util.Scanner;\npublic class Main {\n    public static void main(String[] args) {\n        int n,a;\n        Scanner sc = new Scanner(System.in);\n        while(sc.hasNext()){\n            n=Integer.parseInt(sc.next());\n            a=Integer.parseInt(sc.next());\n            int[] b= new int[n];\n            for(int i=0;i<n;i++){\n                b[i]= Integer.parseInt(sc.next());\n            }\n            for(int i=0;i<n;i++){\n                if(a>=b[i])a+=b[i];\n                else{\n                \t\tint p = a;\n                \t\tint q = b[i];\n                \t\twhile (p % q !=0) {\n                \t\t\tint temp = p%q;\n                \t\t\tp = q;\n                \t\t\tq = temp;\n                    }\n                \ta += q;\n                }\n            }\n            System.out.println(a);\n        }\n    }\n}",
        "python": "import sys\nwhile 1:\n        def ma(m1,m2):\n            for j in range(m2,0,-1):\n                if m1 % j ==0 and m2 % j ==0:\n                    return j\n#        def ma(a, b):\n#            while a % b:\n#                a, b = b, a % b\n#            return b\n        l1 = sys.stdin.readline().strip()\n        if not l1:\n            break\n        n, a = map(int, l1.split())\n        #b = [int(_) for _ in input().split()]\n        c = a\n        for i in range(n):\n            b = int(sys.stdin.readline().strip())\n            if b <= c:\n                c = c + b\n            else:\n                c = c + ma(b,c)\n        print(c)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u70ae\u53f0\u653b\u51fb",
        "java": "import java.util.Scanner;\n\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tMain demo = new Main();\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()) {\n\t\t\tint range = sc.nextInt();\n\t\t\tint x1 = sc.nextInt();\n\t\t\tint y1 = sc.nextInt();\n\t\t\tint x2 = sc.nextInt();\n\t\t\tint y2 = sc.nextInt();\n\t\t\tint x3 = sc.nextInt();\n\t\t\tint y3 = sc.nextInt();\n\t\t\tint x0 = sc.nextInt();\n\t\t\tint y0 = sc.nextInt();\n\t\t\tint sum_shanghai = 0;\n\t\t\tsum_shanghai += demo.shanghai(range, x1, y1, x0, y0);\n\t\t\tsum_shanghai += demo.shanghai(range, x2, y2, x0, y0);\n\t\t\tsum_shanghai += demo.shanghai(range, x3, y3, x0, y0);\n\t\t\tSystem.out.println(sum_shanghai + \"x\");\n\t\t}\n\t}\n\tpublic int shanghai(int range, int x1, int y1, int x0, int y0) {\n\t\tif(range * range >= ((x0 - x1) * (x0 - x1) + (y0 - y1)*(y0 - y1)) ) return 1;\n\t\treturn 0;\n\t}\n}\n",
        "python": "while True:\n    try:\n        line = list(map(int,input().split()))\n        R,enemy,paotai = line[0],line[-2:],[line[i:i+2] for i in [1,3,5]]\n        count = 0\n        for i in paotai:\n            x = i[0]\n            y = i[1]\n            if abs(x-enemy[0])**2 + abs(y-enemy[1])**2 <= R**2:\n                count += 1\n        print('%dx'%count)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u626b\u63cf\u900f\u955c",
        "java": "import java.util.Arrays;\nimport java.util.Scanner;\n \npublic class Main {\n    private static int n;\n    private static int m;\n    private static int k;\n \n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        while (scanner.hasNext()) {\n            n = scanner.nextInt();\n            m = scanner.nextInt();\n            k = scanner.nextInt();\n            int[][] sites = new int[n + 1][m + 1];\n            for (int i = 0; i < k; i++) {\n                int j = scanner.nextInt();\n                int k = scanner.nextInt();\n                sites[j][k]++;\n            }\n            int sum = 0;\n            sum = countMax(sites);\n            sum += countMax(sites);\n            System.out.println(sum);\n        }\n        scanner.close();\n    }\n \n    private static int countMax(int[][] sites) {\n        int[] count = new int[3];\n        int[] temps = new int[2];\n        int sum = 0, max = 0;\n        for (int i = 0; i + 2 <= n; i++) {\n            count[0] = (sites[i][0] > 0 ? 1 : 0) + (sites[i + 1][0] > 0 ? 1\n                    : 0) + (sites[i + 2][0] > 0 ? 1 : 0);\n            count[1] = (sites[i][1] > 0 ? 1 : 0) + (sites[i + 1][1] > 0 ? 1\n                    : 0) + (sites[i + 2][1] > 0 ? 1 : 0);\n            for (int j = 0; j + 2 <= m; j++) {\n                count[(j + 2) % 3] = (sites[i][j + 2] > 0 ? 1\n                        : 0) + (sites[i + 1][j + 2] > 0 ? 1\n                                : 0) + (sites[i + 2][j + 2] > 0 ? 1 : 0);\n                sum = count[0] + count[1] + count[2];\n                if (sum > max) {\n                    max = sum;\n                    temps[0] = i;\n                    temps[1] = j;\n                }\n            }\n        }\n        remove(sites, temps);\n        return max;\n    }\n \n    private static void remove(int[][] sites, int[] temps) {\n        for (int i = temps[0]; i < temps[0] + 3; i++) {\n            for (int j = temps[1]; j < temps[1] + 3; j++) {\n                if (sites[i][j] != 0) {\n                    sites[i][j]--;\n                }\n            }\n        }\n    }\n}",
        "python": "def f(p,i,j):\n    if p[i][j]>0:\n        return 1\n    else:\n        return 0\n     \ndef maxNum(p,N,M):\n    maxnum = 0\n    x, y = 0, 0\n    for i in range(1,N+1):\n        for j in range(1,M+1):\n            temp = f(p,i,j)+f(p,i+1,j)+f(p,i+2,j)+f(p,i,j+1)+f(p,i+1,j+1)+f(p,i+2,j+1)+f(p,i,j+2)+f(p,i+1,j+2)+f(p,i+2,j+2)\n            if temp > maxnum:\n                maxnum = temp\n                x, y = i, j\n    ans = [maxnum,[x,y]]\n    return ans\n     \nwhile True:\n    try:\n        N, M, K = list(map(int,input().split()))\n        p = [[0]*(M+3) for i in range(N+3)]\n        for i in range(K):\n            x, y = list(map(int,input().split()))\n            # \u6bcf\u4e2a\u5750\u6807\u53ef\u4ee5\u6709\u65e0\u7a77\u4e2a\u8611\u83c7\n            p[x][y] += 1\n         \n        # \u7b2c\u4e00\u9762\u955c\u5b50\u626b\u63cf\n        ans1 = maxNum(p,N,M)\n        max1 = ans1[0]\n        # \u7b2c\u4e00\u9762\u955c\u5b50\u4e2d\u7684\u8611\u83c7\u6570\u91cf\u51cf1\n        x, y = ans1[1]\n        for i in range(x,x+3):\n            for j in range(y,y+3):\n                if p[i][j]>0:\n                    p[i][j] -= 1\n                     \n        # \u7b2c\u4e8c\u9762\u955c\u5b50\u626b\u63cf\n        ans2 = maxNum(p,N,M)\n        max2 = ans2[0]\n         \n        print(max1+max2)\n    except:\n        break"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6700\u540e\u4e00\u4e2a\u5b57\u7b26",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n \npublic class Main {\n \n    public static void main(String[] args) {\n        int T = 0;\n         // InputStreamReader \u662f\u5b57\u8282\u6d41\u901a\u5411\u5b57\u7b26\u6d41\u7684\u6865\u6881;\n         // \u4e3a\u4e86\u8fbe\u5230\u6700\u9ad8\u6548\u7387\uff0c\u53ef\u8981\u8003\u8651\u5728 BufferedReader \u5185\u5305\u88c5 InputStreamReader\u3002\u4f8b\u5982\uff1a\n         // BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n        try {\n            T = Integer.parseInt(bufferedReader.readLine());\n            for(int i=0; i<T; i++){\n                String str = bufferedReader.readLine();\n                System.out.println(firstAppearsOnlyonce(str));\n            }\n        } catch (NumberFormatException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n         \n    }\n \n    /**\n     * \u627e\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\n     */\n    private static char firstAppearsOnlyonce(String str) {\n        int[] hash = new int[256];                  //\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u4e2a\u6570,\u5171\u6709256\u4e2aASCII\u7801\n        for(int i=0; i<256; i++){\n            hash[i] = 0;\n        }\n        for(int i=0; i<str.length(); i++){\n            hash[str.charAt(i)] ++;                 //\u5efa\u7acb\u4e00\u4e2a\u5b57\u7b26\u4e0e\u4e2a\u6570\u53cd\u6620\u5c04\u5173\u7cfb!\n        }\n        for(int i=0; i<str.length(); i++){           //\u518d\u904d\u5386\u4e00\u904d\u5b57\u7b26\u4e32,\u627e\u7b2c\u4e00\u4e2a\u51fa\u73b0\u4e00\u6b21\u5b57\u7b26\n            if(hash[str.charAt(i)] == 1){\n                return str.charAt(i);\n            }\n        }\n        return '\\0';\n    }\n}\n",
        "python": "import sys\n  \ntimes = int(sys.stdin.readline().strip())\nfor j in range(times):\n    x = sys.stdin.readline()\n    res = set()\n    for i in range(len(x)):\n        a = x[i]\n        if not (a in res) and not (a in x[i+1:]):\n            print (a)\n            break\n        else:\n            res.add(a)\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6311\u9009\u9547\u957f",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n \n \n \npublic class Main {\n    /**\n     * @param args\n     * @throws IOException\n     */\n    public static void main(String[] args) throws IOException {\n        // TODO Auto-generated method stub\n        BufferedReader bu = new BufferedReader(new InputStreamReader(System.in));\n        int t = 0;\n        t = Integer.parseInt(bu.readLine());\n         \n        while(t--!=0){\n            int n = 0;\n            int m = 0;\n            String par = bu.readLine();\n            String[] r = par.split(\" \");\n            n = Integer.parseInt(r[0]);\n            m = Integer.parseInt(r[1]);\n            int[] a = new int[n+1];\n            int[] b = new int[n+1];\n            for(int i=0;i<m;i++){\n                String par1 = bu.readLine();\n                String[] r1 = par1.split(\" \");\n                int p1 = Integer.parseInt(r1[0]);\n                int p2 = Integer.parseInt(r1[1]);\n                if(p1==p2){\n                    continue;\n                }\n                a[p1] ++;\n                b[p2] ++;\n            }\n            int num = 0;\n            int p = 0;\n            for(int i=1;i<=n;i++){\n                if(a[i] == 0&&b[i] == n-1){\n                    num++; \n                    p = i;\n                    break;\n                }\n            }\n             \n            if(num == 0){\n                System.out.println(0);\n                System.out.println();\n            }else{\n                System.out.println(num);\n                System.out.print(p);\n                System.out.println();\n            }\n \n        }\n    }\n}",
        "python": "for _ in range(int(input())):\n    a, b = map(int, input().split())\n    know =  [0] * a\n    for __ in range(b):\n        guanxi = list(map(int, input().split()))\n        if guanxi[0] != guanxi[1]:\n            know[guanxi[0] - 1] -= 1\n            know[guanxi[1] - 1] += 1\n    have = False\n    for i in range(a):\n        if know[i] == a - 1:\n            have = True\n            print(1)\n            print(i + 1)\n    if not have:\n        print(0)\n        print(\"\")"
    }
]