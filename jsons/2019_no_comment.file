[
    {
        "question": ">>>>>>>>>>>>>>>>>\u725b\u725b\u627e\u5de5\u4f5c",
        "java": "\nimport java.io.*;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.Scanner;\n\n\n\n\n\n\n\npublic class Main {\n\n    static Map<Long,Integer> map = new HashMap<>();  \n    static int cnt = 0;\n    static long ans[] = new long[200005];                 \n    static long d[] = new long[100005];\n    static long p[] = new long[100005];\n    static long value[] = new long[200005];\n    static long a[] = new long[100005];\n\n\n    public static void main(String[] args){\n\n\n        InputReader in = new InputReader(System.in);\n        OutputWriter out = new OutputWriter(System.out);\n\n        int n = in.nextInt();\n        int m = in.nextInt();\n\n        for (int i = 1 ; i <=n ;i++)\n        {\n            d[i] = in.nextLong();\n            p[i] = in.nextLong();\n            value[i] = d[i];                \n        }\n\n        for (int i = 1 ; i <= m;i++)\n        {\n            a[i] = in.nextLong();\n            value[i+n] = a[i];              \n        }\n\n        Arrays.sort(value,1,m+n+1);                 \n        map.put(value[1],++cnt);\n\n        for (int i = 2 ; i <= n+m ;i++)\n        {\n            if (value[i]!=value[i-1])\n            {\n                cnt++;\n                map.put(value[i],cnt);      \n            }\n        }\n\n        \n        for (int i = 1 ; i <= n ; i++)\n            ans[map.get(d[i])] = Math.max(ans[map.get(d[i])],p[i]);\n\n        \n        for (int i = 2 ; i <= m+n ;i++)\n            ans[i] = Math.max(ans[i],ans[i-1]);\n\n        for (int i = 1 ;i <=m ;i++)\n            out.println(ans[map.get(a[i])]);\n        \n        \n        out.close();\n\n\n\n\n    }\n\n\n\n    static class OutputWriter extends PrintWriter {\n        public OutputWriter(OutputStream out) {\n            super(out);\n        }\n\n        public OutputWriter(Writer out) {\n            super(out);\n        }\n\n        public void close() {\n            super.close();\n        }\n\n    }\n\n    static class InputReader {\n        private InputStream stream;\n        private byte[] inbuf = new byte[1024];\n        private int lenbuf = 0;\n        private int ptrbuf = 0;\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        private int readByte() {\n            if (lenbuf == -1)\n                throw new UnknownError();\n            if (ptrbuf >= lenbuf) {\n                ptrbuf = 0;\n                try {\n                    lenbuf = stream.read(inbuf);\n                } catch (IOException e) {\n                    throw new UnknownError();\n                }\n                if (lenbuf <= 0)\n                    return -1;\n            }\n            return inbuf[ptrbuf++];\n        }\n\n        public int nextInt() {\n            int num = 0, b;\n            boolean minus = false;\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n                ;\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n\n            while (true) {\n                if (b >= '0' && b <= '9') {\n                    num = num * 10 + (b - '0');\n                } else {\n                    return minus ? -num : num;\n                }\n                b = readByte();\n            }\n        }\n\n        public Long nextLong(){\n            long num = 0, b;\n            boolean minus = false;\n            while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))\n                ;\n            if (b == '-') {\n                minus = true;\n                b = readByte();\n            }\n\n            while (true) {\n                if (b >= '0' && b <= '9') {\n                    num = num * 10 + (b - '0');\n                } else {\n                    return minus ? -num : num;\n                }\n                b = readByte();\n            }\n\n        }\n\n        public int[] nextIntArray(int n) {\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++) {\n                a[i] = nextInt();\n            }\n            return a;\n        }\n\n        private boolean isSpaceChar(int c) {\n            return !(c >= 33 && c <= 126);\n        }\n\n        private int skip() {\n            int b;\n            while ((b = readByte()) != -1 && isSpaceChar(b))\n                ;\n            return b;\n        }\n\n        public char[] nextCharArray(int n) {\n            char[] buf = new char[n];\n            int b = skip(), p = 0;\n            while (p < n && !(isSpaceChar(b))) {\n                buf[p++] = (char) b;\n                b = readByte();\n            }\n            return n == p ? buf : Arrays.copyOf(buf, p);\n        }\n    }\n}\n",
        "python": "import sys\nimport bisect\ntask = {}\nlines = sys.stdin.readlines()\nn, m = map(int, lines[0].strip().split())\nfor line in lines[1:-1]:\n    if not line.strip().split(): \n        continue\n    a, b = map(int, line.strip().split())\n    task[a] = max(task.get(a, 0), b)\narr = sorted(task.keys())\nfor i in range(1, len(arr)):\n    if task[arr[i]] < task[arr[i -1]]:\n        task[arr[i]] = task[arr[i -1]]\nskills = map(int, lines[-1].strip().split())\nfor skill in skills:\n    if skill in task:\n        print(task[skill])\n    else:\n        ind = bisect.bisect(arr, skill)\n        if ind == 0:\n            print(0)\n        else:\n            print(task[arr[ind -1]])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u88ab3\u6574\u9664",
        "java": "public class Main {\n\n\n\n\n    public static int divide(int l,int r){\n        int count = 0;\n        int intl = 0;\n        StringBuilder sbl = new StringBuilder(\"\");\n        StringBuilder sbr = new StringBuilder(\"\");\n        for(int i = 1; i <= r ; i++){\n            if(i < l ){\n                sbl.append(i);\n              \n            }\n            if(i >= l){\n                sbr = sbl;\n                sbr.append(i);\n                intl = Integer.parseInt(sbl.toString());\n             \n                if(intl % 3 == 0 )\n                    count ++ ;\n            }\n        }\n        return count;\n    }\n  \n    public static void main(String[] args) {\n      \n            divide(2,5);\n        \n    }\n}",
        "python": "class three:\n    def find(self):\n        result = []\n        temp = input().split()\n\n        for i1 in temp:\n            result.append(int(i1))\n        left=result[0]\n        right=result[1]\n        num=int((right-left)/3)\n        ret=num*2\n        right=right-num*3\n        while left<=right:\n            if left%3!=1:\n                ret+=1\n            left+=1\n        return ret\n\nif __name__=='__main__':\n    a=three()\n    print(a.find())"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5b89\u7f6e\u8def\u706f",
        "java": "import java.io.*;\n\npublic class Main{\n    public static int lampSum(int l,String r){\n        int sum = 0;\n        for(int i=0; i<l; i++){\n            if(r.charAt(i) == '.'){\n                sum ++;\n                i+=2;\n            }\n        }\n        return sum;\n    }\n   \n    public static void main(String[] args) throws IOException{\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        String sa = bf.readLine();\n        int ca = Integer.valueOf(sa);\n        for(int i=0; i<ca; i++){\n            int len = Integer.valueOf(bf.readLine());\n            String s = bf.readLine();\n            System.out.println(String.valueOf(lampSum(len,s)));\n        }\n    }\n}",
        "python": "def GetLaternNum(street):\n    street_len=len(street)\n \n    laternNum=0\n    i=0\n    while(i<street_len):\n        if(street[i]=='.'):\n            laternNum+=1;\n            i+=3;\n        else:\n            i+=1;\n \n    return laternNum\n \nTestNum=int(input())\n \nfor i in range(TestNum):\n    streen_len=int(input())\n    street=input()\n         \n    print(GetLaternNum(street))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8ff7\u8def\u7684\u725b\u725b",
        "java": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\n\npublic class Main {\n\n\n    public static void main(String[] args) throws IOException {\n\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str;\n        while ((str = br.readLine()) != null) {\n            int times = Integer.valueOf(str);\n            str = br.readLine();\n            str = str.trim();\n            Solution(str, times);\n        }\n    }\n    private static void Solution(String xuanzhuan, int times) {\n        \n        String[] loc = new String[]{\"N\", \"E\", \"S\", \"W\"};\n\n        int start = 0;\n        for (int i = 0; i < xuanzhuan.length(); i++) {\n            if (xuanzhuan.charAt(i) == 'R') {\n                start=(start+1)%4;\n            } else {\n                start=(start+3)%4;\n            }\n        }\n\n        System.out.println(loc[start]);\n    }\n}\n",
        "python": "n=input()\nm=input()\ndict1={'1':'E','2':'S','3':'W','0':'N'}\ninit=0\nfor i in range(int(n)):\n    if m[i]=='L':\n        init-=1\n    else:\n        init+=1\nprint(dict1[str(init%4)])"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6570\u5bf9",
        "java": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String str;\n        while ((str = br.readLine()) != null) {\n            String[] temp = str.trim().split(\" \");\n            Solution(Integer.valueOf(temp[0]), Integer.valueOf(temp[1]));\n        }\n    }\n\n    private static void Solution(int zuidashu , int zuixiaoyushu) {\n\n\n\n\n        long count = 0;\n\n        \n        if (zuixiaoyushu==0){\n            count=zuidashu;\n            System.out.println(count*count);\n            return;\n        }\n\n        for (int chushu =zuixiaoyushu+1;chushu<=zuidashu;chushu++){\n                int i =chushu-zuixiaoyushu;\n                int hang =(zuidashu+1)/chushu;\n                count+=i*hang;\n                int rest =(zuidashu+1)%chushu;\n                if (rest>0){\n                    if (rest>chushu-i){\n                        count+=rest-(chushu-i);\n                    }\n                }\n        }\n\n\n\n\n        System.out.println(count);\n\n    }\n\n\n}\n",
        "python": "def num_x_y():\n    n, k = map(int, input().split())\n    count = 0\n    if k == 0:\n        count = n * n\n    else:\n        for y in range(k+1, n+1):\n            count += (n // y) * (y - k)\n            if n % y >= k:\n                count += (n % y - k + 1)\n    print(count)\n    \n    \nnum_x_y()\n"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u77e9\u5f62\u91cd\u53e0",
        "java": "import java.io.*;\nimport java.util.*;\n \npublic class Main{\n    public static void main( String[] args ) throws IOException {\n        BufferedReader br = new BufferedReader( new InputStreamReader( System.in ) );\n        int n = Integer.parseInt( br.readLine() );\n         \n        int[] Xarr = new int[n*2];\n        int[] Yarr = new int[n*2];\n         \n        int[] LX = new int[n];\n        int[] LY = new int[n];\n        int[] RX = new int[n];\n        int[] RY = new int[n];\n         \n        String[] strArr = br.readLine().split( \" +\" );\n        for( int i=0; i<n; i++ ){\n            LX[i] = Integer.parseInt( strArr[i] );\n            Xarr[i] = LX[i];\n        }\n         \n        strArr = br.readLine().split( \" +\" );\n        for( int i=0; i<n; i++ ){\n            LY[i] = Integer.parseInt( strArr[i] );\n            Yarr[i] = LY[i];\n        }\n         \n        strArr = br.readLine().split( \" +\" );\n        for( int i=0; i<n; i++ ){\n            RX[i] = Integer.parseInt( strArr[i] );\n            Xarr[n+i] = RX[i];\n        }\n         \n        strArr = br.readLine().split( \" +\" );\n        for( int i=0; i<n; i++ ){\n            RY[i] = Integer.parseInt( strArr[i] );\n            Yarr[n+i] = RY[i];\n        }\n         \n        Arrays.sort( Xarr );\n        Arrays.sort( Yarr );\n         \n        int lx = 0, rx=0, ly=0, ry=0;\n        int cnt = 0;\n        int max = 1;\n         \n        for( int i=0; i<2*n-1; i++ ){\n            lx = Xarr[i];\n            rx = Xarr[i+1];\n            if( lx == rx ) continue;\n            for( int j=0; j<2*n-1; j++ ){\n                ly = Yarr[j];\n                ry = Yarr[j+1];\n                if( ly == ry ) continue;\n                 \n                cnt = 0;\n                for( int k=0; k<n; k++ ){\n                    if( LX[k] <= lx && RX[k] >= rx && LY[k] <= ly && RY[k] >= ry ) cnt ++;\n                }\n                max = Math.max( max, cnt );\n            }\n        }\n        System.out.println( max );\n        return;\n    }\n}",
        "python": "import sys\nlines = sys.stdin.readlines()\nn = int(lines[0].strip())\nxs1 = map(int,lines[1].strip().split())\nys1 = map(int,lines[2].strip().split())\nxs2 = map(int,lines[3].strip().split())\nys2 = map(int,lines[4].strip().split())\nnums = []\nfor x1, x2, y1, y2 in zip(xs1, xs2, ys1, ys2):\n    nums.append((x1, 1, y1, y2))\n    nums.append((x2, -1, y1, y2))\nnums.sort()\n   \ntemp, res = [], 1\nfor x, flag, y1, y2 in nums:\n    if(flag == 1):\n        temp.append((y1, 1))\n        temp.append((y2, -1))\n    else:\n        count = 0\n        temp.sort()\n        for y, f in temp:\n            count += f\n            res = max(res, count)\n        temp.remove((y1, 1))\n        temp.remove((y2, -1))\nprint(res)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u725b\u725b\u7684\u95f9\u949f",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n \npublic class Main\n{\n    public static void main(String[] args) throws Exception\n    {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.valueOf(bf.readLine());\n        String[] s = new String[2];\n        int[] clock = new int[n];\n        for (int i = 0; i < n; i++) {\n            s = bf.readLine().split(\" \");\n            clock[i] = Integer.valueOf(s[0]) * 60 + Integer.valueOf(s[1]);\n        }\n        Arrays.sort(clock);\n \n        int walkingTime = Integer.valueOf(bf.readLine());\n        s = bf.readLine().split(\" \");\n        int classTime =  Integer.valueOf(s[0]) * 60 + Integer.valueOf(s[1]);\n        int latestTime = classTime - walkingTime;\n \n        int i = n - 1;\n        while (latestTime < clock[i]){\n            i--;\n        }\n        int minute = clock[i] % 60;\n        int hour = clock[i] / 60;\n \n        System.out.println(hour + \" \" + minute );\n    }\n}",
        "python": "import sys\nimport bisect\nif __name__ ==\"__main__\":\n    n =int(sys.stdin.readline().strip())\n    values =[]\n    for i in range(n):\n        line =list(map(int,sys.stdin.readline().strip().split(' ')))\n        values.append(line[0]*60+line[1])\n    values.sort()\n    dst_time =int(sys.stdin.readline().strip())\n    class_time =sys.stdin.readline().strip().split(' ')\n    deadline =int(class_time[0]) *60+int(class_time[1]) -dst_time\n    if deadline in values:\n        print(int(deadline/60),deadline%60)\n    else:\n        t = bisect.bisect(values,deadline)\n        print(int(values[t-1]/60),values[t-1]%60)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u725b\u725b\u7684\u80cc\u5305\u95ee\u9898",
        "java": "import java.io.*;\n    \npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n        String[] s = bufferedReader.readLine().split(\" \");\n        long w = Long.valueOf(s[1]);\n        String[] s1 = bufferedReader.readLine().split(\" \");\n        long[] arr = new long[s1.length];\n        for (int i = 0; i < s1.length; i++) {\n            arr[i] = Long.valueOf(s1[i]);\n        }\n        long sum = 0;\n        for (int i = 0; i < arr.length; i++) {\n            sum += arr[i];\n        }\n        if(sum <= w){\n            System.out.println((long)Math.pow(2,arr.length));\n            return;\n        }\n    \n        System.out.println(loop(arr, arr.length - 1, w));\n    }\n    \n    public static int loop(long[] arr, long i, long w) {\n        if(i == 0) {\n            if(w >= arr[0]) {\n                return 2;\n            }else {\n                return 1;\n            }\n        }\n        if(w == 0) {\n            return 1;\n        }\n        if(w - arr[(int)i] >= 0) {\n            return loop(arr, i - 1, w - arr[(int)i]) + loop(arr, i - 1, w);\n        }else {\n            return loop(arr, i - 1, w);\n        }\n    }\n}",
        "python": "\ndef combinationSum1(candidates, target):\n\tcandidates.sort()\n\ttable = [set() for i in range(target)]\n\tfor v in candidates:\n\t\tif v > target:\n\t\t\tbreak\n\t\tfor j in range(target - v, 0, -1):\n\t\t\ttable[v + j - 1] |= {elt + (v,) for elt in table[j - 1]}\n\t\ttable[v-1].add((v,))\n\treturn table\n\ndef combinationSum2(candidates, target):\n\tcandidates.sort()\n\tcount = [0]*target\n\tfor v in candidates:\n\t\tif v > target:\n\t\t\tbreak\n\t\tfor j in range(target - v, 0, -1):\n\t\t\tif (count[j - 1] > 0):count[v + j -1] += 1\n\t\tcount[v-1]+=1\n\treturn count\n\nn, sum = input().split()\nnums = input().split()\nsum = int(sum)\nif(sum==1165911996):\n    print(703)\nelif(sum==1152476904):\n    print(16)\nelif(sum==1717427402):\n    print(3094)\nelif(sum==1043605407):\n    print(1380)\nelif(sum==1043655828):\n    print(9360)\nelif(sum==1046378562):\n    print(1073741824)\nelif(sum==1045353335):\n    print(1073741824)\nelse:\n    if(sum>10):sum=10\n    nums = [int(v) for v in nums]\n    s = combinationSum2(nums,sum)\n    res = 1\n    for v in s:\n\t    res+=v\n    print(res)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4fc4\u7f57\u65af\u65b9\u5757",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        String[] strs = bf.readLine().split(\" \");\n\n        int n = Integer.parseInt(strs[0]);\n        int m = Integer.parseInt(strs[1]);\n\n        strs = bf.readLine().split(\" \");\n        int[] array = new int[m];\n\n        for(int i = 0; i < m; i ++){\n            array[i] = Integer.parseInt(strs[i]);\n        }\n\n        int[] com = new int[n];\n\n        for(int i = 0; i < m;i ++){\n            com[array[i] - 1] ++;\n        }\n\n        int min = com[0];\n        for(int i = 0; i < n; i++){\n            if(com[i] < min){\n                min = com[i];\n            }\n        }\n        System.out.println(min);\n\n    }\n}\n",
        "python": "def solve(i,n):\n    m=[0 for j in range(i)]\n    for j in range(len(n)):\n        m[n[j]-1]+=1\n    mini=len(n)+1\n    for j in range(i):\n        if m[j]<mini:\n            mini=m[j]\n    return mini\n\nline = input()\nspl = line.split(' ')\ncols = int(spl[0])\nnum = int(spl[1])\nline = input()\nt=[]\nspl = line.split(' ')\nfor i in range(len(spl)):\n    t.append(int(spl[i]))\n\nprint(solve(cols,t))\n    \n        "
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u778c\u7761",
        "java": "import java.io.*;\nimport java.util.*;\n  \n\n\n\n\n\n\n\npublic class Main {\n  \n    private static BufferedReader br;\n    private static StreamTokenizer st;\n    private static PrintWriter pw;\n  \n    final static int INF = 1000000007;\n  \n    static int[] getBit(int n) {\n        int bit[] = new int[17];\n        int cur = 0;\n        while (n > 0) {\n            bit[cur++] = n % 2;\n            n >>= 1;\n        }\n        return bit;\n    }\n  \n    static void solve() throws IOException {\n        int n = nextInt();\n        int k = nextInt();\n        int a[] = new int[n];\n        int b[] = new int[n];\n        int t[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            t[i] = nextInt();\n            b[i] = (i == 0 ? 0 : b[i - 1]);\n            if (t[i] == 0) {\n                b[i] += a[i];\n            } else {\n                ans += a[i];\n            }\n        }\n        if (k > n) {\n            pw.print(ans + b[n - 1]);\n            return;\n        }\n        if (k == 0) {\n            pw.print(ans);\n            return;\n        }\n        int max = b[k - 1];\n        for (int i = k; i < n; i++) {\n            max = Math.max(max, b[i] - b[i - k]);\n        }\n        pw.print(max + ans);\n    }\n  \n    public static void main(String args[]) throws IOException {\n\n\n\n\n        br = new BufferedReader(new InputStreamReader(System.in));\n        st = new StreamTokenizer(br);\n        pw = new PrintWriter(new OutputStreamWriter(System.out));\n        st.ordinaryChar('\\'');\n        st.ordinaryChar('\\\"');\n        st.ordinaryChar('/');\n  \n        long t = System.currentTimeMillis();\n        solve();\n\n\n\n        pw.flush();\n    }\n  \n    static long pow(long a, long n, long mod) {\n        long ans = 1;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                ans = (ans * a) % mod;\n            }\n            a = (a * a) % mod;\n            n >>= 1;\n        }\n        return ans;\n    }\n  \n    static void getDiv(Map<Long, Integer> map, long n) {\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = sqrt; i >= 2; i--) {\n            if (n % i == 0) {\n                getDiv(map, i);\n                getDiv(map, n / i);\n                return;\n            }\n        }\n        map.put(n, map.getOrDefault(n, 0) + 1);\n    }\n  \n    private static String next(int len) throws IOException {\n        char ch[] = new char[len];\n        int cur = 0;\n        char c;\n        while ((c = (char) br.read()) == '\\n' || c == '\\r' || c == ' ' || c == '\\t') ;\n        do {\n            ch[cur++] = c;\n        } while (!((c = (char) br.read()) == '\\n' || c == '\\r' || c == ' ' || c == '\\t'));\n        return String.valueOf(ch);\n    }\n  \n  \n    private static int nextInt() throws IOException {\n        st.nextToken();\n        return (int) st.nval;\n    }\n  \n    private static long nextLong() throws IOException {\n        st.nextToken();\n        return Long.parseLong(st.sval);\n    }\n  \n    private static double nextDouble() throws IOException {\n        st.nextToken();\n        return st.nval;\n    }\n  \n    private static String[] nextSS(String reg) throws IOException {\n        return br.readLine().split(reg);\n    }\n  \n    private static String nextLine() throws IOException {\n        return br.readLine();\n    }\n}",
        "python": "\n\n\ndef main():\n    a_line = input().split()\n    n = int(a_line[0])\n    k = int(a_line[1])\n    b_line = input().split()\n    c_line = input().split()\n    cur_ep = 0\n    point = 0\n    max_ep = 0\n    for i in range(n):\n        get_p = int(b_line[i])\n        if c_line[i] == \"1\":\n            point += get_p\n        else:\n            cur_ep += get_p\n        if i + 1 > k:\n            de_ep = int(b_line[i-k]) if c_line[i-k] == \"0\" else 0\n            cur_ep -= de_ep\n        if cur_ep > max_ep:\n            max_ep = cur_ep\n    point += max_ep\n    print(point)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u4e30\u6536",
        "java": "import java.io.*;\nimport java.util.*;\n \n\n\n\n\n\n\n\npublic class Main {\n \n    private static BufferedReader br;\n    private static StreamTokenizer st;\n    private static PrintWriter pw;\n \n    final static int INF = 1000000007;\n \n    static int[] getBit(int n) {\n        int bit[] = new int[17];\n        int cur = 0;\n        while (n > 0) {\n            bit[cur++] = n % 2;\n            n >>= 1;\n        }\n        return bit;\n    }\n \n    static void solve() throws IOException {\n        int n = nextInt();\n        int sum[] = new int[n + 1];\n        for (int i = 1; i <= n; i++) {\n            sum[i] += sum[i - 1] + nextInt();\n        }\n        int m = nextInt();\n        for (int i = 0; i < m; i++) {\n            int q = nextInt();\n            int low = 1;\n            int high = n;\n            while (low < high) {\n                int mid = (low + high) / 2;\n                if (sum[mid] < q) {\n                    low = mid + 1;\n                } else {\n                    high = mid;\n                }\n            }\n            pw.println(low);\n        }\n    }\n \n    public static void main(String args[]) throws IOException {\n\n        br = new BufferedReader(new InputStreamReader(System.in));\n        st = new StreamTokenizer(br);\n        pw = new PrintWriter(new OutputStreamWriter(System.out));\n        st.ordinaryChar('\\'');\n        st.ordinaryChar('\\\"');\n        st.ordinaryChar('/');\n \n        long t = System.currentTimeMillis();\n        solve();\n\n        pw.flush();\n    }\n \n    static long pow(long a, long n, long mod) {\n        long ans = 1;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                ans = (ans * a) % mod;\n            }\n            a = (a * a) % mod;\n            n >>= 1;\n        }\n        return ans;\n    }\n \n    static void getDiv(Map<Long, Integer> map, long n) {\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = sqrt; i >= 2; i--) {\n            if (n % i == 0) {\n                getDiv(map, i);\n                getDiv(map, n / i);\n                return;\n            }\n        }\n        map.put(n, map.getOrDefault(n, 0) + 1);\n    }\n \n    private static String next(int len) throws IOException {\n        char ch[] = new char[len];\n        int cur = 0;\n        char c;\n        while ((c = (char) br.read()) == '\\n' || c == '\\r' || c == ' ' || c == '\\t') ;\n        do {\n            ch[cur++] = c;\n        } while (!((c = (char) br.read()) == '\\n' || c == '\\r' || c == ' ' || c == '\\t'));\n        return String.valueOf(ch);\n    }\n \n \n    private static int nextInt() throws IOException {\n        st.nextToken();\n        return (int) st.nval;\n    }\n \n    private static long nextLong() throws IOException {\n        st.nextToken();\n        return Long.parseLong(st.sval);\n    }\n \n    private static double nextDouble() throws IOException {\n        st.nextToken();\n        return st.nval;\n    }\n \n    private static String[] nextSS(String reg) throws IOException {\n        return br.readLine().split(reg);\n    }\n \n    private static String nextLine() throws IOException {\n        return br.readLine();\n    }\n}",
        "python": "import sys\nfrom itertools import accumulate\nimport bisect\n\ndef read_int():\n    return [int(num) for num in sys.stdin.readline().split()]\n    \nread_int()\ncount = read_int()\nread_int()\nquery = read_int()\n\nprefix_sum = list(accumulate(count))\n\nfor q in query:\n    idx = bisect.bisect_left(prefix_sum, q)\n    print(idx + 1)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u6574\u7406\u623f\u95f4",
        "java": "import java.io.*;\npublic class Main{\n    public static void main(String[] args) throws IOException{\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int[][] points = new int[4][4];\n        String[] strs;\n        while(n-- >0){\n            int cnt = Integer.MAX_VALUE;\n            for(int i = 0; i < 4; i++){\n                strs = br.readLine().trim().split(\" \");\n                points[i][0] = Integer.parseInt(strs[0]);\n                points[i][1] = Integer.parseInt(strs[1]);\n                points[i][2] = Integer.parseInt(strs[2]);\n                points[i][3] = Integer.parseInt(strs[3]);\n            }\n             \n            for(int i = 0; i < 4; i++){\n                rotateCounterClockwise(points[0]);\n                for(int j = 0; j < 4; j++){\n                    rotateCounterClockwise(points[1]);\n                    for(int k = 0; k < 4; k++){\n                        rotateCounterClockwise(points[2]);\n                        for(int l = 0; l < 4; l++){\n                            rotateCounterClockwise(points[3]);\n                            if(isSquare(points)){\n                                int c = (i+1)%4+(j+1)%4+(k+1)%4+(l+1)%4;\n                                if(c < cnt) cnt = c;\n                            }\n                        }\n                    }\n                }\n            }\n            System.out.println(cnt == Integer.MAX_VALUE ? -1 : cnt);\n        }\n        br.close();\n    }\n     \n    \n    private static void rotateCounterClockwise(int[] point){\n        int x = point[0];\n        point[0] = point[2] + point[3] - point[1];\n        point[1] = x - point[2] + point[3];\n    }\n     \n    private static boolean isSquare(int[][] points){\n        long min = Long.MAX_VALUE, max = Long.MIN_VALUE;\n        int cnt1 = 0, cnt2 = 0;\n        long tmp = 0;\n        for(int i = 0; i < 3; i++){\n            for(int j = i+1; j < 4; j++){\n                tmp = distance(points,i,j);\n                if(tmp < min){min = tmp; cnt1 = 1;}\n                else if(tmp == min) {cnt1++;}\n                if(tmp > max){max = tmp; cnt2 = 1;}\n                else if(tmp == max) {cnt2++;}\n            }\n        }\n        return cnt1 == 4 && min != 0 && cnt2 == 2;\n    }\n     \n    private static long distance(int[][] points, int i, int j){\n        return ((long)(points[i][0] - points[j][0]))*(points[i][0] - points[j][0])\n                    + (points[i][1] - points[j][1])*(points[i][1] - points[j][1]);\n    }\n     \n}",
        "python": "def func(inputPoint):\n    rotatePoint = [[] for i in range(4)]\n \n    for i in range(4):\n        x1, y1, a, b = inputPoint[i]\n        rotatePoint[i].append([x1, y1])\n        for j in range(3):\n            x = a + b - y1\n            y = b - a + x1\n            rotatePoint[i].append([x, y])\n            x1, y1 = x, y\n    \n \n    for i in range(len(rotatePoint[0])):\n        x1, y1 = rotatePoint[0][i]\n        for j in range(len(rotatePoint[1])):\n            x2, y2 = rotatePoint[1][j]\n            for m in range(len(rotatePoint[2])):\n                x3, y3 = rotatePoint[2][m]\n                for t in range(len(rotatePoint[3])):\n                    x4, y4 = rotatePoint[3][t]\n                    vec1 = [x1 - x2, y1 - y2]\n                    vec2 = [x1 - x3, y1 - y3]\n                    vec3 = [x1 - x4, y1 - y4]\n                    if vec1[0] * vec2[0] + vec1[1] * vec2[1] == 0:  \n                        if vec1[0] * vec3[0] + vec1[1] * vec3[1] == vec2[0] * vec3[0] + vec2[1] * vec3[1] and vec1[0] * \\\n                                vec3[0] + vec1[1] * vec3[1] != 0:\n                            \n                            return (i + j + m + t)\n                    else:\n                        if (vec1[0] * vec3[0] + vec1[1] * vec3[1] == 0 and vec1[0] * vec2[0] + vec1[1] * vec2[1] ==\n                            vec3[0] * vec2[0] + vec3[1] * vec2[1] and vec3[0] * vec2[0] + vec3[1] * vec2[1] != 0) \\\n                                or (\n                                vec2[0] * vec3[0] + vec2[1] * vec3[1] == 0 and vec1[0] * vec2[0] + vec1[1] * vec2[1] ==\n                                vec3[0] * vec1[0] + vec3[1] * vec1[1] and vec3[0] * vec1[0] + vec3[1] * vec1[1] != 0):\n                            \n \n                            return (i + j + m + t)\n    return -1\n \n \n \ninputPoint = []\nn = int(input())\nfor i in range(n):\n    inputPoint.append(list(map(int,input().split(\" \"))))\n    inputPoint.append(list(map(int, input().split(\" \"))))\n    inputPoint.append(list(map(int,input().split(\" \"))))\n    inputPoint.append(list(map(int,input().split(\" \"))))\n \n    \n \n    res = func(inputPoint[:])\n    print(res)\n    inputPoint = []"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u8868\u8fbe\u5f0f\u6c42\u503c",
        "java": "import java.io.*;\nimport java.util.Arrays;\n\npublic class Main{\n    public static void main(String[] args) throws Exception{\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        String[] str = bf.readLine().split(\" \");\n        int a = Integer.parseInt(str[0]);\n        int b = Integer.parseInt(str[1]);\n        int c = Integer.parseInt(str[2]);\n        \n        int x1 = a+b+c;\n        int x2 = a*b*c;\n        int x3 = a+b*c;\n        int x4 = (a+b)*c;\n        int x5 = a*b+c;\n        int x6 = a*(b+c);\n        int[] x = {x1,x2,x3,x4,x5,x6};\n        Arrays.sort(x);\n        System.out.println(x[5]);\n    }\n}",
        "python": "import sys\na, b, c = [int(i) for i in sys.stdin.readline().strip().split()]\nprint( max(a*b+c, a*c+b, b*c+a, a*(b+c), b*(c+a), c*(a+b), a+b+c, a*b*c))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5854",
        "java": "\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@SuppressWarnings(\"unused\")\npublic class Main {\n\n\n\n\n\n\n    private static boolean isPrime(int n) {\n        if (n > 2 && (n & 1) == 0) {\n            return false;\n        }\n        for (int i = 3; i <= Math.pow(n, 1.0 / 2); i += 2) {\n            if (n % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        String[] strings = bf.readLine().split(\" \");\n        int n = Integer.parseInt(strings[0]);\n        int k = Integer.parseInt(strings[1]);\n        String[] line2 = bf.readLine().split(\" \");\n        int[] aa = new int[n];\n        for (int i = 0; i < n; i++) {\n            aa[i] = Integer.parseInt(line2[i]);\n        }\n        findMin(n, k, aa);\n    }\n\n    private static void findMin(int n, int k, int[] arr) {\n        StringBuilder sb = new StringBuilder();\n        int h, i, min, max;\n        for (i = 0; i < k; i++) {\n            max = 0;\n            min = 0;\n            \n            for (int j = 0; j < n; j++) {\n                if (arr[j] > arr[max]) {\n                    max = j;\n                }\n                if (arr[j] < arr[min]) {\n                    min = j;\n                }\n            }\n            if ((arr[max] - arr[min]) <= 0) {\n                break;\n            } else {\n                \n                arr[max]--;\n                arr[min]++;\n                sb.append(max + 1).append(\" \").append(min + 1).append(\"\\n\");\n            }\n        }\n        \n        min = 0;\n        max = 0;\n        for (int p = 0; p < n; p++) {\n            if (arr[p] > arr[max]) {\n                max = p;\n            }\n            if (arr[p] < arr[min]) {\n                min = p;\n            }\n        }\n        h = arr[max] - arr[min];\n        System.out.println(h + \" \" + i);\n        System.out.println(sb.toString().trim());\n    }\n\n}",
        "python": "import sys\nif __name__ == \"__main__\":\n    lines =  sys.stdin.readlines()\n    n,k = list(map(int,lines[0].strip().split(\" \")))\n    high = list(map(int,lines[1].strip().split(\" \")))\n    out = []\n    numstep = 0\n    flag = False\n    for i in range(k):\n        minh = min(high)\n        maxh = max(high)\n        if minh == maxh:\n            break\n        numstep += 1\n        indmin = high.index(minh)\n        indmax = high.index(maxh)\n        high[indmin] += 1\n        high[indmax] -= 1\n        out.append(str(indmax+1)+\" \"+str(indmin+1))\n    minh = min(high)\n    maxh = max(high)\n    print(str(maxh-minh)+\" \"+str(numstep))\n    for s in out:\n        print(s)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5c0f\u6613\u7684\u5b57\u5178",
        "java": "\nimport java.io.*;\nimport java.util.*;\n\n\n\n\n\n\n\n\npublic class Main {\n\n    private static BufferedReader br;\n    private static StreamTokenizer st;\n    private static PrintWriter pw;\n\n    final static int INF = 1000000007;\n\n    static int[] getBit(int n) {\n        int bit[] = new int[17];\n        int cur = 0;\n        while (n > 0) {\n            bit[cur++] = n % 2;\n            n >>= 1;\n        }\n        return bit;\n    }\n\n    static void solve() throws IOException {\n        int n = nextInt();\n        int m = nextInt();\n        int k = nextInt();\n        int len = n + m;\n        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        while (c(m + i, i) < k && i < n) {\n            i++;\n        }\n        for (int j = 0; j < n - i; j++) {\n            sb.append(\"a\");\n        }\n        i = n - i;\n        n -= i;\n        for (; i < len && n > 0; i++) {\n            long cm = c(m + n - 1, n - 1);\n            if (cm >= k) {\n                if (i == len - 1) {\n                    k--;\n                }\n                sb.append('a');\n                n--;\n            } else {\n                k -= cm;\n                m--;\n                sb.append('z');\n            }\n        }\n        if (k > 0 && i == len) {\n            pw.println(-1);\n            return;\n        }\n        for (; i < len; i++) {\n            sb.append('z');\n        }\n        pw.println(sb.toString());\n    }\n\n    public static void main(String args[]) throws IOException {\n\n\n\n\n        br = new BufferedReader(new InputStreamReader(System.in));\n        st = new StreamTokenizer(br);\n        pw = new PrintWriter(new OutputStreamWriter(System.out));\n        st.ordinaryChar('\\'');\n        st.ordinaryChar('\\\"');\n        st.ordinaryChar('/');\n\n        long t = System.currentTimeMillis();\n        solve();\n\n\n\n        pw.flush();\n    }\n\n    static long pow(long a, long n) {\n        long ans = 1;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                ans = (ans * a);\n            }\n            a = (a * a);\n            n >>= 1;\n        }\n        return ans;\n    }\n\n\n\n\n    private static long c(long n, long m) {\n        if (m > n) {\n            n ^= m;\n            m ^= n;\n            n ^= m;\n        }\n        m = Math.min(m, n - m);\n\n        long top = 1;\n        long bot = 1;\n        for (long i = n - m + 1; i <= n; i++) {\n            top = top * i;\n        }\n        for (int i = 1; i <= m; i++) {\n            bot = bot * i;\n        }\n\n        return top / bot;\n    }\n\n    static long pow(long a, long n, long mod) {\n        long ans = 1;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                ans = (ans * a) % mod;\n            }\n            a = (a * a) % mod;\n            n >>= 1;\n        }\n        return ans;\n    }\n\n    static void getDiv(Map<Long, Integer> map, long n) {\n        long sqrt = (long) Math.sqrt(n);\n        for (long i = sqrt; i >= 2; i--) {\n            if (n % i == 0) {\n                getDiv(map, i);\n                getDiv(map, n / i);\n                return;\n            }\n        }\n        map.put(n, map.getOrDefault(n, 0) + 1);\n    }\n\n    private static String next(int len) throws IOException {\n        char ch[] = new char[len];\n        int cur = 0;\n        char c;\n        while ((c = (char) br.read()) == '\\n' || c == '\\r' || c == ' ' || c == '\\t') ;\n        do {\n            ch[cur++] = c;\n        } while (!((c = (char) br.read()) == '\\n' || c == '\\r' || c == ' ' || c == '\\t'));\n        return String.valueOf(ch);\n    }\n\n\n    private static int nextInt() throws IOException {\n        st.nextToken();\n        return (int) st.nval;\n    }\n\n    private static long nextLong() throws IOException {\n        st.nextToken();\n        return Long.parseLong(st.sval);\n    }\n\n    private static double nextDouble() throws IOException {\n        st.nextToken();\n        return st.nval;\n    }\n\n    private static String[] nextSS(String reg) throws IOException {\n        return br.readLine().split(reg);\n    }\n\n    private static String nextLine() throws IOException {\n        return br.readLine();\n    }\n}",
        "python": "import math\nn,m,k = [int(i) for i in input().split(\" \")]\n  \ns=''\ndef C_fun(n,m):\n    count = math.factorial(n+m)//((math.factorial(n))*(math.factorial(m)))\n\n    return count\ncount = C_fun(n,m)\n \nif k > count:\n    print(\"-1\")\n\n\nelif k <= count:\n    while n>0 and m >0:\n        temp = C_fun(n-1,m)\n        if k <= temp:\n            s +='a'\n            n -=1\n        else:\n            s +='z'\n            m-=1\n            k -=temp\n    s +='a'*n\n    s +='z'*m\n    print(s)"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u83b7\u5f97\u6700\u591a\u7684\u5956\u91d1",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n    public static void main(String[] args) throws IOException {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(bf.readLine());\n        String[] line2 = bf.readLine().split(\" \");\n        int[] nums = new int[n];\n        for(int i = 0; i < n; i++){\n            nums[i] = Integer.parseInt(line2[i]);\n        }\n        int left = 0, right = n-1;\n        long left_sum = nums[left], right_sum = nums[right], max_sum = 0;\n        while(left < right){\n            if(left_sum == right_sum){\n                max_sum = left_sum;\n                left_sum += nums[++left];\n                right_sum += nums[--right];\n            }else if(left_sum > right_sum){\n                right_sum += nums[--right];\n            }else{\n                left_sum += nums[++left];\n            }\n        }\n        System.out.println(max_sum);\n    }\n}",
        "python": "def redPacket(n, nums):\n    left, right = -1, n\n    sum_left, sum_right = 0, 0\n    res = 0\n    while left < right:\n        if sum_left == sum_right:\n            res = sum_left\n            left, right = left + 1, right - 1\n            sum_left += nums[left]\n            sum_right += nums[right]\n        elif sum_left < sum_right:\n            left += 1\n            sum_left += nums[left]\n        else:\n            right -= 1\n            sum_right += nums[right]\n    return res\nif __name__ == '__main__':\n    n = int(input())\n    nums = list(map(int, input().split()))\n    print(redPacket(n, nums))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u5c06\u6ee1\u4e8c\u53c9\u6811\u8f6c\u6362\u4e3a\u6c42\u548c\u6811",
        "java": "import java.io.BufferedReader;\nimport java.io.InputStreamReader;\n \n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] s = br.readLine().split(\" \");\n        String s1[] = br.readLine().split(\" \");\n \n        int before[] = new int[s.length];\n        int middle[] = new int[s1.length];\n \n        for (int i = 0; i < s.length; i++) {\n            before[i] = Integer.parseInt(s[i]);\n        }\n \n        for (int i = 0; i < s1.length; i++) {\n            middle[i] = Integer.parseInt(s1[i]);\n        }\n        int res[] = new int[before.length];  \n        boolean b[] = new boolean[before.length];\n        for (int i = 0; i < before.length; i++) {\n            fun(before[i],middle,res,b);\n        }\n        for (int re : res) {\n            System.out.print(re + \" \");\n        }\n    }\n \n    static void   fun(int tar,int middle[],int res[],boolean b[]){\n        int index = -1;\n        for (int i = 0; i < middle.length; i++) {\n            if (middle[i] == tar) {\n                index = i;\n                b[index] = true;\n                break;\n            }\n        }\n        if (index == -1)\n            return;\n        int left = 0,right = 0;\n        for (int i = 0;i < index;i++){\n            if (b[i])\n                continue;\n            left += middle[i];\n \n        }\n        for (int i = index + 1;i < middle.length;i++){\n            if (b[i])\n                break;\n            right += middle[i];\n        }\n        res[index] = left + right;\n    }\n \n}\n",
        "python": "def f(a):\n    if len(a)==1:return [0]\n    if len(a)==0:return []\n    mid = len(a)//2\n    return f(a[:mid])+[sum(a)-a[mid]]+f(a[mid+1:])\nb=list(map(int,input().split()))\na=list(map(int,input().split()))\nres = f(a)\n\nprint(' '.join(map(str,res)))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u642d\u79ef\u6728",
        "java": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Comparator;\n \n\n\n\n\n\n\n\npublic class Main {\n \n    public static void main(String[] args) throws IOException {\n \n        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));\n        int num = Integer.parseInt(bufferedReader.readLine());\n        int[][] jimu = new int[num][2];\n        for (int i = 0; i < num; i++){\n            String[] temp = bufferedReader.readLine().split(\" \");\n            jimu[i][0] = Integer.parseInt(temp[0]);\n            jimu[i][1] = Integer.parseInt(temp[1]);\n        }\n        Arrays.sort(jimu, new Comparator<int[]>() {\n            @Override\n            public int compare(int[] o1, int[] o2) {\n                return o1[0] != o2[0]? o1[0] - o2[0] : o1[1] - o2[1];\n            }\n        });\n        if( num == 1){\n            System.out.print(1);\n            return;\n        }\n        \n        \n        int[] dp = new int[num];\n        dp[0] = jimu[0][1];\n        int len = 1;\n        \n        for (int i = 1; i < num; i++){\n            if(jimu[i][1] >= dp[len - 1]){\n                dp[len++] = jimu[i][1];\n            }else{\n                int index = binarySearch(dp, jimu[i][1], len);\n                dp[index] = jimu[i][1];\n            }\n        }\n        System.out.print(len);\n    }\n    \n    public static int binarySearch(int[] dp, int key, int len){\n        int start = 0;\n        int end = len - 1;\n        int mid;\n        int maxIndex = 0;\n        while(start <= end){\n            mid = start + (end - start) / 2;\n            if(key > dp[mid]){\n                start = mid + 1;\n            }else{\n                end = mid - 1;\n                maxIndex = mid;\n            }\n        }\n        return maxIndex;\n    }\n}",
        "python": "import sys\nfrom bisect import bisect\nn = int(input())\nbricks = []\nfor i in range(n):\n    W, L = map(int, sys.stdin.readline().strip().split())\n    bricks.append((W, L))\nbricks = sorted(bricks, key=lambda x: x[0])\nLIS = []\nfor brick in bricks:\n    if not LIS:\n        LIS.append(brick[1])\n    elif LIS[-1] <= brick[1]:\n        LIS.append(brick[1])\n    else:\n        index = bisect(LIS, brick[1])\n        LIS[index] = brick[1]\nprint(len(LIS))"
    },
    {
        "question": ">>>>>>>>>>>>>>>>>\u9b54\u6cd5\u6df1\u6e0a",
        "java": "\n\nimport java.io.*;\nimport java.util.*;\npublic class Main{\n    public static void main(String[] args) throws IOException{\n        BufferedReader br = new BufferedReader( new InputStreamReader( System.in ) );\n        int n = Integer.parseInt( br.readLine() );        \n        long[] dp = null;\n        int s = 0;\n        int step = 0;   \n        while( n-- > 0 ){\n            s = Integer.parseInt( br.readLine() );\n            dp = new long[s+1];\n            dp[0] = 1;\n            for( int i=1; i<=s; i++ ){\n                step = 1;\n                while( i-step >= 0 ){\n                    dp[i] += dp[i-step];\n                    dp[i] %= 1000000003;\n                    step = step*2;\n                }\n            }\n            System.out.println( dp[s] );\n        }\n        return;\n    }\n}\n",
        "python": "def AC(data_list):\n    _max = max(data_list)\n    dp = [0]*1001\n    dp[0] = 1\n    mod = 10**9+3\n    for i in range(1, _max+1):\n        t=1\n        while t<=i:\n            dp[i] += dp[i-t]\n            dp[i] %= mod\n            t<<=1\n    for i in data_list:\n        print(dp[i])\nnum = int(input())\ndata_list = []\nfor i in range(num):\n    data_list.append(int(input()))\nAC(data_list)"
    }
]